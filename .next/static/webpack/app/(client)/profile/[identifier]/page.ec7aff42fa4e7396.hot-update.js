"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(client)/profile/[identifier]/page",{

/***/ "(app-pages-browser)/./lib/hooks/useWallet.ts":
/*!********************************!*\
  !*** ./lib/hooks/useWallet.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useWallet: () => (/* binding */ useWallet)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/ethers/lib.esm/providers/provider-browser.js\");\n// lib/hooks/useWallet.ts\n/* __next_internal_client_entry_do_not_use__ useWallet auto */ \n\nconst FLOW_EVM_TESTNET = {\n    chainId: '0x221',\n    chainName: 'Flow EVM Testnet',\n    rpcUrls: [\n        'https://testnet.evm.nodes.onflow.org'\n    ],\n    blockExplorerUrls: [\n        'https://evm-testnet.flowscan.org'\n    ],\n    nativeCurrency: {\n        name: 'Flow',\n        symbol: 'FLOW',\n        decimals: 18\n    }\n};\nfunction useWallet() {\n    const [provider, setProvider] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [address, setAddress] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isConnecting, setIsConnecting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const debounceRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useWallet.useEffect\": ()=>{\n            if (window.ethereum) {\n                const handleAccountsChanged = {\n                    \"useWallet.useEffect.handleAccountsChanged\": (accounts)=>{\n                        clearTimeout(debounceRef.current);\n                        debounceRef.current = setTimeout({\n                            \"useWallet.useEffect.handleAccountsChanged\": ()=>{\n                                console.log('Account changed:', accounts);\n                                if (accounts.length > 0) {\n                                    const provider = new ethers__WEBPACK_IMPORTED_MODULE_1__.BrowserProvider(window.ethereum);\n                                    setProvider(provider);\n                                    setAddress(accounts[0]);\n                                } else {\n                                    setAddress(null);\n                                    setProvider(null);\n                                }\n                            }\n                        }[\"useWallet.useEffect.handleAccountsChanged\"], 100);\n                    }\n                }[\"useWallet.useEffect.handleAccountsChanged\"];\n                // Check if already connected WITHOUT prompting\n                window.ethereum.request({\n                    method: 'eth_accounts' // Using eth_accounts instead of eth_requestAccounts\n                }).then(handleAccountsChanged).catch(console.error);\n                window.ethereum.on('accountsChanged', handleAccountsChanged);\n                return ({\n                    \"useWallet.useEffect\": ()=>{\n                        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n                    }\n                })[\"useWallet.useEffect\"];\n            }\n        }\n    }[\"useWallet.useEffect\"], []);\n    const ensureCorrectNetwork = async ()=>{\n        if (!window.ethereum) return;\n        const currentChainId = await window.ethereum.request({\n            method: 'eth_chainId'\n        });\n        if (currentChainId !== FLOW_EVM_TESTNET.chainId) {\n            try {\n                await window.ethereum.request({\n                    method: 'wallet_switchEthereumChain',\n                    params: [\n                        {\n                            chainId: FLOW_EVM_TESTNET.chainId\n                        }\n                    ]\n                });\n            } catch (error) {\n                if (error.code === 4902) {\n                    // Network not added, add it\n                    await window.ethereum.request({\n                        method: 'wallet_addEthereumChain',\n                        params: [\n                            FLOW_EVM_TESTNET\n                        ]\n                    });\n                } else {\n                    throw error;\n                }\n            }\n        }\n    };\n    const connect = async (walletType)=>{\n        try {\n            setIsConnecting(true);\n            console.log('Starting wallet connection for:', walletType || 'MetaMask');\n            if (!window.ethereum) {\n                console.log('No ethereum object found');\n                setError('Please install MetaMask or another EVM wallet');\n                return;\n            }\n            // Ensure we're on Flow EVM Testnet\n            await ensureCorrectNetwork();\n            console.log('Requesting accounts...');\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_1__.BrowserProvider(window.ethereum);\n            const accounts = await window.ethereum.request({\n                method: 'eth_requestAccounts'\n            });\n            console.log('Accounts received:', accounts);\n            if (accounts.length > 0) {\n                console.log('Setting provider and address');\n                setProvider(provider);\n                setAddress(accounts[0]);\n                setError(null);\n                return provider;\n            }\n        } catch (err) {\n            var _err_message;\n            // Check for user rejection\n            if (err.code === 4001 || ((_err_message = err.message) === null || _err_message === void 0 ? void 0 : _err_message.includes('rejected'))) {\n                // User rejected the request - this is normal, don't show an error\n                console.log('User cancelled the connection request');\n                return;\n            }\n            // Handle other errors\n            console.error('Wallet connection error:', err);\n            setError('Failed to connect wallet');\n            setProvider(null);\n            setAddress(null);\n        } finally{\n            setIsConnecting(false);\n        }\n    };\n    const connectWallet = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useWallet.useCallback[connectWallet]\": async ()=>{\n            return connect();\n        }\n    }[\"useWallet.useCallback[connectWallet]\"], []);\n    const disconnectWallet = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useWallet.useCallback[disconnectWallet]\": ()=>{\n            setAddress(null);\n            setProvider(null);\n            setError(null);\n        }\n    }[\"useWallet.useCallback[disconnectWallet]\"], []);\n    return {\n        provider,\n        address,\n        isConnected: !!address,\n        error,\n        connect,\n        connectWallet,\n        disconnectWallet,\n        isConnecting\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9ob29rcy91c2VXYWxsZXQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHlCQUF5QjsrREFFdUM7QUFDakM7QUFFL0IsTUFBTUssbUJBQW1CO0lBQ3ZCQyxTQUFTO0lBQ1RDLFdBQVc7SUFDWEMsU0FBUztRQUFDO0tBQXVDO0lBQ2pEQyxtQkFBbUI7UUFBQztLQUFtQztJQUN2REMsZ0JBQWdCO1FBQ2RDLE1BQU07UUFDTkMsUUFBUTtRQUNSQyxVQUFVO0lBQ1o7QUFDRjtBQUVPLFNBQVNDO0lBQ2QsTUFBTSxDQUFDQyxVQUFVQyxZQUFZLEdBQUdoQiwrQ0FBUUEsQ0FBZ0M7SUFDeEUsTUFBTSxDQUFDaUIsU0FBU0MsV0FBVyxHQUFHbEIsK0NBQVFBLENBQWdCO0lBQ3RELE1BQU0sQ0FBQ21CLE9BQU9DLFNBQVMsR0FBR3BCLCtDQUFRQSxDQUFnQjtJQUNsRCxNQUFNLENBQUNxQixjQUFjQyxnQkFBZ0IsR0FBR3RCLCtDQUFRQSxDQUFDO0lBRWpELE1BQU11QixjQUFjcEIsNkNBQU1BO0lBRTFCRixnREFBU0E7K0JBQUM7WUFDUixJQUFJdUIsT0FBT0MsUUFBUSxFQUFFO2dCQUNuQixNQUFNQztpRUFBd0IsQ0FBQ0M7d0JBQzdCQyxhQUFhTCxZQUFZTSxPQUFPO3dCQUNoQ04sWUFBWU0sT0FBTyxHQUFHQzt5RUFBVztnQ0FDL0JDLFFBQVFDLEdBQUcsQ0FBQyxvQkFBb0JMO2dDQUNoQyxJQUFJQSxTQUFTTSxNQUFNLEdBQUcsR0FBRztvQ0FDdkIsTUFBTWxCLFdBQVcsSUFBSVgsbURBQXNCLENBQUNvQixPQUFPQyxRQUFRO29DQUMzRFQsWUFBWUQ7b0NBQ1pHLFdBQVdTLFFBQVEsQ0FBQyxFQUFFO2dDQUN4QixPQUFPO29DQUNMVCxXQUFXO29DQUNYRixZQUFZO2dDQUNkOzRCQUNGO3dFQUFHO29CQUNMOztnQkFFQSwrQ0FBK0M7Z0JBQy9DUSxPQUFPQyxRQUFRLENBQUNVLE9BQU8sQ0FBQztvQkFDdEJDLFFBQVEsZUFBZ0Isb0RBQW9EO2dCQUM5RSxHQUNHQyxJQUFJLENBQUNYLHVCQUNMWSxLQUFLLENBQUNQLFFBQVFaLEtBQUs7Z0JBRXRCSyxPQUFPQyxRQUFRLENBQUNjLEVBQUUsQ0FBQyxtQkFBbUJiO2dCQUV0QzsyQ0FBTzt3QkFDTEYsT0FBT0MsUUFBUSxDQUFDZSxjQUFjLENBQUMsbUJBQW1CZDtvQkFDcEQ7O1lBQ0Y7UUFDRjs4QkFBRyxFQUFFO0lBRUwsTUFBTWUsdUJBQXVCO1FBQzNCLElBQUksQ0FBQ2pCLE9BQU9DLFFBQVEsRUFBRTtRQUV0QixNQUFNaUIsaUJBQWlCLE1BQU1sQixPQUFPQyxRQUFRLENBQUNVLE9BQU8sQ0FBQztZQUFFQyxRQUFRO1FBQWM7UUFFN0UsSUFBSU0sbUJBQW1CckMsaUJBQWlCQyxPQUFPLEVBQUU7WUFDL0MsSUFBSTtnQkFDRixNQUFNa0IsT0FBT0MsUUFBUSxDQUFDVSxPQUFPLENBQUM7b0JBQzVCQyxRQUFRO29CQUNSTyxRQUFRO3dCQUFDOzRCQUFFckMsU0FBU0QsaUJBQWlCQyxPQUFPO3dCQUFDO3FCQUFFO2dCQUNqRDtZQUNGLEVBQUUsT0FBT2EsT0FBWTtnQkFDbkIsSUFBSUEsTUFBTXlCLElBQUksS0FBSyxNQUFNO29CQUN2Qiw0QkFBNEI7b0JBQzVCLE1BQU1wQixPQUFPQyxRQUFRLENBQUNVLE9BQU8sQ0FBQzt3QkFDNUJDLFFBQVE7d0JBQ1JPLFFBQVE7NEJBQUN0Qzt5QkFBaUI7b0JBQzVCO2dCQUNGLE9BQU87b0JBQ0wsTUFBTWM7Z0JBQ1I7WUFDRjtRQUNGO0lBQ0Y7SUFFQSxNQUFNMEIsVUFBVSxPQUFPQztRQUNyQixJQUFJO1lBQ0Z4QixnQkFBZ0I7WUFDaEJTLFFBQVFDLEdBQUcsQ0FBQyxtQ0FBbUNjLGNBQWM7WUFFN0QsSUFBSSxDQUFDdEIsT0FBT0MsUUFBUSxFQUFFO2dCQUNwQk0sUUFBUUMsR0FBRyxDQUFDO2dCQUNaWixTQUFTO2dCQUNUO1lBQ0Y7WUFFQSxtQ0FBbUM7WUFDbkMsTUFBTXFCO1lBRU5WLFFBQVFDLEdBQUcsQ0FBQztZQUNaLE1BQU1qQixXQUFXLElBQUlYLG1EQUFzQixDQUFDb0IsT0FBT0MsUUFBUTtZQUMzRCxNQUFNRSxXQUFXLE1BQU1ILE9BQU9DLFFBQVEsQ0FBQ1UsT0FBTyxDQUFDO2dCQUM3Q0MsUUFBUTtZQUNWO1lBRUFMLFFBQVFDLEdBQUcsQ0FBQyxzQkFBc0JMO1lBQ2xDLElBQUlBLFNBQVNNLE1BQU0sR0FBRyxHQUFHO2dCQUN2QkYsUUFBUUMsR0FBRyxDQUFDO2dCQUNaaEIsWUFBWUQ7Z0JBQ1pHLFdBQVdTLFFBQVEsQ0FBQyxFQUFFO2dCQUN0QlAsU0FBUztnQkFDVCxPQUFPTDtZQUNUO1FBQ0YsRUFBRSxPQUFPZ0MsS0FBVTtnQkFFUUE7WUFEekIsMkJBQTJCO1lBQzNCLElBQUlBLElBQUlILElBQUksS0FBSyxVQUFRRyxlQUFBQSxJQUFJQyxPQUFPLGNBQVhELG1DQUFBQSxhQUFhRSxRQUFRLENBQUMsY0FBYTtnQkFDMUQsa0VBQWtFO2dCQUNsRWxCLFFBQVFDLEdBQUcsQ0FBQztnQkFDWjtZQUNGO1lBRUEsc0JBQXNCO1lBQ3RCRCxRQUFRWixLQUFLLENBQUMsNEJBQTRCNEI7WUFDMUMzQixTQUFTO1lBQ1RKLFlBQVk7WUFDWkUsV0FBVztRQUNiLFNBQVU7WUFDUkksZ0JBQWdCO1FBQ2xCO0lBQ0Y7SUFFQSxNQUFNNEIsZ0JBQWdCaEQsa0RBQVdBO2dEQUFDO1lBQ2hDLE9BQU8yQztRQUNUOytDQUFHLEVBQUU7SUFFTCxNQUFNTSxtQkFBbUJqRCxrREFBV0E7bURBQUM7WUFDbkNnQixXQUFXO1lBQ1hGLFlBQVk7WUFDWkksU0FBUztRQUNYO2tEQUFHLEVBQUU7SUFFTCxPQUFPO1FBQ0xMO1FBQ0FFO1FBQ0FtQyxhQUFhLENBQUMsQ0FBQ25DO1FBQ2ZFO1FBQ0EwQjtRQUNBSztRQUNBQztRQUNBOUI7SUFDRjtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvZGFuaWVscGV0ZXJzL0RvY3VtZW50cy9JbW11dGFibGUzL2FwcC9saWIvaG9va3MvdXNlV2FsbGV0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGxpYi9ob29rcy91c2VXYWxsZXQudHNcbid1c2UgY2xpZW50J1xuaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCwgdXNlQ2FsbGJhY2ssIHVzZVJlZiB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgZXRoZXJzIH0gZnJvbSAnZXRoZXJzJ1xuXG5jb25zdCBGTE9XX0VWTV9URVNUTkVUID0ge1xuICBjaGFpbklkOiAnMHgyMjEnLFxuICBjaGFpbk5hbWU6ICdGbG93IEVWTSBUZXN0bmV0JyxcbiAgcnBjVXJsczogWydodHRwczovL3Rlc3RuZXQuZXZtLm5vZGVzLm9uZmxvdy5vcmcnXSxcbiAgYmxvY2tFeHBsb3JlclVybHM6IFsnaHR0cHM6Ly9ldm0tdGVzdG5ldC5mbG93c2Nhbi5vcmcnXSxcbiAgbmF0aXZlQ3VycmVuY3k6IHtcbiAgICBuYW1lOiAnRmxvdycsXG4gICAgc3ltYm9sOiAnRkxPVycsXG4gICAgZGVjaW1hbHM6IDE4XG4gIH1cbn07XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VXYWxsZXQoKSB7XG4gIGNvbnN0IFtwcm92aWRlciwgc2V0UHJvdmlkZXJdID0gdXNlU3RhdGU8ZXRoZXJzLkJyb3dzZXJQcm92aWRlciB8IG51bGw+KG51bGwpXG4gIGNvbnN0IFthZGRyZXNzLCBzZXRBZGRyZXNzXSA9IHVzZVN0YXRlPHN0cmluZyB8IG51bGw+KG51bGwpXG4gIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbClcbiAgY29uc3QgW2lzQ29ubmVjdGluZywgc2V0SXNDb25uZWN0aW5nXSA9IHVzZVN0YXRlKGZhbHNlKVxuXG4gIGNvbnN0IGRlYm91bmNlUmVmID0gdXNlUmVmPE5vZGVKUy5UaW1lb3V0PigpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHdpbmRvdy5ldGhlcmV1bSkge1xuICAgICAgY29uc3QgaGFuZGxlQWNjb3VudHNDaGFuZ2VkID0gKGFjY291bnRzOiBzdHJpbmdbXSkgPT4ge1xuICAgICAgICBjbGVhclRpbWVvdXQoZGVib3VuY2VSZWYuY3VycmVudCk7XG4gICAgICAgIGRlYm91bmNlUmVmLmN1cnJlbnQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnQWNjb3VudCBjaGFuZ2VkOicsIGFjY291bnRzKTtcbiAgICAgICAgICBpZiAoYWNjb3VudHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgY29uc3QgcHJvdmlkZXIgPSBuZXcgZXRoZXJzLkJyb3dzZXJQcm92aWRlcih3aW5kb3cuZXRoZXJldW0pO1xuICAgICAgICAgICAgc2V0UHJvdmlkZXIocHJvdmlkZXIpO1xuICAgICAgICAgICAgc2V0QWRkcmVzcyhhY2NvdW50c1swXSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNldEFkZHJlc3MobnVsbCk7XG4gICAgICAgICAgICBzZXRQcm92aWRlcihudWxsKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sIDEwMCk7XG4gICAgICB9O1xuXG4gICAgICAvLyBDaGVjayBpZiBhbHJlYWR5IGNvbm5lY3RlZCBXSVRIT1VUIHByb21wdGluZ1xuICAgICAgd2luZG93LmV0aGVyZXVtLnJlcXVlc3QoeyBcbiAgICAgICAgbWV0aG9kOiAnZXRoX2FjY291bnRzJyAgLy8gVXNpbmcgZXRoX2FjY291bnRzIGluc3RlYWQgb2YgZXRoX3JlcXVlc3RBY2NvdW50c1xuICAgICAgfSlcbiAgICAgICAgLnRoZW4oaGFuZGxlQWNjb3VudHNDaGFuZ2VkKVxuICAgICAgICAuY2F0Y2goY29uc29sZS5lcnJvcilcblxuICAgICAgd2luZG93LmV0aGVyZXVtLm9uKCdhY2NvdW50c0NoYW5nZWQnLCBoYW5kbGVBY2NvdW50c0NoYW5nZWQpXG5cbiAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIHdpbmRvdy5ldGhlcmV1bS5yZW1vdmVMaXN0ZW5lcignYWNjb3VudHNDaGFuZ2VkJywgaGFuZGxlQWNjb3VudHNDaGFuZ2VkKVxuICAgICAgfVxuICAgIH1cbiAgfSwgW10pXG5cbiAgY29uc3QgZW5zdXJlQ29ycmVjdE5ldHdvcmsgPSBhc3luYyAoKSA9PiB7XG4gICAgaWYgKCF3aW5kb3cuZXRoZXJldW0pIHJldHVybjtcblxuICAgIGNvbnN0IGN1cnJlbnRDaGFpbklkID0gYXdhaXQgd2luZG93LmV0aGVyZXVtLnJlcXVlc3QoeyBtZXRob2Q6ICdldGhfY2hhaW5JZCcgfSk7XG4gICAgXG4gICAgaWYgKGN1cnJlbnRDaGFpbklkICE9PSBGTE9XX0VWTV9URVNUTkVULmNoYWluSWQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IHdpbmRvdy5ldGhlcmV1bS5yZXF1ZXN0KHtcbiAgICAgICAgICBtZXRob2Q6ICd3YWxsZXRfc3dpdGNoRXRoZXJldW1DaGFpbicsXG4gICAgICAgICAgcGFyYW1zOiBbeyBjaGFpbklkOiBGTE9XX0VWTV9URVNUTkVULmNoYWluSWQgfV0sXG4gICAgICAgIH0pO1xuICAgICAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgICAgICBpZiAoZXJyb3IuY29kZSA9PT0gNDkwMikge1xuICAgICAgICAgIC8vIE5ldHdvcmsgbm90IGFkZGVkLCBhZGQgaXRcbiAgICAgICAgICBhd2FpdCB3aW5kb3cuZXRoZXJldW0ucmVxdWVzdCh7XG4gICAgICAgICAgICBtZXRob2Q6ICd3YWxsZXRfYWRkRXRoZXJldW1DaGFpbicsXG4gICAgICAgICAgICBwYXJhbXM6IFtGTE9XX0VWTV9URVNUTkVUXVxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGNvbm5lY3QgPSBhc3luYyAod2FsbGV0VHlwZT86IHN0cmluZykgPT4ge1xuICAgIHRyeSB7XG4gICAgICBzZXRJc0Nvbm5lY3RpbmcodHJ1ZSlcbiAgICAgIGNvbnNvbGUubG9nKCdTdGFydGluZyB3YWxsZXQgY29ubmVjdGlvbiBmb3I6Jywgd2FsbGV0VHlwZSB8fCAnTWV0YU1hc2snKVxuICAgICAgXG4gICAgICBpZiAoIXdpbmRvdy5ldGhlcmV1bSkge1xuICAgICAgICBjb25zb2xlLmxvZygnTm8gZXRoZXJldW0gb2JqZWN0IGZvdW5kJylcbiAgICAgICAgc2V0RXJyb3IoJ1BsZWFzZSBpbnN0YWxsIE1ldGFNYXNrIG9yIGFub3RoZXIgRVZNIHdhbGxldCcpXG4gICAgICAgIHJldHVyblxuICAgICAgfVxuXG4gICAgICAvLyBFbnN1cmUgd2UncmUgb24gRmxvdyBFVk0gVGVzdG5ldFxuICAgICAgYXdhaXQgZW5zdXJlQ29ycmVjdE5ldHdvcmsoKTtcblxuICAgICAgY29uc29sZS5sb2coJ1JlcXVlc3RpbmcgYWNjb3VudHMuLi4nKVxuICAgICAgY29uc3QgcHJvdmlkZXIgPSBuZXcgZXRoZXJzLkJyb3dzZXJQcm92aWRlcih3aW5kb3cuZXRoZXJldW0pXG4gICAgICBjb25zdCBhY2NvdW50cyA9IGF3YWl0IHdpbmRvdy5ldGhlcmV1bS5yZXF1ZXN0KHtcbiAgICAgICAgbWV0aG9kOiAnZXRoX3JlcXVlc3RBY2NvdW50cydcbiAgICAgIH0pXG5cbiAgICAgIGNvbnNvbGUubG9nKCdBY2NvdW50cyByZWNlaXZlZDonLCBhY2NvdW50cylcbiAgICAgIGlmIChhY2NvdW50cy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdTZXR0aW5nIHByb3ZpZGVyIGFuZCBhZGRyZXNzJylcbiAgICAgICAgc2V0UHJvdmlkZXIocHJvdmlkZXIpXG4gICAgICAgIHNldEFkZHJlc3MoYWNjb3VudHNbMF0pXG4gICAgICAgIHNldEVycm9yKG51bGwpXG4gICAgICAgIHJldHVybiBwcm92aWRlclxuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycjogYW55KSB7XG4gICAgICAvLyBDaGVjayBmb3IgdXNlciByZWplY3Rpb25cbiAgICAgIGlmIChlcnIuY29kZSA9PT0gNDAwMSB8fCBlcnIubWVzc2FnZT8uaW5jbHVkZXMoJ3JlamVjdGVkJykpIHtcbiAgICAgICAgLy8gVXNlciByZWplY3RlZCB0aGUgcmVxdWVzdCAtIHRoaXMgaXMgbm9ybWFsLCBkb24ndCBzaG93IGFuIGVycm9yXG4gICAgICAgIGNvbnNvbGUubG9nKCdVc2VyIGNhbmNlbGxlZCB0aGUgY29ubmVjdGlvbiByZXF1ZXN0JylcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIEhhbmRsZSBvdGhlciBlcnJvcnNcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1dhbGxldCBjb25uZWN0aW9uIGVycm9yOicsIGVycilcbiAgICAgIHNldEVycm9yKCdGYWlsZWQgdG8gY29ubmVjdCB3YWxsZXQnKVxuICAgICAgc2V0UHJvdmlkZXIobnVsbClcbiAgICAgIHNldEFkZHJlc3MobnVsbClcbiAgICB9IGZpbmFsbHkge1xuICAgICAgc2V0SXNDb25uZWN0aW5nKGZhbHNlKVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGNvbm5lY3RXYWxsZXQgPSB1c2VDYWxsYmFjayhhc3luYyAoKSA9PiB7XG4gICAgcmV0dXJuIGNvbm5lY3QoKVxuICB9LCBbXSlcblxuICBjb25zdCBkaXNjb25uZWN0V2FsbGV0ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHNldEFkZHJlc3MobnVsbClcbiAgICBzZXRQcm92aWRlcihudWxsKVxuICAgIHNldEVycm9yKG51bGwpXG4gIH0sIFtdKVxuXG4gIHJldHVybiB7XG4gICAgcHJvdmlkZXIsXG4gICAgYWRkcmVzcyxcbiAgICBpc0Nvbm5lY3RlZDogISFhZGRyZXNzLFxuICAgIGVycm9yLFxuICAgIGNvbm5lY3QsXG4gICAgY29ubmVjdFdhbGxldCxcbiAgICBkaXNjb25uZWN0V2FsbGV0LFxuICAgIGlzQ29ubmVjdGluZ1xuICB9XG59Il0sIm5hbWVzIjpbInVzZVN0YXRlIiwidXNlRWZmZWN0IiwidXNlQ2FsbGJhY2siLCJ1c2VSZWYiLCJldGhlcnMiLCJGTE9XX0VWTV9URVNUTkVUIiwiY2hhaW5JZCIsImNoYWluTmFtZSIsInJwY1VybHMiLCJibG9ja0V4cGxvcmVyVXJscyIsIm5hdGl2ZUN1cnJlbmN5IiwibmFtZSIsInN5bWJvbCIsImRlY2ltYWxzIiwidXNlV2FsbGV0IiwicHJvdmlkZXIiLCJzZXRQcm92aWRlciIsImFkZHJlc3MiLCJzZXRBZGRyZXNzIiwiZXJyb3IiLCJzZXRFcnJvciIsImlzQ29ubmVjdGluZyIsInNldElzQ29ubmVjdGluZyIsImRlYm91bmNlUmVmIiwid2luZG93IiwiZXRoZXJldW0iLCJoYW5kbGVBY2NvdW50c0NoYW5nZWQiLCJhY2NvdW50cyIsImNsZWFyVGltZW91dCIsImN1cnJlbnQiLCJzZXRUaW1lb3V0IiwiY29uc29sZSIsImxvZyIsImxlbmd0aCIsIkJyb3dzZXJQcm92aWRlciIsInJlcXVlc3QiLCJtZXRob2QiLCJ0aGVuIiwiY2F0Y2giLCJvbiIsInJlbW92ZUxpc3RlbmVyIiwiZW5zdXJlQ29ycmVjdE5ldHdvcmsiLCJjdXJyZW50Q2hhaW5JZCIsInBhcmFtcyIsImNvZGUiLCJjb25uZWN0Iiwid2FsbGV0VHlwZSIsImVyciIsIm1lc3NhZ2UiLCJpbmNsdWRlcyIsImNvbm5lY3RXYWxsZXQiLCJkaXNjb25uZWN0V2FsbGV0IiwiaXNDb25uZWN0ZWQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/hooks/useWallet.ts\n"));

/***/ })

});
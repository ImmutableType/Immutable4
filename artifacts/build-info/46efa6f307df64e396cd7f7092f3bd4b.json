{"id":"46efa6f307df64e396cd7f7092f3bd4b","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"./utils/ERC1155Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/content/ReaderLicenseAMM.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ninterface IEncryptedArticles {\n    // ✅ FIXED: Correct interface matching actual return values (14 fields, no tags array)\n    function articles(uint256 articleId) external view returns (\n        uint256 id,                    // 1\n        string memory title,           // 2\n        string memory encryptedContent,// 3\n        string memory summary,         // 4\n        address author,                // 5\n        string memory location,        // 6\n        string memory category,        // 7\n        uint256 publishedAt,          // 8\n        uint256 nftCount,             // 9  ← We need this\n        uint256 nftPrice,             // 10\n        uint256 journalistRetained,   // 11\n        uint256 readerLicenseRatio,   // 12 ← We need this\n        uint8 creationSource,         // 13\n        uint256 proposalId            // 14\n    );\n    function getNFTHolders(uint256 articleId) external view returns (address[] memory);\n}\n\ncontract ReaderLicenseAMM is ERC1155, Ownable {\n    // Constants\n    address public constant TREASURY = 0x9402F9f20b4a27b55B1cC6cf015D98f764814fb2;\n    uint256 public constant REGENERATION_THRESHOLD = 50; // 50% consumed triggers regeneration\n    uint256 public constant BASE_PRICE = 0.01 ether; // 0.01 FLOW\n    uint256 public constant MAX_PRICE = 1 ether; // 1.00 FLOW\n    uint256 public constant GAS_REIMBURSEMENT = 0.005 ether; // 0.005 FLOW per regeneration call\n\n    // Revenue split percentages\n    uint256 public constant SELLER_PERCENTAGE = 70;\n    uint256 public constant CREATOR_PERCENTAGE = 20;\n    uint256 public constant PLATFORM_PERCENTAGE = 10;\n\n    // Contract references\n    IEncryptedArticles public immutable ENCRYPTED_ARTICLES;\n\n    // Structs\n    struct LicenseInfo {\n        uint256 articleId;\n        uint256 editionNumber;\n        uint256 totalGenerated;\n        uint256 activeLicenses;\n        uint256 lastRegenerationTime;\n    }\n\n    struct AccessInfo {\n        uint256 expiryTime;\n        bool hasAccess;\n    }\n\n    struct PurchaseRecord {\n        uint256 timestamp;\n        uint256 price;\n        address buyer;\n        address seller;\n    }\n\n    // State variables\n    uint256 private _licenseTypeIdCounter;\n    \n    // articleId => LicenseInfo\n    mapping(uint256 => LicenseInfo) public licenseInfo;\n    \n    // articleId => address => license balance\n    mapping(uint256 => mapping(address => uint256)) public licenseBalances;\n    \n    // articleId => address => AccessInfo\n    mapping(uint256 => mapping(address => AccessInfo)) public accessInfo;\n    \n    // articleId => day => purchase count\n    mapping(uint256 => mapping(uint256 => uint256)) public dailyPurchases;\n    \n    // articleId => PurchaseRecord[]\n    mapping(uint256 => PurchaseRecord[]) public purchaseHistory;\n    \n    // articleId => total licenses ever created\n    mapping(uint256 => uint256) public totalLicensesEverGenerated;\n    \n    // Gas pool for regeneration costs\n    uint256 public gasPool;\n\n    // Events\n    event LicenseMinted(uint256 indexed articleId, address indexed holder, uint256 count, uint256 editionNumber);\n    event LicensePurchased(uint256 indexed articleId, address indexed buyer, address indexed seller, uint256 price);\n    event LicenseBurned(uint256 indexed articleId, address indexed user, uint256 expiryTime);\n    event LicenseRegenerated(uint256 indexed articleId, uint256 count, uint256 totalActive);\n    event AccessGranted(uint256 indexed articleId, address indexed user, uint256 expiryTime);\n\n    constructor(address _encryptedArticles) ERC1155(\"\") Ownable(msg.sender) {\n        ENCRYPTED_ARTICLES = IEncryptedArticles(_encryptedArticles);\n    }\n\n    // Mint initial licenses to NFT holder (called by EncryptedArticles contract)\n    function mintLicensesToHolder(\n        uint256 _articleId, \n        address _holder, \n        uint256 _count, \n        uint256 _editionNumber\n    ) external {\n        require(msg.sender == address(ENCRYPTED_ARTICLES), \"Only EncryptedArticles contract can mint\");\n        \n        // Update license info\n        licenseInfo[_articleId].articleId = _articleId;\n        licenseInfo[_articleId].totalGenerated += _count;\n        licenseInfo[_articleId].activeLicenses += _count;\n        \n        // Update total ever generated\n        totalLicensesEverGenerated[_articleId] += _count;\n        \n        // Mint licenses to holder\n        licenseBalances[_articleId][_holder] += _count;\n        _mint(_holder, _articleId, _count, \"\");\n        \n        emit LicenseMinted(_articleId, _holder, _count, _editionNumber);\n    }\n\n    // ✅ FIXED: Calculate current price based on supply-scaled bonding curve with time decay\n    function getCurrentPrice(uint256 _articleId) public view returns (uint256) {\n        uint256 totalSupply = totalLicensesEverGenerated[_articleId];\n        require(totalSupply > 0, \"No licenses exist for this article\");\n        \n        // ✅ FIXED: Destructure 14 values correctly (positions 9 and 12)\n        (, , , , , , , , uint256 nftCount, , , uint256 readerLicenseRatio, ,) = ENCRYPTED_ARTICLES.articles(_articleId);\n        //  1  2  3  4  5  6  7  8        9         10 11         12          13 14\n        \n        uint256 maxTotalLicenses = nftCount * readerLicenseRatio;\n        require(maxTotalLicenses > 0, \"Invalid license configuration\");\n        \n        // Calculate base price using supply-scaled bonding curve\n        uint256 priceRange = MAX_PRICE - BASE_PRICE; // 0.99 FLOW\n        uint256 priceIncrement = maxTotalLicenses > 1 ? priceRange / (maxTotalLicenses - 1) : 0;\n        uint256 bondingPrice = BASE_PRICE + ((totalSupply - 1) * priceIncrement);\n        \n        // Apply time decay\n        uint256 decayedPrice = applyTimeDecay(_articleId, bondingPrice);\n        \n        return decayedPrice > MAX_PRICE ? MAX_PRICE : decayedPrice;\n    }\n\n    // ✅ FIXED: Apply time decay based on zero-sale days\n    function applyTimeDecay(uint256 _articleId, uint256 _currentPrice) internal view returns (uint256) {\n        // ✅ FIXED: Get publishedAt from position 8 (14-value destructuring)\n        (, , , , , , , uint256 publishedAt, , , , , ,) = ENCRYPTED_ARTICLES.articles(_articleId);\n        //  1  2  3  4  5  6  7        8            9  10 11 12 13 14\n        \n        uint256 daysSincePublish = (block.timestamp - publishedAt) / 86400;\n        uint256 zeroSaleDays = 0;\n        \n        // Count consecutive days with zero sales (starting from most recent)\n        uint256 currentDay = block.timestamp / 86400;\n        for (uint256 i = 0; i < daysSincePublish && i < 30; i++) {\n            if (dailyPurchases[_articleId][currentDay - i] == 0) {\n                zeroSaleDays++;\n            } else {\n                break; // Stop at first day with sales\n            }\n        }\n        \n        // 1% decay per zero-sale day, max 30% decay\n        uint256 decayPercent = zeroSaleDays > 30 ? 30 : zeroSaleDays;\n        uint256 decayAmount = (_currentPrice * decayPercent) / 100;\n        \n        return _currentPrice > decayAmount ? _currentPrice - decayAmount : 0.001 ether; // Floor at 0.001 FLOW\n    }\n\n    // Purchase license from another holder\n    function buyLicense(uint256 _articleId, address _seller) external payable {\n        require(licenseBalances[_articleId][_seller] > 0, \"Seller has no licenses\");\n        \n        uint256 currentPrice = getCurrentPrice(_articleId);\n        uint256 estimatedGas = GAS_REIMBURSEMENT;\n        uint256 totalCost = currentPrice + estimatedGas;\n        \n        require(msg.value >= totalCost, \"Insufficient payment\");\n        \n        // Calculate revenue splits from license price only\n        uint256 sellerAmount = (currentPrice * SELLER_PERCENTAGE) / 100;\n        uint256 creatorAmount = (currentPrice * CREATOR_PERCENTAGE) / 100;\n        uint256 platformAmount = currentPrice - sellerAmount - creatorAmount;\n        \n        // ✅ FIXED: Get author from position 5 (14-value destructuring)\n        (, , , , address author, , , , , , , , ,) = ENCRYPTED_ARTICLES.articles(_articleId);\n        //  1  2  3  4       5      6  7  8  9  10 11 12 13 14\n        \n        // Transfer license\n        licenseBalances[_articleId][_seller]--;\n        licenseBalances[_articleId][msg.sender]++;\n        _safeTransferFrom(_seller, msg.sender, _articleId, 1, \"\");\n        \n        // Process payments\n        payable(_seller).transfer(sellerAmount);\n        payable(author).transfer(creatorAmount);\n        payable(TREASURY).transfer(platformAmount);\n        \n        // Add gas contribution to pool\n        gasPool += estimatedGas;\n        \n        // Update purchase tracking\n        uint256 today = block.timestamp / 86400;\n        dailyPurchases[_articleId][today]++;\n        purchaseHistory[_articleId].push(PurchaseRecord({\n            timestamp: block.timestamp,\n            price: currentPrice,\n            buyer: msg.sender,\n            seller: _seller\n        }));\n        \n        // Refund excess\n        if (msg.value > totalCost) {\n            payable(msg.sender).transfer(msg.value - totalCost);\n        }\n        \n        emit LicensePurchased(_articleId, msg.sender, _seller, currentPrice);\n        \n        // Check if regeneration needed\n        if (shouldRegenerate(_articleId)) {\n            _regenerateLicenses(_articleId);\n        }\n    }\n\n    // Burn license for 7-day article access\n    function burnLicenseForAccess(uint256 _articleId) external {\n        require(licenseBalances[_articleId][msg.sender] > 0, \"No license to burn\");\n        require(!hasActiveAccess(_articleId, msg.sender), \"Already has active access\");\n        \n        // Burn the license\n        licenseBalances[_articleId][msg.sender]--;\n        licenseInfo[_articleId].activeLicenses--;\n        _burn(msg.sender, _articleId, 1);\n        \n        // Grant 7-day access\n        uint256 expiryTime = block.timestamp + 7 days;\n        accessInfo[_articleId][msg.sender] = AccessInfo({\n            expiryTime: expiryTime,\n            hasAccess: true\n        });\n        \n        emit LicenseBurned(_articleId, msg.sender, expiryTime);\n        emit AccessGranted(_articleId, msg.sender, expiryTime);\n        \n        // Check if regeneration needed\n        if (shouldRegenerate(_articleId)) {\n            _regenerateLicenses(_articleId);\n        }\n    }\n\n    // Check if regeneration is needed (50% threshold)\n    function shouldRegenerate(uint256 _articleId) public view returns (bool) {\n        uint256 totalGenerated = licenseInfo[_articleId].totalGenerated;\n        uint256 activeLicenses = licenseInfo[_articleId].activeLicenses;\n        \n        if (totalGenerated == 0) return false;\n        \n        uint256 consumedPercentage = ((totalGenerated - activeLicenses) * 100) / totalGenerated;\n        return consumedPercentage >= REGENERATION_THRESHOLD;\n    }\n\n    // Regenerate licenses (anyone can call, gas reimbursed)\n    function regenerateLicenses(uint256 _articleId) external {\n        require(shouldRegenerate(_articleId), \"Regeneration not needed\");\n        require(gasPool >= GAS_REIMBURSEMENT, \"Insufficient gas pool\");\n        \n        _regenerateLicenses(_articleId);\n        \n        // Reimburse caller for gas\n        gasPool -= GAS_REIMBURSEMENT;\n        payable(msg.sender).transfer(GAS_REIMBURSEMENT);\n    }\n\n    // Internal regeneration logic\n    function _regenerateLicenses(uint256 _articleId) internal {\n        uint256 totalGenerated = licenseInfo[_articleId].totalGenerated;\n        uint256 activeLicenses = licenseInfo[_articleId].activeLicenses;\n        uint256 deltaToRegenerate = totalGenerated - activeLicenses;\n        \n        if (deltaToRegenerate == 0) return;\n        \n        // Get NFT holders for round-robin distribution\n        address[] memory nftHolders = ENCRYPTED_ARTICLES.getNFTHolders(_articleId);\n        require(nftHolders.length > 0, \"No NFT holders\");\n        \n        // Distribute licenses round-robin\n        for (uint256 i = 0; i < deltaToRegenerate; i++) {\n            address recipient = nftHolders[i % nftHolders.length];\n            licenseBalances[_articleId][recipient]++;\n            _mint(recipient, _articleId, 1, \"\");\n        }\n        \n        // Update license info\n        licenseInfo[_articleId].activeLicenses += deltaToRegenerate;\n        licenseInfo[_articleId].lastRegenerationTime = block.timestamp;\n        totalLicensesEverGenerated[_articleId] += deltaToRegenerate;\n        \n        emit LicenseRegenerated(_articleId, deltaToRegenerate, licenseInfo[_articleId].activeLicenses);\n    }\n\n    // Check if user has active access to article\n    function hasActiveAccess(uint256 _articleId, address _user) public view returns (bool) {\n        AccessInfo memory access = accessInfo[_articleId][_user];\n        return access.hasAccess && block.timestamp < access.expiryTime;\n    }\n\n    // Get encrypted article content (only for users with active access)\n    function getEncryptedContent(uint256 _articleId) external view returns (string memory) {\n        require(hasActiveAccess(_articleId, msg.sender), \"No active access to this article\");\n        \n        // ✅ FIXED: Get encryptedContent from position 3 (14-value destructuring)\n        (, , string memory encryptedContent, , , , , , , , , , ,) = ENCRYPTED_ARTICLES.articles(_articleId);\n        //  1  2                3              4  5  6  7  8  9  10 11 12 13 14\n        return encryptedContent;\n    }\n\n    // Get article summary (public)\n    function getArticleSummary(uint256 _articleId) external view returns (string memory) {\n        // ✅ FIXED: Get summary from position 4 (14-value destructuring)\n        (, , , string memory summary, , , , , , , , , ,) = ENCRYPTED_ARTICLES.articles(_articleId);\n        //  1  2  3             4       5  6  7  8  9  10 11 12 13 14\n        return summary;\n    }\n\n    // Get license holders for an article\n    function getLicenseHolders(uint256 _articleId) external view returns (address[] memory, uint256[] memory) {\n        address[] memory nftHolders = ENCRYPTED_ARTICLES.getNFTHolders(_articleId);\n        uint256[] memory balances = new uint256[](nftHolders.length);\n        \n        for (uint256 i = 0; i < nftHolders.length; i++) {\n            balances[i] = licenseBalances[_articleId][nftHolders[i]];\n        }\n        \n        return (nftHolders, balances);\n    }\n\n    // Get purchase history for an article\n    function getPurchaseHistory(uint256 _articleId) external view returns (PurchaseRecord[] memory) {\n        return purchaseHistory[_articleId];\n    }\n\n    // Emergency functions\n    function emergencyWithdrawGasPool() external onlyOwner {\n        uint256 amount = gasPool;\n        gasPool = 0;\n        payable(owner()).transfer(amount);\n    }\n\n    // Required ERC1155 overrides\n    function uri(uint256 tokenId) public view override returns (string memory) {\n        // ✅ FIXED: Get title, summary, location from correct positions (14-value destructuring)\n        (, string memory title, , string memory summary, , string memory location, , , , , , , ,) = ENCRYPTED_ARTICLES.articles(tokenId);\n        //  1             2      3              4       5              6        7  8  9  10 11 12 13 14\n        \n        return string(abi.encodePacked(\n            '{\"name\": \"Reader License - ', title, '\",',\n            '\"description\": \"', summary, '\",',\n            '\"attributes\": [',\n                '{\"trait_type\": \"Location\", \"value\": \"', location, '\"},',\n                '{\"trait_type\": \"License Type\", \"value\": \"Reader Access\"}',\n            ']}'\n        ));\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2476],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":2477,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2476,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,2476],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:141:1","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"290:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"309:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"629:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"662:6:1","nodeType":"VariableDeclaration","scope":159,"src":"654:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"678:7:1","nodeType":"VariableDeclaration","scope":159,"src":"670:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"695:6:1","nodeType":"VariableDeclaration","scope":159,"src":"687:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:1"},"src":"623:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"709:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"872:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"899:6:1","nodeType":"VariableDeclaration","scope":164,"src":"891:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:1"},"src":"866:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"913:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1104:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:1"},"src":"1077:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1128:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1519:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1511:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1528:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1555:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1547:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:1"},"src":"1478:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1569:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1754:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1783:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1775:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:1"},"src":"1748:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1799:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2005:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2033:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2025:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:1"},"src":"1999:43:1"}],"scope":285,"src":"280:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2046:143:1","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2200:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2220:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2450:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2477:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2469:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:1"},"src":"2444:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2490:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2633:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2656:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:1"},"src":"2627:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2679:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3008:6:1","nodeType":"VariableDeclaration","scope":209,"src":"3000:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3016:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3041:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3033:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:1"},"src":"2973:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3054:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3217:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3245:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3237:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:1"},"src":"3211:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3259:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3451:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:1"},"src":"3423:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3475:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3768:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3778:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:1"},"src":"3727:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3801:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3986:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4016:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4008:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:1"},"src":"3980:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4032:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4240:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4270:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4262:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:1"},"src":"4234:46:1"}],"scope":285,"src":"2190:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4284:145:1","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4440:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4461:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4868:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4860:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4884:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4876:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4901:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4893:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4909:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:1"},"src":"4827:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4932:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5095:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5124:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5116:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:1"},"src":"5089:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5138:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5331:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:1"},"src":"5302:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5355:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5659:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5651:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5677:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5669:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:1"},"src":"5616:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5690:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5906:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5898:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:1"},"src":"5869:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5922:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6161:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6153:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:1"},"src":"6124:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6177:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6494:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6513:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:1"},"src":"6462:73:1"}],"scope":285,"src":"4430:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6426:1"},"id":1},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Arrays":[2414],"Context":[2476],"ERC1155":[1201],"ERC1155Utils":[1536],"ERC165":[2806],"IERC1155":[1324],"IERC1155Errors":[284],"IERC1155MetadataURI":[1382],"IERC165":[2818]},"id":1202,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":1325,"src":"135:40:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"143:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":1383,"src":"176:73:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"184:19:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","file":"./utils/ERC1155Utils.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":1537,"src":"250:54:2","symbolAliases":[{"foreign":{"id":291,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"258:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":2477,"src":"305:48:2","symbolAliases":[{"foreign":{"id":293,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"313:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":297,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":2807,"src":"354:69:2","symbolAliases":[{"foreign":{"id":295,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"362:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":296,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"371:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../utils/Arrays.sol","id":299,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":2415,"src":"424:46:2","symbolAliases":[{"foreign":{"id":298,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"432:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":301,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":285,"src":"471:67:2","symbolAliases":[{"foreign":{"id":300,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"479:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":303,"name":"Context","nameLocations":["754:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2476,"src":"754:7:2"},"id":304,"nodeType":"InheritanceSpecifier","src":"754:7:2"},{"baseName":{"id":305,"name":"ERC165","nameLocations":["763:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2806,"src":"763:6:2"},"id":306,"nodeType":"InheritanceSpecifier","src":"763:6:2"},{"baseName":{"id":307,"name":"IERC1155","nameLocations":["771:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":1324,"src":"771:8:2"},"id":308,"nodeType":"InheritanceSpecifier","src":"771:8:2"},{"baseName":{"id":309,"name":"IERC1155MetadataURI","nameLocations":["781:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1382,"src":"781:19:2"},"id":310,"nodeType":"InheritanceSpecifier","src":"781:19:2"},{"baseName":{"id":311,"name":"IERC1155Errors","nameLocations":["802:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":284,"src":"802:14:2"},"id":312,"nodeType":"InheritanceSpecifier","src":"802:14:2"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"540:184:2","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1201,"linearizedBaseContracts":[1201,284,1382,1324,2806,2818,2476],"name":"ERC1155","nameLocation":"743:7:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":316,"libraryName":{"id":313,"name":"Arrays","nameLocations":["829:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"829:6:2"},"nodeType":"UsingForDirective","src":"823:27:2","typeName":{"baseType":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":315,"nodeType":"ArrayTypeName","src":"840:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":320,"libraryName":{"id":317,"name":"Arrays","nameLocations":["861:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"861:6:2"},"nodeType":"UsingForDirective","src":"855:27:2","typeName":{"baseType":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":319,"nodeType":"ArrayTypeName","src":"872:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"constant":false,"id":326,"mutability":"mutable","name":"_balances","nameLocation":"955:9:2","nodeType":"VariableDeclaration","scope":1201,"src":"888:76:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":325,"keyName":"id","keyNameLocation":"904:2:2","keyType":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"888:58:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":324,"keyName":"account","keyNameLocation":"926:7:2","keyType":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"918:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"910:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":332,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1041:18:2","nodeType":"VariableDeclaration","scope":1201,"src":"971:88:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":331,"keyName":"account","keyNameLocation":"987:7:2","keyType":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"971:61:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":330,"keyName":"operator","keyNameLocation":"1014:8:2","keyType":{"id":328,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"998:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":329,"name":"bool","nodeType":"ElementaryTypeName","src":"1026:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":334,"mutability":"mutable","name":"_uri","nameLocation":"1195:4:2","nodeType":"VariableDeclaration","scope":1201,"src":"1180:19:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":333,"name":"string","nodeType":"ElementaryTypeName","src":"1180:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":344,"nodeType":"Block","src":"1281:30:2","statements":[{"expression":{"arguments":[{"id":341,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"1299:4:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":340,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"1291:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1291:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":343,"nodeType":"ExpressionStatement","src":"1291:13:2"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"1206:38:2","text":" @dev See {_setURI}."},"id":345,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"uri_","nameLocation":"1275:4:2","nodeType":"VariableDeclaration","scope":345,"src":"1261:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":336,"name":"string","nodeType":"ElementaryTypeName","src":"1261:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1260:20:2"},"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[],"src":"1281:0:2"},"scope":1201,"src":"1249:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2805,2817],"body":{"id":375,"nodeType":"Block","src":"1486:197:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":356,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1515:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":358,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"1535:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1324_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1324_$","typeString":"type(contract IERC1155)"}],"id":357,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1530:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1530:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1324","typeString":"type(contract IERC1155)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1545:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1530:26:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1515:41:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":362,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1572:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":364,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"1592:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1382_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1382_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":363,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1587:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1587:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1382","typeString":"type(contract IERC1155MetadataURI)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1613:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1587:37:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1572:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:109:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":371,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1664:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":369,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1640:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1201_$","typeString":"type(contract super ERC1155)"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1646:17:2","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2805,"src":"1640:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1640:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:161:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":355,"id":374,"nodeType":"Return","src":"1496:180:2"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1317:56:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":376,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1387:17:2","nodeType":"FunctionDefinition","overrides":{"id":352,"nodeType":"OverrideSpecifier","overrides":[{"id":350,"name":"ERC165","nameLocations":["1454:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2806,"src":"1454:6:2"},{"id":351,"name":"IERC165","nameLocations":["1462:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2818,"src":"1462:7:2"}],"src":"1445:25:2"},"parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"interfaceId","nameLocation":"1412:11:2","nodeType":"VariableDeclaration","scope":376,"src":"1405:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":347,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1405:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1404:20:2"},"returnParameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":376,"src":"1480:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":353,"name":"bool","nodeType":"ElementaryTypeName","src":"1480:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1479:6:2"},"scope":1201,"src":"1378:305:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1381],"body":{"id":386,"nodeType":"Block","src":"2157:28:2","statements":[{"expression":{"id":384,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2174:4:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":383,"id":385,"nodeType":"Return","src":"2167:11:2"}]},"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"1689:388:2","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":387,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2091:3:2","nodeType":"FunctionDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"2095:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"2095:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2094:18:2"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"2142:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":381,"name":"string","nodeType":"ElementaryTypeName","src":"2142:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2141:15:2"},"scope":1201,"src":"2082:103:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1262],"body":{"id":403,"nodeType":"Block","src":"2331:46:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":397,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"2348:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":399,"indexExpression":{"id":398,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"2358:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":401,"indexExpression":{"id":400,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"2362:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":396,"id":402,"nodeType":"Return","src":"2341:29:2"}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"2191:49:2","text":" @dev See {IERC1155-balanceOf}."},"functionSelector":"00fdd58e","id":404,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2254:9:2","nodeType":"FunctionDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"account","nameLocation":"2272:7:2","nodeType":"VariableDeclaration","scope":404,"src":"2264:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"2264:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"id","nameLocation":"2289:2:2","nodeType":"VariableDeclaration","scope":404,"src":"2281:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2281:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2263:29:2"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":404,"src":"2322:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint256","nodeType":"ElementaryTypeName","src":"2322:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2321:9:2"},"scope":1201,"src":"2245:132:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1275],"body":{"id":473,"nodeType":"Block","src":"2676:410:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":417,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2690:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2699:6:2","memberName":"length","nodeType":"MemberAccess","src":"2690:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":419,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2709:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2713:6:2","memberName":"length","nodeType":"MemberAccess","src":"2709:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2690:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":430,"nodeType":"IfStatement","src":"2686:121:2","trueBody":{"id":429,"nodeType":"Block","src":"2721:86:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":423,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2768:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2772:6:2","memberName":"length","nodeType":"MemberAccess","src":"2768:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":425,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2780:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2789:6:2","memberName":"length","nodeType":"MemberAccess","src":"2780:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":422,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"2742:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2742:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"RevertStatement","src":"2735:61:2"}]}},{"assignments":[435],"declarations":[{"constant":false,"id":435,"mutability":"mutable","name":"batchBalances","nameLocation":"2834:13:2","nodeType":"VariableDeclaration","scope":473,"src":"2817:30:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":433,"name":"uint256","nodeType":"ElementaryTypeName","src":"2817:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":434,"nodeType":"ArrayTypeName","src":"2817:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":442,"initialValue":{"arguments":[{"expression":{"id":439,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2864:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2873:6:2","memberName":"length","nodeType":"MemberAccess","src":"2864:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2850:13:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":436,"name":"uint256","nodeType":"ElementaryTypeName","src":"2854:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":437,"nodeType":"ArrayTypeName","src":"2854:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2817:63:2"},{"body":{"id":469,"nodeType":"Block","src":"2937:112:2","statements":[{"expression":{"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":454,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"2951:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":456,"indexExpression":{"id":455,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2965:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2951:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":460,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"3008:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":458,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2980:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2989:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2354,"src":"2980:27:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2980:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":464,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"3035:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":462,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"3012:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3016:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2380,"src":"3012:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":457,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"2970:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2951:87:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":468,"nodeType":"ExpressionStatement","src":"2951:87:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2911:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":448,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2915:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2924:6:2","memberName":"length","nodeType":"MemberAccess","src":"2915:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2911:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":470,"initializationExpression":{"assignments":[444],"declarations":[{"constant":false,"id":444,"mutability":"mutable","name":"i","nameLocation":"2904:1:2","nodeType":"VariableDeclaration","scope":470,"src":"2896:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"2896:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":446,"initialValue":{"hexValue":"30","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2908:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2896:13:2"},"loopExpression":{"expression":{"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2932:3:2","subExpression":{"id":451,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2934:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":453,"nodeType":"ExpressionStatement","src":"2932:3:2"},"nodeType":"ForStatement","src":"2891:158:2"},{"expression":{"id":471,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"3066:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":416,"id":472,"nodeType":"Return","src":"3059:20:2"}]},"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"2383:146:2","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":474,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2543:14:2","nodeType":"FunctionDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"accounts","nameLocation":"2584:8:2","nodeType":"VariableDeclaration","scope":474,"src":"2567:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"2567:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":407,"nodeType":"ArrayTypeName","src":"2567:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"ids","nameLocation":"2619:3:2","nodeType":"VariableDeclaration","scope":474,"src":"2602:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":409,"name":"uint256","nodeType":"ElementaryTypeName","src":"2602:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":410,"nodeType":"ArrayTypeName","src":"2602:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2557:71:2"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":474,"src":"2658:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":413,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":414,"nodeType":"ArrayTypeName","src":"2658:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2657:18:2"},"scope":1201,"src":"2534:552:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1283],"body":{"id":489,"nodeType":"Block","src":"3229:69:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"3258:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":485,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3272:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":486,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"3282:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":482,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"3239:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":488,"nodeType":"ExpressionStatement","src":"3239:52:2"}]},"documentation":{"id":475,"nodeType":"StructuredDocumentation","src":"3092:57:2","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":490,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3163:17:2","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"operator","nameLocation":"3189:8:2","nodeType":"VariableDeclaration","scope":490,"src":"3181:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":476,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"approved","nameLocation":"3204:8:2","nodeType":"VariableDeclaration","scope":490,"src":"3199:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":478,"name":"bool","nodeType":"ElementaryTypeName","src":"3199:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3180:33:2"},"returnParameters":{"id":481,"nodeType":"ParameterList","parameters":[],"src":"3229:0:2"},"scope":1201,"src":"3154:144:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1293],"body":{"id":506,"nodeType":"Block","src":"3461:61:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":500,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3478:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":502,"indexExpression":{"id":501,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"3497:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":504,"indexExpression":{"id":503,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"3506:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":499,"id":505,"nodeType":"Return","src":"3471:44:2"}]},"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"3304:56:2","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":507,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3374:16:2","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"account","nameLocation":"3399:7:2","nodeType":"VariableDeclaration","scope":507,"src":"3391:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"3391:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"operator","nameLocation":"3416:8:2","nodeType":"VariableDeclaration","scope":507,"src":"3408:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"3408:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3390:35:2"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"3455:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":497,"name":"bool","nodeType":"ElementaryTypeName","src":"3455:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3454:6:2"},"scope":1201,"src":"3365:157:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1307],"body":{"id":550,"nodeType":"Block","src":"3702:238:2","statements":[{"assignments":[522],"declarations":[{"constant":false,"id":522,"mutability":"mutable","name":"sender","nameLocation":"3720:6:2","nodeType":"VariableDeclaration","scope":550,"src":"3712:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"3712:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":525,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":523,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"3729:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3729:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3712:29:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":526,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3755:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":527,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3763:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3755:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3773:31:2","subExpression":{"arguments":[{"id":530,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3791:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":531,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3797:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":529,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"3774:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3774:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3755:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":541,"nodeType":"IfStatement","src":"3751:129:2","trueBody":{"id":540,"nodeType":"Block","src":"3806:74:2","statements":[{"errorCall":{"arguments":[{"id":536,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3856:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3864:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":535,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3827:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3827:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":539,"nodeType":"RevertStatement","src":"3820:49:2"}]}},{"expression":{"arguments":[{"id":543,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3907:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":544,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3913:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":545,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"3917:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"3921:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":547,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"3928:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":542,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"3889:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3889:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":549,"nodeType":"ExpressionStatement","src":"3889:44:2"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"3528:56:2","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":551,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3598:16:2","nodeType":"FunctionDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"from","nameLocation":"3623:4:2","nodeType":"VariableDeclaration","scope":551,"src":"3615:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"3615:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"to","nameLocation":"3637:2:2","nodeType":"VariableDeclaration","scope":551,"src":"3629:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"3629:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"id","nameLocation":"3649:2:2","nodeType":"VariableDeclaration","scope":551,"src":"3641:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"3641:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":516,"mutability":"mutable","name":"value","nameLocation":"3661:5:2","nodeType":"VariableDeclaration","scope":551,"src":"3653:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"3653:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"data","nameLocation":"3681:4:2","nodeType":"VariableDeclaration","scope":551,"src":"3668:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":517,"name":"bytes","nodeType":"ElementaryTypeName","src":"3668:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3614:72:2"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[],"src":"3702:0:2"},"scope":1201,"src":"3589:351:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1323],"body":{"id":596,"nodeType":"Block","src":"4196:245:2","statements":[{"assignments":[568],"declarations":[{"constant":false,"id":568,"mutability":"mutable","name":"sender","nameLocation":"4214:6:2","nodeType":"VariableDeclaration","scope":596,"src":"4206:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"4206:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":571,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":569,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"4223:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4223:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4206:29:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":572,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4249:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":573,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4257:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4249:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4267:31:2","subExpression":{"arguments":[{"id":576,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4285:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":577,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4291:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":575,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"4268:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4268:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4249:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":587,"nodeType":"IfStatement","src":"4245:129:2","trueBody":{"id":586,"nodeType":"Block","src":"4300:74:2","statements":[{"errorCall":{"arguments":[{"id":582,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4350:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":583,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4358:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":581,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4321:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4321:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":585,"nodeType":"RevertStatement","src":"4314:49:2"}]}},{"expression":{"arguments":[{"id":589,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4406:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":590,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"4412:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":591,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"4416:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":592,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4421:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":593,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"4429:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":588,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"4383:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4383:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":595,"nodeType":"ExpressionStatement","src":"4383:51:2"}]},"documentation":{"id":552,"nodeType":"StructuredDocumentation","src":"3946:61:2","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":597,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4021:21:2","nodeType":"FunctionDefinition","parameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":554,"mutability":"mutable","name":"from","nameLocation":"4060:4:2","nodeType":"VariableDeclaration","scope":597,"src":"4052:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"4052:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"to","nameLocation":"4082:2:2","nodeType":"VariableDeclaration","scope":597,"src":"4074:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"4074:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"ids","nameLocation":"4111:3:2","nodeType":"VariableDeclaration","scope":597,"src":"4094:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"4094:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":558,"nodeType":"ArrayTypeName","src":"4094:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"values","nameLocation":"4141:6:2","nodeType":"VariableDeclaration","scope":597,"src":"4124:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":561,"nodeType":"ArrayTypeName","src":"4124:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"data","nameLocation":"4170:4:2","nodeType":"VariableDeclaration","scope":597,"src":"4157:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":563,"name":"bytes","nodeType":"ElementaryTypeName","src":"4157:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4042:138:2"},"returnParameters":{"id":566,"nodeType":"ParameterList","parameters":[],"src":"4196:0:2"},"scope":1201,"src":"4012:429:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":749,"nodeType":"Block","src":"5249:1174:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":611,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5263:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5267:6:2","memberName":"length","nodeType":"MemberAccess","src":"5263:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":613,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5277:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5284:6:2","memberName":"length","nodeType":"MemberAccess","src":"5277:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5263:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":624,"nodeType":"IfStatement","src":"5259:117:2","trueBody":{"id":623,"nodeType":"Block","src":"5292:84:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":617,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5339:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5343:6:2","memberName":"length","nodeType":"MemberAccess","src":"5339:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":619,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5351:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5358:6:2","memberName":"length","nodeType":"MemberAccess","src":"5351:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":616,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5313:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5313:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":622,"nodeType":"RevertStatement","src":"5306:59:2"}]}},{"assignments":[626],"declarations":[{"constant":false,"id":626,"mutability":"mutable","name":"operator","nameLocation":"5394:8:2","nodeType":"VariableDeclaration","scope":749,"src":"5386:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"5386:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":629,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":627,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5405:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5405:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5386:31:2"},{"body":{"id":710,"nodeType":"Block","src":"5469:650:2","statements":[{"assignments":[642],"declarations":[{"constant":false,"id":642,"mutability":"mutable","name":"id","nameLocation":"5491:2:2","nodeType":"VariableDeclaration","scope":710,"src":"5483:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"5483:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":647,"initialValue":{"arguments":[{"id":645,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5519:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":643,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5496:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5500:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2380,"src":"5496:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5496:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5483:38:2"},{"assignments":[649],"declarations":[{"constant":false,"id":649,"mutability":"mutable","name":"value","nameLocation":"5543:5:2","nodeType":"VariableDeclaration","scope":710,"src":"5535:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":648,"name":"uint256","nodeType":"ElementaryTypeName","src":"5535:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":654,"initialValue":{"arguments":[{"id":652,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5577:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":650,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5551:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5558:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2380,"src":"5551:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5551:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5535:44:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":655,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5598:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5614:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5606:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"5606:7:2","typeDescriptions":{}}},"id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5606:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5598:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":693,"nodeType":"IfStatement","src":"5594:420:2","trueBody":{"id":692,"nodeType":"Block","src":"5618:396:2","statements":[{"assignments":[662],"declarations":[{"constant":false,"id":662,"mutability":"mutable","name":"fromBalance","nameLocation":"5644:11:2","nodeType":"VariableDeclaration","scope":692,"src":"5636:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"5636:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":668,"initialValue":{"baseExpression":{"baseExpression":{"id":663,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5658:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":665,"indexExpression":{"id":664,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5668:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":667,"indexExpression":{"id":666,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5672:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5636:41:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":669,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5699:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5713:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5699:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":680,"nodeType":"IfStatement","src":"5695:129:2","trueBody":{"id":679,"nodeType":"Block","src":"5720:104:2","statements":[{"errorCall":{"arguments":[{"id":673,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5776:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":674,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5782:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5795:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":676,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5802:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":672,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"5749:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256) pure"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5749:56:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":678,"nodeType":"RevertStatement","src":"5742:63:2"}]}},{"id":691,"nodeType":"UncheckedBlock","src":"5841:159:2","statements":[{"expression":{"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":681,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5940:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":684,"indexExpression":{"id":682,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5950:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5940:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":685,"indexExpression":{"id":683,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5954:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5940:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":686,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5962:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5976:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5962:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5940:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":690,"nodeType":"ExpressionStatement","src":"5940:41:2"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":694,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6032:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6046:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6038:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"6038:7:2","typeDescriptions":{}}},"id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6032:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":709,"nodeType":"IfStatement","src":"6028:81:2","trueBody":{"id":708,"nodeType":"Block","src":"6050:59:2","statements":[{"expression":{"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":700,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6068:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":703,"indexExpression":{"id":701,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"6078:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6068:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":704,"indexExpression":{"id":702,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6082:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6068:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"6089:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6068:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":707,"nodeType":"ExpressionStatement","src":"6068:26:2"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":634,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5448:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":635,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5452:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5456:6:2","memberName":"length","nodeType":"MemberAccess","src":"5452:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5448:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":711,"initializationExpression":{"assignments":[631],"declarations":[{"constant":false,"id":631,"mutability":"mutable","name":"i","nameLocation":"5441:1:2","nodeType":"VariableDeclaration","scope":711,"src":"5433:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":630,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":633,"initialValue":{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5445:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5433:13:2"},"loopExpression":{"expression":{"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5464:3:2","subExpression":{"id":638,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5466:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":640,"nodeType":"ExpressionStatement","src":"5464:3:2"},"nodeType":"ForStatement","src":"5428:691:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":712,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"6133:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6137:6:2","memberName":"length","nodeType":"MemberAccess","src":"6133:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6147:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6133:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":747,"nodeType":"Block","src":"6341:76:2","statements":[{"eventCall":{"arguments":[{"id":740,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6374:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":741,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6384:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":742,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6390:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"6394:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":744,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6399:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":739,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"6360:13:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6360:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"6355:51:2"}]},"id":748,"nodeType":"IfStatement","src":"6129:288:2","trueBody":{"id":738,"nodeType":"Block","src":"6150:185:2","statements":[{"assignments":[717],"declarations":[{"constant":false,"id":717,"mutability":"mutable","name":"id","nameLocation":"6172:2:2","nodeType":"VariableDeclaration","scope":738,"src":"6164:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":716,"name":"uint256","nodeType":"ElementaryTypeName","src":"6164:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":722,"initialValue":{"arguments":[{"hexValue":"30","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6200:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":718,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"6177:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2380,"src":"6177:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6177:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6164:38:2"},{"assignments":[724],"declarations":[{"constant":false,"id":724,"mutability":"mutable","name":"value","nameLocation":"6224:5:2","nodeType":"VariableDeclaration","scope":738,"src":"6216:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"6216:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":729,"initialValue":{"arguments":[{"hexValue":"30","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6258:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":725,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6232:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6239:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2380,"src":"6232:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6232:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6216:44:2"},{"eventCall":{"arguments":[{"id":731,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6294:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":732,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6304:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":733,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6310:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":734,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"6314:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"6318:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":730,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"6279:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:45:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":737,"nodeType":"EmitStatement","src":"6274:50:2"}]}}]},"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"4447:690:2","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5151:7:2","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"from","nameLocation":"5167:4:2","nodeType":"VariableDeclaration","scope":750,"src":"5159:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"5159:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"to","nameLocation":"5181:2:2","nodeType":"VariableDeclaration","scope":750,"src":"5173:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"5173:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"ids","nameLocation":"5202:3:2","nodeType":"VariableDeclaration","scope":750,"src":"5185:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"5185:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":604,"nodeType":"ArrayTypeName","src":"5185:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"values","nameLocation":"5224:6:2","nodeType":"VariableDeclaration","scope":750,"src":"5207:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":606,"name":"uint256","nodeType":"ElementaryTypeName","src":"5207:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":607,"nodeType":"ArrayTypeName","src":"5207:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5158:73:2"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"5249:0:2"},"scope":1201,"src":"5142:1281:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":829,"nodeType":"Block","src":"7193:509:2","statements":[{"expression":{"arguments":[{"id":767,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7211:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7217:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":769,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7221:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":770,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7226:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":766,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"7203:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7203:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":772,"nodeType":"ExpressionStatement","src":"7203:30:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":773,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7247:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7261:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7253:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"7253:7:2","typeDescriptions":{}}},"id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7253:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7247:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":828,"nodeType":"IfStatement","src":"7243:453:2","trueBody":{"id":827,"nodeType":"Block","src":"7265:431:2","statements":[{"assignments":[780],"declarations":[{"constant":false,"id":780,"mutability":"mutable","name":"operator","nameLocation":"7287:8:2","nodeType":"VariableDeclaration","scope":827,"src":"7279:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"7279:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":783,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":781,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"7298:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7298:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7279:31:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":784,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7328:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7332:6:2","memberName":"length","nodeType":"MemberAccess","src":"7328:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7342:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7328:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":825,"nodeType":"Block","src":"7574:112:2","statements":[{"expression":{"arguments":[{"id":817,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"7633:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":818,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7643:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":819,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7649:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":820,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7653:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":821,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7658:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":822,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7666:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":814,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"7592:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1536_$","typeString":"type(library ERC1155Utils)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7605:27:2","memberName":"checkOnERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1535,"src":"7592:40:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7592:79:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":824,"nodeType":"ExpressionStatement","src":"7592:79:2"}]},"id":826,"nodeType":"IfStatement","src":"7324:362:2","trueBody":{"id":813,"nodeType":"Block","src":"7345:223:2","statements":[{"assignments":[789],"declarations":[{"constant":false,"id":789,"mutability":"mutable","name":"id","nameLocation":"7371:2:2","nodeType":"VariableDeclaration","scope":813,"src":"7363:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"7363:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":794,"initialValue":{"arguments":[{"hexValue":"30","id":792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7399:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":790,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7376:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7380:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2380,"src":"7376:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7376:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7363:38:2"},{"assignments":[796],"declarations":[{"constant":false,"id":796,"mutability":"mutable","name":"value","nameLocation":"7427:5:2","nodeType":"VariableDeclaration","scope":813,"src":"7419:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"7419:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":801,"initialValue":{"arguments":[{"hexValue":"30","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7461:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":797,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7435:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7442:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2380,"src":"7435:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7435:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7419:44:2"},{"expression":{"arguments":[{"id":805,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"7517:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":806,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7527:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":807,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7533:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":808,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"7537:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"7541:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":810,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7548:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":802,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"7481:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1536_$","typeString":"type(library ERC1155Utils)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7494:22:2","memberName":"checkOnERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1461,"src":"7481:35:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7481:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":812,"nodeType":"ExpressionStatement","src":"7481:72:2"}]}}]}}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"6429:568:2","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":830,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"7011:26:2","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"from","nameLocation":"7055:4:2","nodeType":"VariableDeclaration","scope":830,"src":"7047:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"7047:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"to","nameLocation":"7077:2:2","nodeType":"VariableDeclaration","scope":830,"src":"7069:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"7069:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"ids","nameLocation":"7106:3:2","nodeType":"VariableDeclaration","scope":830,"src":"7089:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"7089:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":757,"nodeType":"ArrayTypeName","src":"7089:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":761,"mutability":"mutable","name":"values","nameLocation":"7136:6:2","nodeType":"VariableDeclaration","scope":830,"src":"7119:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":759,"name":"uint256","nodeType":"ElementaryTypeName","src":"7119:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":760,"nodeType":"ArrayTypeName","src":"7119:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"data","nameLocation":"7165:4:2","nodeType":"VariableDeclaration","scope":830,"src":"7152:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":762,"name":"bytes","nodeType":"ElementaryTypeName","src":"7152:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7037:138:2"},"returnParameters":{"id":765,"nodeType":"ParameterList","parameters":[],"src":"7193:0:2"},"scope":1201,"src":"7002:700:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":895,"nodeType":"Block","src":"8267:355:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":844,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"8281:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8295:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8287:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"8287:7:2","typeDescriptions":{}}},"id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8287:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8281:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":858,"nodeType":"IfStatement","src":"8277:88:2","trueBody":{"id":857,"nodeType":"Block","src":"8299:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8351:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8343:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:2","typeDescriptions":{}}},"id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8343:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":850,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"8320:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8320:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":856,"nodeType":"RevertStatement","src":"8313:41:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":859,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"8378:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8394:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8386:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"8386:7:2","typeDescriptions":{}}},"id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8386:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8378:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":873,"nodeType":"IfStatement","src":"8374:88:2","trueBody":{"id":872,"nodeType":"Block","src":"8398:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8448:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8440:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"8440:7:2","typeDescriptions":{}}},"id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8440:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":865,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"8419:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8419:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"RevertStatement","src":"8412:39:2"}]}},{"assignments":[878,881],"declarations":[{"constant":false,"id":878,"mutability":"mutable","name":"ids","nameLocation":"8489:3:2","nodeType":"VariableDeclaration","scope":895,"src":"8472:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"8472:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":877,"nodeType":"ArrayTypeName","src":"8472:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":881,"mutability":"mutable","name":"values","nameLocation":"8511:6:2","nodeType":"VariableDeclaration","scope":895,"src":"8494:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"8494:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":880,"nodeType":"ArrayTypeName","src":"8494:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":886,"initialValue":{"arguments":[{"id":883,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"8540:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"8544:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":882,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"8521:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8521:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8471:79:2"},{"expression":{"arguments":[{"id":888,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"8587:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":889,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"8593:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":890,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"8597:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":891,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"8602:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":892,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"8610:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":887,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"8560:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":894,"nodeType":"ExpressionStatement","src":"8560:55:2"}]},"documentation":{"id":831,"nodeType":"StructuredDocumentation","src":"7708:446:2","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":896,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"8168:17:2","nodeType":"FunctionDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"mutability":"mutable","name":"from","nameLocation":"8194:4:2","nodeType":"VariableDeclaration","scope":896,"src":"8186:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"8186:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":835,"mutability":"mutable","name":"to","nameLocation":"8208:2:2","nodeType":"VariableDeclaration","scope":896,"src":"8200:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"8200:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":837,"mutability":"mutable","name":"id","nameLocation":"8220:2:2","nodeType":"VariableDeclaration","scope":896,"src":"8212:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"8212:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"value","nameLocation":"8232:5:2","nodeType":"VariableDeclaration","scope":896,"src":"8224:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"8224:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":841,"mutability":"mutable","name":"data","nameLocation":"8252:4:2","nodeType":"VariableDeclaration","scope":896,"src":"8239:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":840,"name":"bytes","nodeType":"ElementaryTypeName","src":"8239:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8185:72:2"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[],"src":"8267:0:2"},"scope":1201,"src":"8159:463:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":950,"nodeType":"Block","src":"9202:266:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":912,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"9216:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9230:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9222:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"9222:7:2","typeDescriptions":{}}},"id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9216:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":926,"nodeType":"IfStatement","src":"9212:88:2","trueBody":{"id":925,"nodeType":"Block","src":"9234:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9286:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9278:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"9278:7:2","typeDescriptions":{}}},"id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9278:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":918,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"9255:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9255:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":924,"nodeType":"RevertStatement","src":"9248:41:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":927,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"9313:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9329:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9321:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"9321:7:2","typeDescriptions":{}}},"id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9321:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9313:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":941,"nodeType":"IfStatement","src":"9309:88:2","trueBody":{"id":940,"nodeType":"Block","src":"9333:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9383:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9375:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"9375:7:2","typeDescriptions":{}}},"id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9375:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":933,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"9354:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9354:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":939,"nodeType":"RevertStatement","src":"9347:39:2"}]}},{"expression":{"arguments":[{"id":943,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"9433:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":944,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"9439:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":945,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"9443:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":946,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"9448:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":947,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"9456:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":942,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"9406:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9406:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"9406:55:2"}]},"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"8628:390:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":951,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"9032:22:2","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"from","nameLocation":"9072:4:2","nodeType":"VariableDeclaration","scope":951,"src":"9064:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"9064:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"to","nameLocation":"9094:2:2","nodeType":"VariableDeclaration","scope":951,"src":"9086:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"9086:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":904,"mutability":"mutable","name":"ids","nameLocation":"9123:3:2","nodeType":"VariableDeclaration","scope":951,"src":"9106:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":902,"name":"uint256","nodeType":"ElementaryTypeName","src":"9106:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":903,"nodeType":"ArrayTypeName","src":"9106:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":907,"mutability":"mutable","name":"values","nameLocation":"9153:6:2","nodeType":"VariableDeclaration","scope":951,"src":"9136:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"9136:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":906,"nodeType":"ArrayTypeName","src":"9136:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"data","nameLocation":"9182:4:2","nodeType":"VariableDeclaration","scope":951,"src":"9169:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":908,"name":"bytes","nodeType":"ElementaryTypeName","src":"9169:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9054:138:2"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[],"src":"9202:0:2"},"scope":1201,"src":"9023:445:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":961,"nodeType":"Block","src":"10346:30:2","statements":[{"expression":{"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":957,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"10356:4:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":958,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"10363:6:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10356:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":960,"nodeType":"ExpressionStatement","src":"10356:13:2"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"9474:811:2","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"10299:7:2","nodeType":"FunctionDefinition","parameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"newuri","nameLocation":"10321:6:2","nodeType":"VariableDeclaration","scope":962,"src":"10307:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":953,"name":"string","nodeType":"ElementaryTypeName","src":"10307:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10306:22:2"},"returnParameters":{"id":956,"nodeType":"ParameterList","parameters":[],"src":"10346:0:2"},"scope":1201,"src":"10290:86:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1013,"nodeType":"Block","src":"10836:264:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":974,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"10850:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10864:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10856:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"10856:7:2","typeDescriptions":{}}},"id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10856:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10850:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":988,"nodeType":"IfStatement","src":"10846:88:2","trueBody":{"id":987,"nodeType":"Block","src":"10868:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10920:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10912:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"10912:7:2","typeDescriptions":{}}},"id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10912:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":980,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"10889:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10889:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":986,"nodeType":"RevertStatement","src":"10882:41:2"}]}},{"assignments":[993,996],"declarations":[{"constant":false,"id":993,"mutability":"mutable","name":"ids","nameLocation":"10961:3:2","nodeType":"VariableDeclaration","scope":1013,"src":"10944:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"10944:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":992,"nodeType":"ArrayTypeName","src":"10944:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"values","nameLocation":"10983:6:2","nodeType":"VariableDeclaration","scope":1013,"src":"10966:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":994,"name":"uint256","nodeType":"ElementaryTypeName","src":"10966:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":995,"nodeType":"ArrayTypeName","src":"10966:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1001,"initialValue":{"arguments":[{"id":998,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"11012:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"11016:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":997,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"10993:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10993:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"10943:79:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11067:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11059:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"11059:7:2","typeDescriptions":{}}},"id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11059:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1007,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"11071:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1008,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"11075:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1009,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"11080:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1010,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"11088:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1002,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"11032:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11032:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1012,"nodeType":"ExpressionStatement","src":"11032:61:2"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"10382:367:2","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1014,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"10763:5:2","nodeType":"FunctionDefinition","parameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"to","nameLocation":"10777:2:2","nodeType":"VariableDeclaration","scope":1014,"src":"10769:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"10769:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"id","nameLocation":"10789:2:2","nodeType":"VariableDeclaration","scope":1014,"src":"10781:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"10781:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"value","nameLocation":"10801:5:2","nodeType":"VariableDeclaration","scope":1014,"src":"10793:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"10793:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"data","nameLocation":"10821:4:2","nodeType":"VariableDeclaration","scope":1014,"src":"10808:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":970,"name":"bytes","nodeType":"ElementaryTypeName","src":"10808:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10768:58:2"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[],"src":"10836:0:2"},"scope":1201,"src":"10754:346:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1054,"nodeType":"Block","src":"11638:175:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1028,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"11652:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11666:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11658:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"11658:7:2","typeDescriptions":{}}},"id":1032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11658:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11652:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1042,"nodeType":"IfStatement","src":"11648:88:2","trueBody":{"id":1041,"nodeType":"Block","src":"11670:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11722:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11714:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"11714:7:2","typeDescriptions":{}}},"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11714:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1034,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"11691:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11691:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1040,"nodeType":"RevertStatement","src":"11684:41:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11780:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11772:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"11772:7:2","typeDescriptions":{}}},"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11772:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1048,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"11784:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1049,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"11788:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1050,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"11793:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1051,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"11801:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1043,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"11745:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11745:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1053,"nodeType":"ExpressionStatement","src":"11745:61:2"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"11106:420:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1055,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"11540:10:2","nodeType":"FunctionDefinition","parameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"to","nameLocation":"11559:2:2","nodeType":"VariableDeclaration","scope":1055,"src":"11551:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"11551:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"ids","nameLocation":"11580:3:2","nodeType":"VariableDeclaration","scope":1055,"src":"11563:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"11563:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1019,"nodeType":"ArrayTypeName","src":"11563:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"values","nameLocation":"11602:6:2","nodeType":"VariableDeclaration","scope":1055,"src":"11585:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"11585:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1022,"nodeType":"ArrayTypeName","src":"11585:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"data","nameLocation":"11623:4:2","nodeType":"VariableDeclaration","scope":1055,"src":"11610:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1024,"name":"bytes","nodeType":"ElementaryTypeName","src":"11610:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11550:78:2"},"returnParameters":{"id":1027,"nodeType":"ParameterList","parameters":[],"src":"11638:0:2"},"scope":1201,"src":"11531:282:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1104,"nodeType":"Block","src":"12172:264:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1065,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"12186:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12202:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12194:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"12194:7:2","typeDescriptions":{}}},"id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12194:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12186:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1079,"nodeType":"IfStatement","src":"12182:88:2","trueBody":{"id":1078,"nodeType":"Block","src":"12206:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12256:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12248:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1072,"name":"address","nodeType":"ElementaryTypeName","src":"12248:7:2","typeDescriptions":{}}},"id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12248:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1071,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"12227:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12227:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"RevertStatement","src":"12220:39:2"}]}},{"assignments":[1084,1087],"declarations":[{"constant":false,"id":1084,"mutability":"mutable","name":"ids","nameLocation":"12297:3:2","nodeType":"VariableDeclaration","scope":1104,"src":"12280:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1083,"nodeType":"ArrayTypeName","src":"12280:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"values","nameLocation":"12319:6:2","nodeType":"VariableDeclaration","scope":1104,"src":"12302:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"12302:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1086,"nodeType":"ArrayTypeName","src":"12302:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1092,"initialValue":{"arguments":[{"id":1089,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"12348:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"12352:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1088,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"12329:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12329:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12279:79:2"},{"expression":{"arguments":[{"id":1094,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"12395:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12409:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12401:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"12401:7:2","typeDescriptions":{}}},"id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12401:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1099,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"12413:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1100,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"12418:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12426:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1093,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"12368:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12368:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1103,"nodeType":"ExpressionStatement","src":"12368:61:2"}]},"documentation":{"id":1056,"nodeType":"StructuredDocumentation","src":"11819:283:2","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1105,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"12116:5:2","nodeType":"FunctionDefinition","parameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"mutability":"mutable","name":"from","nameLocation":"12130:4:2","nodeType":"VariableDeclaration","scope":1105,"src":"12122:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1057,"name":"address","nodeType":"ElementaryTypeName","src":"12122:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"id","nameLocation":"12144:2:2","nodeType":"VariableDeclaration","scope":1105,"src":"12136:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"12136:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"value","nameLocation":"12156:5:2","nodeType":"VariableDeclaration","scope":1105,"src":"12148:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1061,"name":"uint256","nodeType":"ElementaryTypeName","src":"12148:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12121:41:2"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[],"src":"12172:0:2"},"scope":1201,"src":"12107:329:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1143,"nodeType":"Block","src":"12882:175:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1117,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"12896:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12912:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12904:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"12904:7:2","typeDescriptions":{}}},"id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12904:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12896:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1131,"nodeType":"IfStatement","src":"12892:88:2","trueBody":{"id":1130,"nodeType":"Block","src":"12916:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12966:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12958:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"12958:7:2","typeDescriptions":{}}},"id":1127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12958:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1123,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"12937:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12937:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1129,"nodeType":"RevertStatement","src":"12930:39:2"}]}},{"expression":{"arguments":[{"id":1133,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"13016:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13030:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13022:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"13022:7:2","typeDescriptions":{}}},"id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13022:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1138,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"13034:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1139,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"13039:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13047:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1132,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"12989:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1142,"nodeType":"ExpressionStatement","src":"12989:61:2"}]},"documentation":{"id":1106,"nodeType":"StructuredDocumentation","src":"12442:345:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1144,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"12801:10:2","nodeType":"FunctionDefinition","parameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"from","nameLocation":"12820:4:2","nodeType":"VariableDeclaration","scope":1144,"src":"12812:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1107,"name":"address","nodeType":"ElementaryTypeName","src":"12812:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1111,"mutability":"mutable","name":"ids","nameLocation":"12843:3:2","nodeType":"VariableDeclaration","scope":1144,"src":"12826:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1109,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1110,"nodeType":"ArrayTypeName","src":"12826:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1114,"mutability":"mutable","name":"values","nameLocation":"12865:6:2","nodeType":"VariableDeclaration","scope":1144,"src":"12848:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"12848:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1113,"nodeType":"ArrayTypeName","src":"12848:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12811:61:2"},"returnParameters":{"id":1116,"nodeType":"ParameterList","parameters":[],"src":"12882:0:2"},"scope":1201,"src":"12792:265:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1183,"nodeType":"Block","src":"13369:222:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1154,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"13383:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13403:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13395:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"13395:7:2","typeDescriptions":{}}},"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13395:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13383:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1168,"nodeType":"IfStatement","src":"13379:94:2","trueBody":{"id":1167,"nodeType":"Block","src":"13407:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13459:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13451:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"13451:7:2","typeDescriptions":{}}},"id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13451:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1160,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"13428:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13428:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1166,"nodeType":"RevertStatement","src":"13421:41:2"}]}},{"expression":{"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1169,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"13482:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1172,"indexExpression":{"id":1170,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"13501:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13482:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1173,"indexExpression":{"id":1171,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"13508:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13482:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1174,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"13520:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13482:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1176,"nodeType":"ExpressionStatement","src":"13482:46:2"},{"eventCall":{"arguments":[{"id":1178,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"13558:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1179,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"13565:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1180,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"13575:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1177,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"13543:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13543:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1182,"nodeType":"EmitStatement","src":"13538:46:2"}]},"documentation":{"id":1145,"nodeType":"StructuredDocumentation","src":"13063:208:2","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1184,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13285:18:2","nodeType":"FunctionDefinition","parameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"owner","nameLocation":"13312:5:2","nodeType":"VariableDeclaration","scope":1184,"src":"13304:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"13304:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"operator","nameLocation":"13327:8:2","nodeType":"VariableDeclaration","scope":1184,"src":"13319:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"13319:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"approved","nameLocation":"13342:8:2","nodeType":"VariableDeclaration","scope":1184,"src":"13337:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1150,"name":"bool","nodeType":"ElementaryTypeName","src":"13337:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13303:48:2"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[],"src":"13369:0:2"},"scope":1201,"src":"13276:315:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1199,"nodeType":"Block","src":"13865:664:2","statements":[{"AST":{"nodeType":"YulBlock","src":"13900:623:2","statements":[{"nodeType":"YulAssignment","src":"13958:21:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13974:4:2","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13968:5:2"},"nodeType":"YulFunctionCall","src":"13968:11:2"},"variableNames":[{"name":"array1","nodeType":"YulIdentifier","src":"13958:6:2"}]},{"expression":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14036:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14044:1:2","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14029:6:2"},"nodeType":"YulFunctionCall","src":"14029:17:2"},"nodeType":"YulExpressionStatement","src":"14029:17:2"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14167:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14175:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14163:3:2"},"nodeType":"YulFunctionCall","src":"14163:17:2"},{"name":"element1","nodeType":"YulIdentifier","src":"14182:8:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14156:6:2"},"nodeType":"YulFunctionCall","src":"14156:35:2"},"nodeType":"YulExpressionStatement","src":"14156:35:2"},{"nodeType":"YulAssignment","src":"14282:27:2","value":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14296:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14304:4:2","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14292:3:2"},"nodeType":"YulFunctionCall","src":"14292:17:2"},"variableNames":[{"name":"array2","nodeType":"YulIdentifier","src":"14282:6:2"}]},{"expression":{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14329:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14337:1:2","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14322:6:2"},"nodeType":"YulFunctionCall","src":"14322:17:2"},"nodeType":"YulExpressionStatement","src":"14322:17:2"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14363:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14371:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14359:3:2"},"nodeType":"YulFunctionCall","src":"14359:17:2"},{"name":"element2","nodeType":"YulIdentifier","src":"14378:8:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14352:6:2"},"nodeType":"YulFunctionCall","src":"14352:35:2"},"nodeType":"YulExpressionStatement","src":"14352:35:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14489:4:2","type":"","value":"0x40"},{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14499:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14507:4:2","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14495:3:2"},"nodeType":"YulFunctionCall","src":"14495:17:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14482:6:2"},"nodeType":"YulFunctionCall","src":"14482:31:2"},"nodeType":"YulExpressionStatement","src":"14482:31:2"}]},"evmVersion":"paris","externalReferences":[{"declaration":1193,"isOffset":false,"isSlot":false,"src":"13958:6:2","valueSize":1},{"declaration":1193,"isOffset":false,"isSlot":false,"src":"14036:6:2","valueSize":1},{"declaration":1193,"isOffset":false,"isSlot":false,"src":"14167:6:2","valueSize":1},{"declaration":1193,"isOffset":false,"isSlot":false,"src":"14296:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14282:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14329:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14363:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14499:6:2","valueSize":1},{"declaration":1187,"isOffset":false,"isSlot":false,"src":"14182:8:2","valueSize":1},{"declaration":1189,"isOffset":false,"isSlot":false,"src":"14378:8:2","valueSize":1}],"flags":["memory-safe"],"id":1198,"nodeType":"InlineAssembly","src":"13875:648:2"}]},"documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"13597:105:2","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1200,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"13716:18:2","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"element1","nameLocation":"13752:8:2","nodeType":"VariableDeclaration","scope":1200,"src":"13744:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1186,"name":"uint256","nodeType":"ElementaryTypeName","src":"13744:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"element2","nameLocation":"13778:8:2","nodeType":"VariableDeclaration","scope":1200,"src":"13770:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"13770:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13734:58:2"},"returnParameters":{"id":1197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"array1","nameLocation":"13832:6:2","nodeType":"VariableDeclaration","scope":1200,"src":"13815:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1191,"name":"uint256","nodeType":"ElementaryTypeName","src":"13815:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1192,"nodeType":"ArrayTypeName","src":"13815:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1196,"mutability":"mutable","name":"array2","nameLocation":"13857:6:2","nodeType":"VariableDeclaration","scope":1200,"src":"13840:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"13840:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1195,"nodeType":"ArrayTypeName","src":"13840:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13814:50:2"},"scope":1201,"src":"13707:822:2","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1202,"src":"725:13806:2","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[1221,1236,1245,1252]}],"src":"109:14423:2"},"id":2},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1324],"IERC165":[2818]},"id":1325,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1203,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1205,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1325,"sourceUnit":2819,"src":"136:62:3","symbolAliases":[{"foreign":{"id":1204,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"144:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1207,"name":"IERC165","nameLocations":["359:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2818,"src":"359:7:3"},"id":1208,"nodeType":"InheritanceSpecifier","src":"359:7:3"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1206,"nodeType":"StructuredDocumentation","src":"200:136:3","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":1324,"linearizedBaseContracts":[1324,2818],"name":"IERC1155","nameLocation":"347:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1209,"nodeType":"StructuredDocumentation","src":"373:125:3","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1221,"name":"TransferSingle","nameLocation":"509:14:3","nodeType":"EventDefinition","parameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:3","nodeType":"VariableDeclaration","scope":1221,"src":"524:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1213,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:3","nodeType":"VariableDeclaration","scope":1221,"src":"550:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1212,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1215,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:3","nodeType":"VariableDeclaration","scope":1221,"src":"572:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1217,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:3","nodeType":"VariableDeclaration","scope":1221,"src":"592:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1219,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:3","nodeType":"VariableDeclaration","scope":1221,"src":"604:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:3"},"src":"503:116:3"},{"anonymous":false,"documentation":{"id":1222,"nodeType":"StructuredDocumentation","src":"625:144:3","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1236,"name":"TransferBatch","nameLocation":"780:13:3","nodeType":"EventDefinition","parameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1224,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:3","nodeType":"VariableDeclaration","scope":1236,"src":"803:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1223,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1226,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:3","nodeType":"VariableDeclaration","scope":1236,"src":"837:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1225,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1228,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:3","nodeType":"VariableDeclaration","scope":1236,"src":"867:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1231,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:3","nodeType":"VariableDeclaration","scope":1236,"src":"895:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1230,"nodeType":"ArrayTypeName","src":"895:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1234,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:3","nodeType":"VariableDeclaration","scope":1236,"src":"918:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1233,"nodeType":"ArrayTypeName","src":"918:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:3"},"src":"774:167:3"},{"anonymous":false,"documentation":{"id":1237,"nodeType":"StructuredDocumentation","src":"947:147:3","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1245,"name":"ApprovalForAll","nameLocation":"1105:14:3","nodeType":"EventDefinition","parameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:3","nodeType":"VariableDeclaration","scope":1245,"src":"1120:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1241,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:3","nodeType":"VariableDeclaration","scope":1245,"src":"1145:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1240,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1243,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:3","nodeType":"VariableDeclaration","scope":1245,"src":"1171:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1242,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:3"},"src":"1099:87:3"},{"anonymous":false,"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"1192:343:3","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1252,"name":"URI","nameLocation":"1546:3:3","nodeType":"EventDefinition","parameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:3","nodeType":"VariableDeclaration","scope":1252,"src":"1550:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1247,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1250,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:3","nodeType":"VariableDeclaration","scope":1252,"src":"1564:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:3"},"src":"1540:44:3"},{"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"1590:90:3","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":1262,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:3","nodeType":"FunctionDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"account","nameLocation":"1712:7:3","nodeType":"VariableDeclaration","scope":1262,"src":"1704:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"id","nameLocation":"1729:2:3","nodeType":"VariableDeclaration","scope":1262,"src":"1721:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:3"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1262,"src":"1756:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:3"},"scope":1324,"src":"1685:80:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1263,"nodeType":"StructuredDocumentation","src":"1771:188:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1275,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:3","nodeType":"FunctionDefinition","parameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:3","nodeType":"VariableDeclaration","scope":1275,"src":"1997:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1264,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1265,"nodeType":"ArrayTypeName","src":"1997:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"ids","nameLocation":"2053:3:3","nodeType":"VariableDeclaration","scope":1275,"src":"2034:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1267,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1268,"nodeType":"ArrayTypeName","src":"2034:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:3"},"returnParameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1275,"src":"2086:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1272,"nodeType":"ArrayTypeName","src":"2086:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:3"},"scope":1324,"src":"1964:140:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"2110:254:3","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":1283,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:3","nodeType":"FunctionDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"operator","nameLocation":"2404:8:3","nodeType":"VariableDeclaration","scope":1283,"src":"2396:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"approved","nameLocation":"2419:8:3","nodeType":"VariableDeclaration","scope":1283,"src":"2414:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1279,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:3"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[],"src":"2437:0:3"},"scope":1324,"src":"2369:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1284,"nodeType":"StructuredDocumentation","src":"2444:135:3","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1293,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:3","nodeType":"FunctionDefinition","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"account","nameLocation":"2618:7:3","nodeType":"VariableDeclaration","scope":1293,"src":"2610:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1288,"mutability":"mutable","name":"operator","nameLocation":"2635:8:3","nodeType":"VariableDeclaration","scope":1293,"src":"2627:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1287,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:3"},"returnParameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1293,"src":"2668:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1290,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:3"},"scope":1324,"src":"2584:90:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1294,"nodeType":"StructuredDocumentation","src":"2680:927:3","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1307,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3621:16:3","nodeType":"FunctionDefinition","parameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"mutability":"mutable","name":"from","nameLocation":"3646:4:3","nodeType":"VariableDeclaration","scope":1307,"src":"3638:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"3638:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"to","nameLocation":"3660:2:3","nodeType":"VariableDeclaration","scope":1307,"src":"3652:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"3652:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"id","nameLocation":"3672:2:3","nodeType":"VariableDeclaration","scope":1307,"src":"3664:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1302,"mutability":"mutable","name":"value","nameLocation":"3684:5:3","nodeType":"VariableDeclaration","scope":1307,"src":"3676:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"3676:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1304,"mutability":"mutable","name":"data","nameLocation":"3706:4:3","nodeType":"VariableDeclaration","scope":1307,"src":"3691:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1303,"name":"bytes","nodeType":"ElementaryTypeName","src":"3691:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3637:74:3"},"returnParameters":{"id":1306,"nodeType":"ParameterList","parameters":[],"src":"3720:0:3"},"scope":1324,"src":"3612:109:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"3727:831:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1323,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4572:21:3","nodeType":"FunctionDefinition","parameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"from","nameLocation":"4611:4:3","nodeType":"VariableDeclaration","scope":1323,"src":"4603:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"4603:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"to","nameLocation":"4633:2:3","nodeType":"VariableDeclaration","scope":1323,"src":"4625:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1311,"name":"address","nodeType":"ElementaryTypeName","src":"4625:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1315,"mutability":"mutable","name":"ids","nameLocation":"4664:3:3","nodeType":"VariableDeclaration","scope":1323,"src":"4645:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1313,"name":"uint256","nodeType":"ElementaryTypeName","src":"4645:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1314,"nodeType":"ArrayTypeName","src":"4645:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"values","nameLocation":"4696:6:3","nodeType":"VariableDeclaration","scope":1323,"src":"4677:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"4677:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1317,"nodeType":"ArrayTypeName","src":"4677:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"data","nameLocation":"4727:4:3","nodeType":"VariableDeclaration","scope":1323,"src":"4712:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1319,"name":"bytes","nodeType":"ElementaryTypeName","src":"4712:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4593:144:3"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[],"src":"4746:0:3"},"scope":1324,"src":"4563:184:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1325,"src":"337:4412:3","usedErrors":[],"usedEvents":[1221,1236,1245,1252]}],"src":"110:4640:3"},"id":3},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1366],"IERC165":[2818]},"id":1367,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1326,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1328,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1367,"sourceUnit":2819,"src":"144:62:4","symbolAliases":[{"foreign":{"id":1327,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"152:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1330,"name":"IERC165","nameLocations":["357:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":2818,"src":"357:7:4"},"id":1331,"nodeType":"InheritanceSpecifier","src":"357:7:4"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1329,"nodeType":"StructuredDocumentation","src":"208:118:4","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":1366,"linearizedBaseContracts":[1366,2818],"name":"IERC1155Receiver","nameLocation":"337:16:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"371:827:4","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1347,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:4","nodeType":"FunctionDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"operator","nameLocation":"1247:8:4","nodeType":"VariableDeclaration","scope":1347,"src":"1239:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"from","nameLocation":"1273:4:4","nodeType":"VariableDeclaration","scope":1347,"src":"1265:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1335,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"id","nameLocation":"1295:2:4","nodeType":"VariableDeclaration","scope":1347,"src":"1287:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1340,"mutability":"mutable","name":"value","nameLocation":"1315:5:4","nodeType":"VariableDeclaration","scope":1347,"src":"1307:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1342,"mutability":"mutable","name":"data","nameLocation":"1345:4:4","nodeType":"VariableDeclaration","scope":1347,"src":"1330:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1341,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:4"},"returnParameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1347,"src":"1374:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1344,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:4"},"scope":1366,"src":"1203:179:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"1388:995:4","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1365,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:4","nodeType":"FunctionDefinition","parameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"operator","nameLocation":"2437:8:4","nodeType":"VariableDeclaration","scope":1365,"src":"2429:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"from","nameLocation":"2463:4:4","nodeType":"VariableDeclaration","scope":1365,"src":"2455:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1355,"mutability":"mutable","name":"ids","nameLocation":"2496:3:4","nodeType":"VariableDeclaration","scope":1365,"src":"2477:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1353,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1354,"nodeType":"ArrayTypeName","src":"2477:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1358,"mutability":"mutable","name":"values","nameLocation":"2528:6:4","nodeType":"VariableDeclaration","scope":1365,"src":"2509:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1357,"nodeType":"ArrayTypeName","src":"2509:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"data","nameLocation":"2559:4:4","nodeType":"VariableDeclaration","scope":1365,"src":"2544:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1359,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:4"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1365,"src":"2588:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1362,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:4"},"scope":1366,"src":"2388:208:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1367,"src":"327:2271:4","usedErrors":[],"usedEvents":[]}],"src":"118:2481:4"},"id":4},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1324],"IERC1155MetadataURI":[1382]},"id":1383,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1368,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"132:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1370,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1383,"sourceUnit":1325,"src":"158:41:5","symbolAliases":[{"foreign":{"id":1369,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"166:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1372,"name":"IERC1155","nameLocations":["399:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":1324,"src":"399:8:5"},"id":1373,"nodeType":"InheritanceSpecifier","src":"399:8:5"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1371,"nodeType":"StructuredDocumentation","src":"201:164:5","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."},"fullyImplemented":false,"id":1382,"linearizedBaseContracts":[1382,1324,2818],"name":"IERC1155MetadataURI","nameLocation":"376:19:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1374,"nodeType":"StructuredDocumentation","src":"414:192:5","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1381,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:5","nodeType":"FunctionDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"id","nameLocation":"632:2:5","nodeType":"VariableDeclaration","scope":1381,"src":"624:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1375,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:5"},"returnParameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1381,"src":"659:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1378,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:5"},"scope":1382,"src":"611:63:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1383,"src":"366:310:5","usedErrors":[],"usedEvents":[1221,1236,1245,1252]}],"src":"132:545:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","exportedSymbols":{"ERC1155Utils":[1536],"IERC1155Errors":[284],"IERC1155Receiver":[1366]},"id":1537,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1384,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":1386,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1537,"sourceUnit":1367,"src":"146:57:6","symbolAliases":[{"foreign":{"id":1385,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"154:16:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1388,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1537,"sourceUnit":285,"src":"204:70:6","symbolAliases":[{"foreign":{"id":1387,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"212:14:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1155Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1389,"nodeType":"StructuredDocumentation","src":"276:162:6","text":" @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"},"fullyImplemented":true,"id":1536,"linearizedBaseContracts":[1536],"name":"ERC1155Utils","nameLocation":"447:12:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1460,"nodeType":"Block","src":"1191:774:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1405,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1205:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1208:4:6","memberName":"code","nodeType":"MemberAccess","src":"1205:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1213:6:6","memberName":"length","nodeType":"MemberAccess","src":"1205:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1222:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1205:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1459,"nodeType":"IfStatement","src":"1201:758:6","trueBody":{"id":1458,"nodeType":"Block","src":"1225:734:6","statements":[{"clauses":[{"block":{"id":1436,"nodeType":"Block","src":"1341:221:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1423,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"1363:8:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1424,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"1375:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1392:17:6","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"1375:34:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1410:8:6","memberName":"selector","nodeType":"MemberAccess","src":"1375:43:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1363:55:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1435,"nodeType":"IfStatement","src":"1359:189:6","trueBody":{"id":1434,"nodeType":"Block","src":"1420:128:6","statements":[{"errorCall":{"arguments":[{"id":1431,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1526:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1428,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1488:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1503:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"1488:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1433,"nodeType":"RevertStatement","src":"1481:48:6"}]}}]},"errorName":"","id":1437,"nodeType":"TryCatchClause","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"response","nameLocation":"1331:8:6","nodeType":"VariableDeclaration","scope":1437,"src":"1324:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1420,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1324:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1323:17:6"},"src":"1315:247:6"},{"block":{"id":1455,"nodeType":"Block","src":"1591:358:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1441,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"1613:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1620:6:6","memberName":"length","nodeType":"MemberAccess","src":"1613:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1630:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1613:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1453,"nodeType":"Block","src":"1784:151:6","statements":[{"AST":{"nodeType":"YulBlock","src":"1831:86:6","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1868:2:6","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"1872:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1864:3:6"},"nodeType":"YulFunctionCall","src":"1864:15:6"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1887:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1881:5:6"},"nodeType":"YulFunctionCall","src":"1881:13:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1857:6:6"},"nodeType":"YulFunctionCall","src":"1857:38:6"},"nodeType":"YulExpressionStatement","src":"1857:38:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":1439,"isOffset":false,"isSlot":false,"src":"1872:6:6","valueSize":1},{"declaration":1439,"isOffset":false,"isSlot":false,"src":"1887:6:6","valueSize":1}],"flags":["memory-safe"],"id":1452,"nodeType":"InlineAssembly","src":"1806:111:6"}]},"id":1454,"nodeType":"IfStatement","src":"1609:326:6","trueBody":{"id":1451,"nodeType":"Block","src":"1633:145:6","statements":[{"errorCall":{"arguments":[{"id":1448,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1756:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1445,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1718:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1733:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"1718:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1450,"nodeType":"RevertStatement","src":"1711:48:6"}]}}]},"errorName":"","id":1456,"nodeType":"TryCatchClause","parameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"reason","nameLocation":"1583:6:6","nodeType":"VariableDeclaration","scope":1456,"src":"1570:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1438,"name":"bytes","nodeType":"ElementaryTypeName","src":"1570:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1569:21:6"},"src":"1563:386:6"}],"externalCall":{"arguments":[{"id":1414,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"1282:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1415,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"1292:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1416,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"1298:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"1302:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1418,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"1309:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1411,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1260:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1410,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"1243:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1366","typeString":"contract IERC1155Receiver"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1264:17:6","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"1243:38:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:71:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1457,"nodeType":"TryStatement","src":"1239:710:6"}]}}]},"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"466:535:6","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1461,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155Received","nameLocation":"1015:22:6","nodeType":"FunctionDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"mutability":"mutable","name":"operator","nameLocation":"1055:8:6","nodeType":"VariableDeclaration","scope":1461,"src":"1047:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1391,"name":"address","nodeType":"ElementaryTypeName","src":"1047:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1394,"mutability":"mutable","name":"from","nameLocation":"1081:4:6","nodeType":"VariableDeclaration","scope":1461,"src":"1073:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1396,"mutability":"mutable","name":"to","nameLocation":"1103:2:6","nodeType":"VariableDeclaration","scope":1461,"src":"1095:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"1095:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"id","nameLocation":"1123:2:6","nodeType":"VariableDeclaration","scope":1461,"src":"1115:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"value","nameLocation":"1143:5:6","nodeType":"VariableDeclaration","scope":1461,"src":"1135:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1399,"name":"uint256","nodeType":"ElementaryTypeName","src":"1135:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"data","nameLocation":"1171:4:6","nodeType":"VariableDeclaration","scope":1461,"src":"1158:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1401,"name":"bytes","nodeType":"ElementaryTypeName","src":"1158:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1037:144:6"},"returnParameters":{"id":1404,"nodeType":"ParameterList","parameters":[],"src":"1191:0:6"},"scope":1536,"src":"1006:959:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1534,"nodeType":"Block","src":"2731:816:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1479,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"2745:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2748:4:6","memberName":"code","nodeType":"MemberAccess","src":"2745:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2753:6:6","memberName":"length","nodeType":"MemberAccess","src":"2745:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2762:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2745:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1533,"nodeType":"IfStatement","src":"2741:800:6","trueBody":{"id":1532,"nodeType":"Block","src":"2765:776:6","statements":[{"clauses":[{"block":{"id":1510,"nodeType":"Block","src":"2918:226:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1497,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"2940:8:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1498,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"2952:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2969:22:6","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1365,"src":"2952:39:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2992:8:6","memberName":"selector","nodeType":"MemberAccess","src":"2952:48:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2940:60:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1509,"nodeType":"IfStatement","src":"2936:194:6","trueBody":{"id":1508,"nodeType":"Block","src":"3002:128:6","statements":[{"errorCall":{"arguments":[{"id":1505,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"3108:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1502,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"3070:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3085:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"3070:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1507,"nodeType":"RevertStatement","src":"3063:48:6"}]}}]},"errorName":"","id":1511,"nodeType":"TryCatchClause","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"response","nameLocation":"2895:8:6","nodeType":"VariableDeclaration","scope":1511,"src":"2888:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1494,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2888:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2870:47:6"},"src":"2862:282:6"},{"block":{"id":1529,"nodeType":"Block","src":"3173:358:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1515,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"3195:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:6:6","memberName":"length","nodeType":"MemberAccess","src":"3195:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3212:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3195:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1527,"nodeType":"Block","src":"3366:151:6","statements":[{"AST":{"nodeType":"YulBlock","src":"3413:86:6","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3450:2:6","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"3454:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3446:3:6"},"nodeType":"YulFunctionCall","src":"3446:15:6"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"3469:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3463:5:6"},"nodeType":"YulFunctionCall","src":"3463:13:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3439:6:6"},"nodeType":"YulFunctionCall","src":"3439:38:6"},"nodeType":"YulExpressionStatement","src":"3439:38:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":1513,"isOffset":false,"isSlot":false,"src":"3454:6:6","valueSize":1},{"declaration":1513,"isOffset":false,"isSlot":false,"src":"3469:6:6","valueSize":1}],"flags":["memory-safe"],"id":1526,"nodeType":"InlineAssembly","src":"3388:111:6"}]},"id":1528,"nodeType":"IfStatement","src":"3191:326:6","trueBody":{"id":1525,"nodeType":"Block","src":"3215:145:6","statements":[{"errorCall":{"arguments":[{"id":1522,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"3338:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1519,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"3300:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3315:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"3300:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3300:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1524,"nodeType":"RevertStatement","src":"3293:48:6"}]}}]},"errorName":"","id":1530,"nodeType":"TryCatchClause","parameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"reason","nameLocation":"3165:6:6","nodeType":"VariableDeclaration","scope":1530,"src":"3152:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1512,"name":"bytes","nodeType":"ElementaryTypeName","src":"3152:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3151:21:6"},"src":"3145:386:6"}],"externalCall":{"arguments":[{"id":1488,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"2827:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1489,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"2837:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1490,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"2843:3:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1491,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"2848:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1492,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"2856:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1485,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"2800:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1484,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"2783:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2783:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1366","typeString":"contract IERC1155Receiver"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2804:22:6","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1365,"src":"2783:43:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2783:78:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1531,"nodeType":"TryStatement","src":"2779:752:6"}]}}]},"documentation":{"id":1462,"nodeType":"StructuredDocumentation","src":"1971:545:6","text":" @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1535,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155BatchReceived","nameLocation":"2530:27:6","nodeType":"FunctionDefinition","parameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"operator","nameLocation":"2575:8:6","nodeType":"VariableDeclaration","scope":1535,"src":"2567:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1463,"name":"address","nodeType":"ElementaryTypeName","src":"2567:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1466,"mutability":"mutable","name":"from","nameLocation":"2601:4:6","nodeType":"VariableDeclaration","scope":1535,"src":"2593:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1465,"name":"address","nodeType":"ElementaryTypeName","src":"2593:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1468,"mutability":"mutable","name":"to","nameLocation":"2623:2:6","nodeType":"VariableDeclaration","scope":1535,"src":"2615:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"2615:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1471,"mutability":"mutable","name":"ids","nameLocation":"2652:3:6","nodeType":"VariableDeclaration","scope":1535,"src":"2635:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1470,"nodeType":"ArrayTypeName","src":"2635:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"values","nameLocation":"2682:6:6","nodeType":"VariableDeclaration","scope":1535,"src":"2665:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2665:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1473,"nodeType":"ArrayTypeName","src":"2665:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"data","nameLocation":"2711:4:6","nodeType":"VariableDeclaration","scope":1535,"src":"2698:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1475,"name":"bytes","nodeType":"ElementaryTypeName","src":"2698:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2557:164:6"},"returnParameters":{"id":1478,"nodeType":"ParameterList","parameters":[],"src":"2731:0:6"},"scope":1536,"src":"2521:1026:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1537,"src":"439:3110:6","usedErrors":[],"usedEvents":[]}],"src":"120:3430:6"},"id":6},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[2414],"Comparators":[2446],"Math":[4439],"SlotDerivation":[2658],"StorageSlot":[2782]},"id":2415,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1538,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":1540,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2415,"sourceUnit":2447,"src":"209:46:7","symbolAliases":[{"foreign":{"id":1539,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"217:11:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":1542,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2415,"sourceUnit":2659,"src":"256:52:7","symbolAliases":[{"foreign":{"id":1541,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"264:14:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1544,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2415,"sourceUnit":2783,"src":"309:46:7","symbolAliases":[{"foreign":{"id":1543,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"317:11:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1546,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2415,"sourceUnit":4440,"src":"356:37:7","symbolAliases":[{"foreign":{"id":1545,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"364:4:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"395:63:7","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":2414,"linearizedBaseContracts":[2414],"name":"Arrays","nameLocation":"467:6:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1550,"libraryName":{"id":1548,"name":"SlotDerivation","nameLocations":["486:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":2658,"src":"486:14:7"},"nodeType":"UsingForDirective","src":"480:33:7","typeName":{"id":1549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":1553,"libraryName":{"id":1551,"name":"StorageSlot","nameLocations":["524:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":2782,"src":"524:11:7"},"nodeType":"UsingForDirective","src":"518:30:7","typeName":{"id":1552,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":1585,"nodeType":"Block","src":"1628:83:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1575,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"1656:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1574,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"1649:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1578,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"1669:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1577,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"1664:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1580,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"1677:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1573,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"1638:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1582,"nodeType":"ExpressionStatement","src":"1638:44:7"},{"expression":{"id":1583,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"1699:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1572,"id":1584,"nodeType":"Return","src":"1692:12:7"}]},"documentation":{"id":1554,"nodeType":"StructuredDocumentation","src":"554:915:7","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":1586,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:7","nodeType":"FunctionDefinition","parameters":{"id":1568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"array","nameLocation":"1514:5:7","nodeType":"VariableDeclaration","scope":1586,"src":"1497:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1555,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1556,"nodeType":"ArrayTypeName","src":"1497:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1567,"mutability":"mutable","name":"comp","nameLocation":"1576:4:7","nodeType":"VariableDeclaration","scope":1586,"src":"1529:51:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":1566,"nodeType":"FunctionTypeName","parameterTypes":{"id":1562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1566,"src":"1538:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1566,"src":"1547:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1560,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:7"},"returnParameterTypes":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1566,"src":"1570:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1563,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:7"},"src":"1529:51:7","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:7"},"returnParameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1586,"src":"1610:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1570,"nodeType":"ArrayTypeName","src":"1610:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:7"},"scope":2414,"src":"1474:237:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1604,"nodeType":"Block","src":"1894:66:7","statements":[{"expression":{"arguments":[{"id":1597,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"1909:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":1598,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"1916:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2446_$","typeString":"type(library Comparators)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:7","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2431,"src":"1916:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1596,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1586,1605,1637,1658,1690,1711],"referencedDeclaration":1586,"src":"1904:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1601,"nodeType":"ExpressionStatement","src":"1904:27:7"},{"expression":{"id":1602,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"1948:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1595,"id":1603,"nodeType":"Return","src":"1941:12:7"}]},"documentation":{"id":1587,"nodeType":"StructuredDocumentation","src":"1717:93:7","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":1605,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:7","nodeType":"FunctionDefinition","parameters":{"id":1591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1590,"mutability":"mutable","name":"array","nameLocation":"1846:5:7","nodeType":"VariableDeclaration","scope":1605,"src":"1829:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1588,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1589,"nodeType":"ArrayTypeName","src":"1829:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:7"},"returnParameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1605,"src":"1876:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1593,"nodeType":"ArrayTypeName","src":"1876:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:7"},"scope":2414,"src":"1815:145:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1636,"nodeType":"Block","src":"3040:97:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1627,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"3075:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":1626,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[1862,1874],"referencedDeclaration":1862,"src":"3055:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":1630,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"3102:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":1629,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[1900,1926],"referencedDeclaration":1900,"src":"3083:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1625,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1586,1605,1637,1658,1690,1711],"referencedDeclaration":1586,"src":"3050:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1633,"nodeType":"ExpressionStatement","src":"3050:58:7"},{"expression":{"id":1634,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"3125:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1624,"id":1635,"nodeType":"Return","src":"3118:12:7"}]},"documentation":{"id":1606,"nodeType":"StructuredDocumentation","src":"1966:915:7","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":1637,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:7","nodeType":"FunctionDefinition","parameters":{"id":1620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"array","nameLocation":"2926:5:7","nodeType":"VariableDeclaration","scope":1637,"src":"2909:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1607,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1608,"nodeType":"ArrayTypeName","src":"2909:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1619,"mutability":"mutable","name":"comp","nameLocation":"2988:4:7","nodeType":"VariableDeclaration","scope":1637,"src":"2941:51:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":1618,"nodeType":"FunctionTypeName","parameterTypes":{"id":1614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1618,"src":"2950:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1610,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1618,"src":"2959:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1612,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:7"},"returnParameterTypes":{"id":1617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1618,"src":"2982:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1615,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:7"},"src":"2941:51:7","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:7"},"returnParameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1637,"src":"3022:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1621,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1622,"nodeType":"ArrayTypeName","src":"3022:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:7"},"scope":2414,"src":"2886:251:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1657,"nodeType":"Block","src":"3320:87:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1649,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"3355:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":1648,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[1862,1874],"referencedDeclaration":1862,"src":"3335:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":1651,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"3363:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2446_$","typeString":"type(library Comparators)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:7","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2431,"src":"3363:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1647,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1586,1605,1637,1658,1690,1711],"referencedDeclaration":1586,"src":"3330:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1654,"nodeType":"ExpressionStatement","src":"3330:48:7"},{"expression":{"id":1655,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"3395:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1646,"id":1656,"nodeType":"Return","src":"3388:12:7"}]},"documentation":{"id":1638,"nodeType":"StructuredDocumentation","src":"3143:93:7","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":1658,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:7","nodeType":"FunctionDefinition","parameters":{"id":1642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1641,"mutability":"mutable","name":"array","nameLocation":"3272:5:7","nodeType":"VariableDeclaration","scope":1658,"src":"3255:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1639,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1640,"nodeType":"ArrayTypeName","src":"3255:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:7"},"returnParameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1658,"src":"3302:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1643,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1644,"nodeType":"ArrayTypeName","src":"3302:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:7"},"scope":2414,"src":"3241:166:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1689,"nodeType":"Block","src":"4487:97:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1680,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"4522:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1679,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[1862,1874],"referencedDeclaration":1874,"src":"4502:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":1683,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"4549:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":1682,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[1900,1926],"referencedDeclaration":1926,"src":"4530:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1678,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1586,1605,1637,1658,1690,1711],"referencedDeclaration":1586,"src":"4497:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1686,"nodeType":"ExpressionStatement","src":"4497:58:7"},{"expression":{"id":1687,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"4572:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":1677,"id":1688,"nodeType":"Return","src":"4565:12:7"}]},"documentation":{"id":1659,"nodeType":"StructuredDocumentation","src":"3413:915:7","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":1690,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:7","nodeType":"FunctionDefinition","parameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1662,"mutability":"mutable","name":"array","nameLocation":"4373:5:7","nodeType":"VariableDeclaration","scope":1690,"src":"4356:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1660,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1661,"nodeType":"ArrayTypeName","src":"4356:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1672,"mutability":"mutable","name":"comp","nameLocation":"4435:4:7","nodeType":"VariableDeclaration","scope":1690,"src":"4388:51:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":1671,"nodeType":"FunctionTypeName","parameterTypes":{"id":1667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1671,"src":"4397:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1671,"src":"4406:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1665,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:7"},"returnParameterTypes":{"id":1670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1671,"src":"4429:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1668,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:7"},"src":"4388:51:7","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:7"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1690,"src":"4469:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1675,"nodeType":"ArrayTypeName","src":"4469:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:7"},"scope":2414,"src":"4333:251:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1710,"nodeType":"Block","src":"4767:87:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1702,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"4802:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1701,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[1862,1874],"referencedDeclaration":1874,"src":"4782:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":1704,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"4810:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2446_$","typeString":"type(library Comparators)"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:7","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2431,"src":"4810:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1700,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1586,1605,1637,1658,1690,1711],"referencedDeclaration":1586,"src":"4777:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1707,"nodeType":"ExpressionStatement","src":"4777:48:7"},{"expression":{"id":1708,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"4842:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":1699,"id":1709,"nodeType":"Return","src":"4835:12:7"}]},"documentation":{"id":1691,"nodeType":"StructuredDocumentation","src":"4590:93:7","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":1711,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:7","nodeType":"FunctionDefinition","parameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"array","nameLocation":"4719:5:7","nodeType":"VariableDeclaration","scope":1711,"src":"4702:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1693,"nodeType":"ArrayTypeName","src":"4702:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:7"},"returnParameters":{"id":1699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1711,"src":"4749:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1696,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1697,"nodeType":"ArrayTypeName","src":"4749:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:7"},"scope":2414,"src":"4688:166:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1798,"nodeType":"Block","src":"5470:889:7","statements":[{"id":1797,"nodeType":"UncheckedBlock","src":"5480:873:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1729,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"5508:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1730,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"5514:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1735,"nodeType":"IfStatement","src":"5504:31:7","trueBody":{"functionReturnParameters":1728,"id":1734,"nodeType":"Return","src":"5528:7:7"}},{"assignments":[1737],"declarations":[{"constant":false,"id":1737,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:7","nodeType":"VariableDeclaration","scope":1797,"src":"5591:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1736,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1741,"initialValue":{"arguments":[{"id":1739,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"5614:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1738,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"5607:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:7"},{"assignments":[1743],"declarations":[{"constant":false,"id":1743,"mutability":"mutable","name":"pos","nameLocation":"5715:3:7","nodeType":"VariableDeclaration","scope":1797,"src":"5707:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1742,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1745,"initialValue":{"id":1744,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"5721:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:7"},{"body":{"id":1776,"nodeType":"Block","src":"5795:331:7","statements":[{"condition":{"arguments":[{"arguments":[{"id":1761,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"5829:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1760,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"5822:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1763,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"5834:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1759,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"5817:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1775,"nodeType":"IfStatement","src":"5813:299:7","trueBody":{"id":1774,"nodeType":"Block","src":"5842:270:7","statements":[{"expression":{"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1765,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"6046:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1768,"nodeType":"ExpressionStatement","src":"6046:11:7"},{"expression":{"arguments":[{"id":1770,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"6085:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1771,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"6090:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1769,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"6079:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1773,"nodeType":"ExpressionStatement","src":"6079:14:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1752,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"5773:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1753,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"5778:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1777,"initializationExpression":{"assignments":[1747],"declarations":[{"constant":false,"id":1747,"mutability":"mutable","name":"it","nameLocation":"5754:2:7","nodeType":"VariableDeclaration","scope":1777,"src":"5746:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1751,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1748,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"5759:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:7"},"loopExpression":{"expression":{"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1755,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"5783:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1758,"nodeType":"ExpressionStatement","src":"5783:10:7"},"nodeType":"ForStatement","src":"5741:385:7"},{"expression":{"arguments":[{"id":1779,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"6146:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1780,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"6153:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1778,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"6140:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1782,"nodeType":"ExpressionStatement","src":"6140:17:7"},{"expression":{"arguments":[{"id":1784,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"6207:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1785,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"6214:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1786,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"6219:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1783,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"6196:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1788,"nodeType":"ExpressionStatement","src":"6196:28:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1790,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"6284:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1793,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"6296:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1794,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"6301:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1789,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"6273:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1796,"nodeType":"ExpressionStatement","src":"6273:33:7"}]}]},"documentation":{"id":1712,"nodeType":"StructuredDocumentation","src":"4860:491:7","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":1799,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:7","nodeType":"FunctionDefinition","parameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"begin","nameLocation":"5384:5:7","nodeType":"VariableDeclaration","scope":1799,"src":"5376:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1713,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"end","nameLocation":"5399:3:7","nodeType":"VariableDeclaration","scope":1799,"src":"5391:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1726,"mutability":"mutable","name":"comp","nameLocation":"5451:4:7","nodeType":"VariableDeclaration","scope":1799,"src":"5404:51:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":1725,"nodeType":"FunctionTypeName","parameterTypes":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1725,"src":"5413:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1725,"src":"5422:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:7"},"returnParameterTypes":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1725,"src":"5445:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1722,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:7"},"src":"5404:51:7","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:7"},"returnParameters":{"id":1728,"nodeType":"ParameterList","parameters":[],"src":"5470:0:7"},"scope":2414,"src":"5356:1003:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1809,"nodeType":"Block","src":"6532:88:7","statements":[{"AST":{"nodeType":"YulBlock","src":"6567:47:7","statements":[{"nodeType":"YulAssignment","src":"6581:23:7","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6592:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"6599:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6588:3:7"},"nodeType":"YulFunctionCall","src":"6588:16:7"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"6581:3:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1803,"isOffset":false,"isSlot":false,"src":"6592:5:7","valueSize":1},{"declaration":1806,"isOffset":false,"isSlot":false,"src":"6581:3:7","valueSize":1}],"flags":["memory-safe"],"id":1808,"nodeType":"InlineAssembly","src":"6542:72:7"}]},"documentation":{"id":1800,"nodeType":"StructuredDocumentation","src":"6365:87:7","text":" @dev Pointer to the memory location of the first element of `array`."},"id":1810,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:7","nodeType":"FunctionDefinition","parameters":{"id":1804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1803,"mutability":"mutable","name":"array","nameLocation":"6490:5:7","nodeType":"VariableDeclaration","scope":1810,"src":"6473:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1801,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1802,"nodeType":"ArrayTypeName","src":"6473:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:7"},"returnParameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:7","nodeType":"VariableDeclaration","scope":1810,"src":"6519:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:7"},"scope":2414,"src":"6457:163:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1829,"nodeType":"Block","src":"6892:93:7","statements":[{"id":1828,"nodeType":"UncheckedBlock","src":"6902:77:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1820,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"6940:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1819,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"6933:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1822,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"6949:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:7","memberName":"length","nodeType":"MemberAccess","src":"6949:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1818,"id":1827,"nodeType":"Return","src":"6926:42:7"}]}]},"documentation":{"id":1811,"nodeType":"StructuredDocumentation","src":"6626:188:7","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":1830,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:7","nodeType":"FunctionDefinition","parameters":{"id":1815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1814,"mutability":"mutable","name":"array","nameLocation":"6850:5:7","nodeType":"VariableDeclaration","scope":1830,"src":"6833:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1812,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1813,"nodeType":"ArrayTypeName","src":"6833:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:7"},"returnParameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1817,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:7","nodeType":"VariableDeclaration","scope":1830,"src":"6879:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1816,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:7"},"scope":2414,"src":"6819:166:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1839,"nodeType":"Block","src":"7136:68:7","statements":[{"AST":{"nodeType":"YulBlock","src":"7155:43:7","statements":[{"nodeType":"YulAssignment","src":"7169:19:7","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7184:3:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7178:5:7"},"nodeType":"YulFunctionCall","src":"7178:10:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7169:5:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1833,"isOffset":false,"isSlot":false,"src":"7184:3:7","valueSize":1},{"declaration":1836,"isOffset":false,"isSlot":false,"src":"7169:5:7","valueSize":1}],"id":1838,"nodeType":"InlineAssembly","src":"7146:52:7"}]},"documentation":{"id":1831,"nodeType":"StructuredDocumentation","src":"6991:74:7","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":1840,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:7","nodeType":"FunctionDefinition","parameters":{"id":1834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1833,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:7","nodeType":"VariableDeclaration","scope":1840,"src":"7086:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1832,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:7"},"returnParameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"value","nameLocation":"7129:5:7","nodeType":"VariableDeclaration","scope":1840,"src":"7121:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:7"},"scope":2414,"src":"7070:134:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1849,"nodeType":"Block","src":"7348:178:7","statements":[{"AST":{"nodeType":"YulBlock","src":"7367:153:7","statements":[{"nodeType":"YulVariableDeclaration","src":"7381:25:7","value":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7401:4:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7395:5:7"},"nodeType":"YulFunctionCall","src":"7395:11:7"},"variables":[{"name":"value1","nodeType":"YulTypedName","src":"7385:6:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7419:25:7","value":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7439:4:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7433:5:7"},"nodeType":"YulFunctionCall","src":"7433:11:7"},"variables":[{"name":"value2","nodeType":"YulTypedName","src":"7423:6:7","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7464:4:7"},{"name":"value2","nodeType":"YulIdentifier","src":"7470:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7457:6:7"},"nodeType":"YulFunctionCall","src":"7457:20:7"},"nodeType":"YulExpressionStatement","src":"7457:20:7"},{"expression":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7497:4:7"},{"name":"value1","nodeType":"YulIdentifier","src":"7503:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7490:6:7"},"nodeType":"YulFunctionCall","src":"7490:20:7"},"nodeType":"YulExpressionStatement","src":"7490:20:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":1843,"isOffset":false,"isSlot":false,"src":"7401:4:7","valueSize":1},{"declaration":1843,"isOffset":false,"isSlot":false,"src":"7464:4:7","valueSize":1},{"declaration":1845,"isOffset":false,"isSlot":false,"src":"7439:4:7","valueSize":1},{"declaration":1845,"isOffset":false,"isSlot":false,"src":"7497:4:7","valueSize":1}],"id":1848,"nodeType":"InlineAssembly","src":"7358:162:7"}]},"documentation":{"id":1841,"nodeType":"StructuredDocumentation","src":"7210:77:7","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":1850,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:7","nodeType":"FunctionDefinition","parameters":{"id":1846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:7","nodeType":"VariableDeclaration","scope":1850,"src":"7307:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1842,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1845,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:7","nodeType":"VariableDeclaration","scope":1850,"src":"7321:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1844,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:7"},"returnParameters":{"id":1847,"nodeType":"ParameterList","parameters":[],"src":"7348:0:7"},"scope":2414,"src":"7292:234:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1861,"nodeType":"Block","src":"7713:64:7","statements":[{"AST":{"nodeType":"YulBlock","src":"7732:39:7","statements":[{"nodeType":"YulAssignment","src":"7746:15:7","value":{"name":"input","nodeType":"YulIdentifier","src":"7756:5:7"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7746:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1854,"isOffset":false,"isSlot":false,"src":"7756:5:7","valueSize":1},{"declaration":1858,"isOffset":false,"isSlot":false,"src":"7746:6:7","valueSize":1}],"id":1860,"nodeType":"InlineAssembly","src":"7723:48:7"}]},"documentation":{"id":1851,"nodeType":"StructuredDocumentation","src":"7532:76:7","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":1862,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:7","nodeType":"FunctionDefinition","parameters":{"id":1855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1854,"mutability":"mutable","name":"input","nameLocation":"7659:5:7","nodeType":"VariableDeclaration","scope":1862,"src":"7642:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1852,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1853,"nodeType":"ArrayTypeName","src":"7642:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:7"},"returnParameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"output","nameLocation":"7705:6:7","nodeType":"VariableDeclaration","scope":1862,"src":"7688:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1856,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1857,"nodeType":"ArrayTypeName","src":"7688:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:7"},"scope":2414,"src":"7613:164:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1873,"nodeType":"Block","src":"7964:64:7","statements":[{"AST":{"nodeType":"YulBlock","src":"7983:39:7","statements":[{"nodeType":"YulAssignment","src":"7997:15:7","value":{"name":"input","nodeType":"YulIdentifier","src":"8007:5:7"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7997:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1866,"isOffset":false,"isSlot":false,"src":"8007:5:7","valueSize":1},{"declaration":1870,"isOffset":false,"isSlot":false,"src":"7997:6:7","valueSize":1}],"id":1872,"nodeType":"InlineAssembly","src":"7974:48:7"}]},"documentation":{"id":1863,"nodeType":"StructuredDocumentation","src":"7783:76:7","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":1874,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:7","nodeType":"FunctionDefinition","parameters":{"id":1867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1866,"mutability":"mutable","name":"input","nameLocation":"7910:5:7","nodeType":"VariableDeclaration","scope":1874,"src":"7893:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1864,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1865,"nodeType":"ArrayTypeName","src":"7893:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:7"},"returnParameters":{"id":1871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"output","nameLocation":"7956:6:7","nodeType":"VariableDeclaration","scope":1874,"src":"7939:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1868,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1869,"nodeType":"ArrayTypeName","src":"7939:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:7"},"scope":2414,"src":"7864:164:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1899,"nodeType":"Block","src":"8290:64:7","statements":[{"AST":{"nodeType":"YulBlock","src":"8309:39:7","statements":[{"nodeType":"YulAssignment","src":"8323:15:7","value":{"name":"input","nodeType":"YulIdentifier","src":"8333:5:7"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8323:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1885,"isOffset":false,"isSlot":false,"src":"8333:5:7","valueSize":1},{"declaration":1896,"isOffset":false,"isSlot":false,"src":"8323:6:7","valueSize":1}],"id":1898,"nodeType":"InlineAssembly","src":"8300:48:7"}]},"documentation":{"id":1875,"nodeType":"StructuredDocumentation","src":"8034:78:7","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":1900,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:7","nodeType":"FunctionDefinition","parameters":{"id":1886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1885,"mutability":"mutable","name":"input","nameLocation":"8201:5:7","nodeType":"VariableDeclaration","scope":1900,"src":"8154:52:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":1884,"nodeType":"FunctionTypeName","parameterTypes":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1884,"src":"8163:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1876,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1884,"src":"8172:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1878,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:7"},"returnParameterTypes":{"id":1883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1884,"src":"8195:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1881,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:7"},"src":"8154:52:7","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:7"},"returnParameters":{"id":1897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1896,"mutability":"mutable","name":"output","nameLocation":"8282:6:7","nodeType":"VariableDeclaration","scope":1900,"src":"8235:53:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":1895,"nodeType":"FunctionTypeName","parameterTypes":{"id":1891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1895,"src":"8244:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1887,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1895,"src":"8253:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1889,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:7"},"returnParameterTypes":{"id":1894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1895,"src":"8276:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1892,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:7"},"src":"8235:53:7","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:7"},"scope":2414,"src":"8117:237:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1925,"nodeType":"Block","src":"8616:64:7","statements":[{"AST":{"nodeType":"YulBlock","src":"8635:39:7","statements":[{"nodeType":"YulAssignment","src":"8649:15:7","value":{"name":"input","nodeType":"YulIdentifier","src":"8659:5:7"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8649:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1911,"isOffset":false,"isSlot":false,"src":"8659:5:7","valueSize":1},{"declaration":1922,"isOffset":false,"isSlot":false,"src":"8649:6:7","valueSize":1}],"id":1924,"nodeType":"InlineAssembly","src":"8626:48:7"}]},"documentation":{"id":1901,"nodeType":"StructuredDocumentation","src":"8360:78:7","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":1926,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:7","nodeType":"FunctionDefinition","parameters":{"id":1912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1911,"mutability":"mutable","name":"input","nameLocation":"8527:5:7","nodeType":"VariableDeclaration","scope":1926,"src":"8480:52:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":1910,"nodeType":"FunctionTypeName","parameterTypes":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1910,"src":"8489:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1910,"src":"8498:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:7"},"returnParameterTypes":{"id":1909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1910,"src":"8521:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1907,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:7"},"src":"8480:52:7","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:7"},"returnParameters":{"id":1923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1922,"mutability":"mutable","name":"output","nameLocation":"8608:6:7","nodeType":"VariableDeclaration","scope":1926,"src":"8561:53:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":1921,"nodeType":"FunctionTypeName","parameterTypes":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1921,"src":"8570:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1913,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1921,"src":"8579:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1915,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:7"},"returnParameterTypes":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1921,"src":"8602:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1918,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:7"},"src":"8561:53:7","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:7"},"scope":2414,"src":"8443:237:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2008,"nodeType":"Block","src":"9405:834:7","statements":[{"assignments":[1938],"declarations":[{"constant":false,"id":1938,"mutability":"mutable","name":"low","nameLocation":"9423:3:7","nodeType":"VariableDeclaration","scope":2008,"src":"9415:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1940,"initialValue":{"hexValue":"30","id":1939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:7"},{"assignments":[1942],"declarations":[{"constant":false,"id":1942,"mutability":"mutable","name":"high","nameLocation":"9448:4:7","nodeType":"VariableDeclaration","scope":2008,"src":"9440:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1941,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1945,"initialValue":{"expression":{"id":1943,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"9455:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:7","memberName":"length","nodeType":"MemberAccess","src":"9455:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1946,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"9482:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1952,"nodeType":"IfStatement","src":"9478:48:7","trueBody":{"id":1951,"nodeType":"Block","src":"9493:33:7","statements":[{"expression":{"hexValue":"30","id":1949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1936,"id":1950,"nodeType":"Return","src":"9507:8:7"}]}},{"body":{"id":1984,"nodeType":"Block","src":"9555:423:7","statements":[{"assignments":[1957],"declarations":[{"constant":false,"id":1957,"mutability":"mutable","name":"mid","nameLocation":"9577:3:7","nodeType":"VariableDeclaration","scope":1984,"src":"9569:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1956,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1963,"initialValue":{"arguments":[{"id":1960,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"9596:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1961,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"9601:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1958,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"9583:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4439_$","typeString":"type(library Math)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:7","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3168,"src":"9583:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1965,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"9844:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":1966,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"9851:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1964,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2289,2315,2341],"referencedDeclaration":2341,"src":"9831:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2673_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2673_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":1968,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:7","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2672,"src":"9831:30:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1969,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"9864:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1982,"nodeType":"Block","src":"9922:46:7","statements":[{"expression":{"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1976,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"9940:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1977,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"9946:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1981,"nodeType":"ExpressionStatement","src":"9940:13:7"}]},"id":1983,"nodeType":"IfStatement","src":"9827:141:7","trueBody":{"id":1975,"nodeType":"Block","src":"9873:43:7","statements":[{"expression":{"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1971,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"9891:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1972,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"9898:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1974,"nodeType":"ExpressionStatement","src":"9891:10:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1953,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"9543:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1954,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"9549:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1985,"nodeType":"WhileStatement","src":"9536:442:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1986,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"10095:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1990,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"10119:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1991,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"10126:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1989,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2289,2315,2341],"referencedDeclaration":2341,"src":"10106:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2673_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2673_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":1995,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:7","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2672,"src":"10106:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1996,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"10144:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2006,"nodeType":"Block","src":"10198:35:7","statements":[{"expression":{"id":2004,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"10219:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1936,"id":2005,"nodeType":"Return","src":"10212:10:7"}]},"id":2007,"nodeType":"IfStatement","src":"10091:142:7","trueBody":{"id":2003,"nodeType":"Block","src":"10153:39:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1999,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"10174:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1936,"id":2002,"nodeType":"Return","src":"10167:14:7"}]}}]},"documentation":{"id":1927,"nodeType":"StructuredDocumentation","src":"8686:616:7","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":2009,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:7","nodeType":"FunctionDefinition","parameters":{"id":1933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"array","nameLocation":"9349:5:7","nodeType":"VariableDeclaration","scope":2009,"src":"9331:23:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1928,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1929,"nodeType":"ArrayTypeName","src":"9331:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1932,"mutability":"mutable","name":"element","nameLocation":"9364:7:7","nodeType":"VariableDeclaration","scope":2009,"src":"9356:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1931,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:7"},"returnParameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2009,"src":"9396:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:7"},"scope":2414,"src":"9307:932:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2072,"nodeType":"Block","src":"10756:709:7","statements":[{"assignments":[2021],"declarations":[{"constant":false,"id":2021,"mutability":"mutable","name":"low","nameLocation":"10774:3:7","nodeType":"VariableDeclaration","scope":2072,"src":"10766:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2020,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2023,"initialValue":{"hexValue":"30","id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:7"},{"assignments":[2025],"declarations":[{"constant":false,"id":2025,"mutability":"mutable","name":"high","nameLocation":"10799:4:7","nodeType":"VariableDeclaration","scope":2072,"src":"10791:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2028,"initialValue":{"expression":{"id":2026,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"10806:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:7","memberName":"length","nodeType":"MemberAccess","src":"10806:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2029,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"10833:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2035,"nodeType":"IfStatement","src":"10829:48:7","trueBody":{"id":2034,"nodeType":"Block","src":"10844:33:7","statements":[{"expression":{"hexValue":"30","id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2019,"id":2033,"nodeType":"Return","src":"10858:8:7"}]}},{"body":{"id":2068,"nodeType":"Block","src":"10906:532:7","statements":[{"assignments":[2040],"declarations":[{"constant":false,"id":2040,"mutability":"mutable","name":"mid","nameLocation":"10928:3:7","nodeType":"VariableDeclaration","scope":2068,"src":"10920:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2039,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2046,"initialValue":{"arguments":[{"id":2043,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"10947:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2044,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"10952:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2041,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"10934:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4439_$","typeString":"type(library Math)"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:7","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3168,"src":"10934:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2048,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"11195:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2049,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"11202:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2047,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2289,2315,2341],"referencedDeclaration":2341,"src":"11182:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2673_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2673_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2051,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:7","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2672,"src":"11182:30:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2052,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"11215:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2066,"nodeType":"Block","src":"11385:43:7","statements":[{"expression":{"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2062,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"11403:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2063,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"11410:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2065,"nodeType":"ExpressionStatement","src":"11403:10:7"}]},"id":2067,"nodeType":"IfStatement","src":"11178:250:7","trueBody":{"id":2061,"nodeType":"Block","src":"11224:155:7","statements":[{"id":2060,"nodeType":"UncheckedBlock","src":"11301:64:7","statements":[{"expression":{"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2054,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"11333:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2055,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"11339:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2059,"nodeType":"ExpressionStatement","src":"11333:13:7"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2036,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"10894:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2037,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"10900:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2069,"nodeType":"WhileStatement","src":"10887:551:7"},{"expression":{"id":2070,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"11455:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2019,"id":2071,"nodeType":"Return","src":"11448:10:7"}]},"documentation":{"id":2010,"nodeType":"StructuredDocumentation","src":"10245:412:7","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":2073,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:7","nodeType":"FunctionDefinition","parameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2013,"mutability":"mutable","name":"array","nameLocation":"10700:5:7","nodeType":"VariableDeclaration","scope":2073,"src":"10682:23:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2011,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2012,"nodeType":"ArrayTypeName","src":"10682:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2015,"mutability":"mutable","name":"element","nameLocation":"10715:7:7","nodeType":"VariableDeclaration","scope":2073,"src":"10707:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2014,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:7"},"returnParameters":{"id":2019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2073,"src":"10747:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2017,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:7"},"scope":2414,"src":"10662:803:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2136,"nodeType":"Block","src":"11982:709:7","statements":[{"assignments":[2085],"declarations":[{"constant":false,"id":2085,"mutability":"mutable","name":"low","nameLocation":"12000:3:7","nodeType":"VariableDeclaration","scope":2136,"src":"11992:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2084,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2087,"initialValue":{"hexValue":"30","id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:7"},{"assignments":[2089],"declarations":[{"constant":false,"id":2089,"mutability":"mutable","name":"high","nameLocation":"12025:4:7","nodeType":"VariableDeclaration","scope":2136,"src":"12017:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2088,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2092,"initialValue":{"expression":{"id":2090,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"12032:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:7","memberName":"length","nodeType":"MemberAccess","src":"12032:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2093,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"12059:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2099,"nodeType":"IfStatement","src":"12055:48:7","trueBody":{"id":2098,"nodeType":"Block","src":"12070:33:7","statements":[{"expression":{"hexValue":"30","id":2096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2083,"id":2097,"nodeType":"Return","src":"12084:8:7"}]}},{"body":{"id":2132,"nodeType":"Block","src":"12132:532:7","statements":[{"assignments":[2104],"declarations":[{"constant":false,"id":2104,"mutability":"mutable","name":"mid","nameLocation":"12154:3:7","nodeType":"VariableDeclaration","scope":2132,"src":"12146:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2103,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2110,"initialValue":{"arguments":[{"id":2107,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"12173:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2108,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"12178:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2105,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"12160:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4439_$","typeString":"type(library Math)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:7","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3168,"src":"12160:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2112,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"12421:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2113,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"12428:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2111,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2289,2315,2341],"referencedDeclaration":2341,"src":"12408:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2673_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2673_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:7","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2672,"src":"12408:30:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2116,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"12441:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2130,"nodeType":"Block","src":"12499:155:7","statements":[{"id":2129,"nodeType":"UncheckedBlock","src":"12576:64:7","statements":[{"expression":{"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2123,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"12608:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2124,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"12614:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2128,"nodeType":"ExpressionStatement","src":"12608:13:7"}]}]},"id":2131,"nodeType":"IfStatement","src":"12404:250:7","trueBody":{"id":2122,"nodeType":"Block","src":"12450:43:7","statements":[{"expression":{"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2118,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"12468:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2119,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"12475:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2121,"nodeType":"ExpressionStatement","src":"12468:10:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2100,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"12120:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2101,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"12126:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2133,"nodeType":"WhileStatement","src":"12113:551:7"},{"expression":{"id":2134,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"12681:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2083,"id":2135,"nodeType":"Return","src":"12674:10:7"}]},"documentation":{"id":2074,"nodeType":"StructuredDocumentation","src":"11471:412:7","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":2137,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:7","nodeType":"FunctionDefinition","parameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2077,"mutability":"mutable","name":"array","nameLocation":"11926:5:7","nodeType":"VariableDeclaration","scope":2137,"src":"11908:23:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2075,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2076,"nodeType":"ArrayTypeName","src":"11908:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2079,"mutability":"mutable","name":"element","nameLocation":"11941:7:7","nodeType":"VariableDeclaration","scope":2137,"src":"11933:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2078,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:7"},"returnParameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2137,"src":"11973:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2081,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:7"},"scope":2414,"src":"11888:803:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2199,"nodeType":"Block","src":"12875:709:7","statements":[{"assignments":[2149],"declarations":[{"constant":false,"id":2149,"mutability":"mutable","name":"low","nameLocation":"12893:3:7","nodeType":"VariableDeclaration","scope":2199,"src":"12885:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2148,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2151,"initialValue":{"hexValue":"30","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:7"},{"assignments":[2153],"declarations":[{"constant":false,"id":2153,"mutability":"mutable","name":"high","nameLocation":"12918:4:7","nodeType":"VariableDeclaration","scope":2199,"src":"12910:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2152,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2156,"initialValue":{"expression":{"id":2154,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"12925:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:7","memberName":"length","nodeType":"MemberAccess","src":"12925:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2157,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"12952:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2163,"nodeType":"IfStatement","src":"12948:48:7","trueBody":{"id":2162,"nodeType":"Block","src":"12963:33:7","statements":[{"expression":{"hexValue":"30","id":2160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2147,"id":2161,"nodeType":"Return","src":"12977:8:7"}]}},{"body":{"id":2195,"nodeType":"Block","src":"13025:532:7","statements":[{"assignments":[2168],"declarations":[{"constant":false,"id":2168,"mutability":"mutable","name":"mid","nameLocation":"13047:3:7","nodeType":"VariableDeclaration","scope":2195,"src":"13039:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2167,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2174,"initialValue":{"arguments":[{"id":2171,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"13066:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2172,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"13071:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2169,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"13053:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4439_$","typeString":"type(library Math)"}},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:7","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3168,"src":"13053:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2176,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"13320:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2177,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"13327:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2175,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[2354,2367,2380],"referencedDeclaration":2380,"src":"13301:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2179,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"13334:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2193,"nodeType":"Block","src":"13504:43:7","statements":[{"expression":{"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2189,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"13522:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2190,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"13529:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2192,"nodeType":"ExpressionStatement","src":"13522:10:7"}]},"id":2194,"nodeType":"IfStatement","src":"13297:250:7","trueBody":{"id":2188,"nodeType":"Block","src":"13343:155:7","statements":[{"id":2187,"nodeType":"UncheckedBlock","src":"13420:64:7","statements":[{"expression":{"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2181,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"13452:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2182,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"13458:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2186,"nodeType":"ExpressionStatement","src":"13452:13:7"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2164,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"13013:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2165,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"13019:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2196,"nodeType":"WhileStatement","src":"13006:551:7"},{"expression":{"id":2197,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"13574:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2147,"id":2198,"nodeType":"Return","src":"13567:10:7"}]},"documentation":{"id":2138,"nodeType":"StructuredDocumentation","src":"12697:74:7","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":2200,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:7","nodeType":"FunctionDefinition","parameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"array","nameLocation":"12819:5:7","nodeType":"VariableDeclaration","scope":2200,"src":"12802:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2139,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2140,"nodeType":"ArrayTypeName","src":"12802:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2143,"mutability":"mutable","name":"element","nameLocation":"12834:7:7","nodeType":"VariableDeclaration","scope":2200,"src":"12826:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2142,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:7"},"returnParameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2200,"src":"12866:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:7"},"scope":2414,"src":"12776:808:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2262,"nodeType":"Block","src":"13768:709:7","statements":[{"assignments":[2212],"declarations":[{"constant":false,"id":2212,"mutability":"mutable","name":"low","nameLocation":"13786:3:7","nodeType":"VariableDeclaration","scope":2262,"src":"13778:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2211,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2214,"initialValue":{"hexValue":"30","id":2213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:7"},{"assignments":[2216],"declarations":[{"constant":false,"id":2216,"mutability":"mutable","name":"high","nameLocation":"13811:4:7","nodeType":"VariableDeclaration","scope":2262,"src":"13803:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2215,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2219,"initialValue":{"expression":{"id":2217,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"13818:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:7","memberName":"length","nodeType":"MemberAccess","src":"13818:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2220,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"13845:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2226,"nodeType":"IfStatement","src":"13841:48:7","trueBody":{"id":2225,"nodeType":"Block","src":"13856:33:7","statements":[{"expression":{"hexValue":"30","id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2210,"id":2224,"nodeType":"Return","src":"13870:8:7"}]}},{"body":{"id":2258,"nodeType":"Block","src":"13918:532:7","statements":[{"assignments":[2231],"declarations":[{"constant":false,"id":2231,"mutability":"mutable","name":"mid","nameLocation":"13940:3:7","nodeType":"VariableDeclaration","scope":2258,"src":"13932:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2230,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2237,"initialValue":{"arguments":[{"id":2234,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"13959:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2235,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"13964:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2232,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"13946:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4439_$","typeString":"type(library Math)"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:7","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3168,"src":"13946:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2239,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"14213:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2240,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"14220:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2238,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[2354,2367,2380],"referencedDeclaration":2380,"src":"14194:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2242,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"14227:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2256,"nodeType":"Block","src":"14285:155:7","statements":[{"id":2255,"nodeType":"UncheckedBlock","src":"14362:64:7","statements":[{"expression":{"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2249,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"14394:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2250,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"14400:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2254,"nodeType":"ExpressionStatement","src":"14394:13:7"}]}]},"id":2257,"nodeType":"IfStatement","src":"14190:250:7","trueBody":{"id":2248,"nodeType":"Block","src":"14236:43:7","statements":[{"expression":{"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2244,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"14254:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2245,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"14261:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2247,"nodeType":"ExpressionStatement","src":"14254:10:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2227,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"13906:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2228,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"13912:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2259,"nodeType":"WhileStatement","src":"13899:551:7"},{"expression":{"id":2260,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"14467:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2210,"id":2261,"nodeType":"Return","src":"14460:10:7"}]},"documentation":{"id":2201,"nodeType":"StructuredDocumentation","src":"13590:74:7","text":" @dev Same as {upperBound}, but with an array in memory."},"id":2263,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:7","nodeType":"FunctionDefinition","parameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2204,"mutability":"mutable","name":"array","nameLocation":"13712:5:7","nodeType":"VariableDeclaration","scope":2263,"src":"13695:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2202,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2203,"nodeType":"ArrayTypeName","src":"13695:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2206,"mutability":"mutable","name":"element","nameLocation":"13727:7:7","nodeType":"VariableDeclaration","scope":2263,"src":"13719:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2205,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:7"},"returnParameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2263,"src":"13759:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2208,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:7"},"scope":2414,"src":"13669:808:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2288,"nodeType":"Block","src":"14793:167:7","statements":[{"assignments":[2276],"declarations":[{"constant":false,"id":2276,"mutability":"mutable","name":"slot","nameLocation":"14811:4:7","nodeType":"VariableDeclaration","scope":2288,"src":"14803:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2277,"nodeType":"VariableDeclarationStatement","src":"14803:12:7"},{"AST":{"nodeType":"YulBlock","src":"14850:40:7","statements":[{"nodeType":"YulAssignment","src":"14864:16:7","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"14872:8:7"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"14864:4:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2267,"isOffset":false,"isSlot":true,"src":"14872:8:7","suffix":"slot","valueSize":1},{"declaration":2276,"isOffset":false,"isSlot":false,"src":"14864:4:7","valueSize":1}],"flags":["memory-safe"],"id":2278,"nodeType":"InlineAssembly","src":"14825:65:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2283,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"14932:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2279,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"14906:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:7","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":2573,"src":"14906:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:7","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":2563,"src":"14906:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:7","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2693,"src":"14906:45:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2664_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2664_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":2274,"id":2287,"nodeType":"Return","src":"14899:54:7"}]},"documentation":{"id":2264,"nodeType":"StructuredDocumentation","src":"14483:191:7","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2289,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:7","nodeType":"FunctionDefinition","parameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"arr","nameLocation":"14719:3:7","nodeType":"VariableDeclaration","scope":2289,"src":"14701:21:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2265,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2266,"nodeType":"ArrayTypeName","src":"14701:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2269,"mutability":"mutable","name":"pos","nameLocation":"14732:3:7","nodeType":"VariableDeclaration","scope":2289,"src":"14724:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2268,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:7"},"returnParameters":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2289,"src":"14760:31:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2664_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2272,"nodeType":"UserDefinedTypeName","pathNode":{"id":2271,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:7","14772:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":2664,"src":"14760:23:7"},"referencedDeclaration":2664,"src":"14760:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2664_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:7"},"scope":2414,"src":"14679:281:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2314,"nodeType":"Block","src":"15276:167:7","statements":[{"assignments":[2302],"declarations":[{"constant":false,"id":2302,"mutability":"mutable","name":"slot","nameLocation":"15294:4:7","nodeType":"VariableDeclaration","scope":2314,"src":"15286:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2303,"nodeType":"VariableDeclarationStatement","src":"15286:12:7"},{"AST":{"nodeType":"YulBlock","src":"15333:40:7","statements":[{"nodeType":"YulAssignment","src":"15347:16:7","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15355:8:7"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15347:4:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2293,"isOffset":false,"isSlot":true,"src":"15355:8:7","suffix":"slot","valueSize":1},{"declaration":2302,"isOffset":false,"isSlot":false,"src":"15347:4:7","valueSize":1}],"flags":["memory-safe"],"id":2304,"nodeType":"InlineAssembly","src":"15308:65:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2309,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"15415:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2305,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"15389:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:7","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":2573,"src":"15389:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:7","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":2563,"src":"15389:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:7","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":2715,"src":"15389:45:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$2670_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2670_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":2300,"id":2313,"nodeType":"Return","src":"15382:54:7"}]},"documentation":{"id":2290,"nodeType":"StructuredDocumentation","src":"14966:191:7","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2315,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:7","nodeType":"FunctionDefinition","parameters":{"id":2296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2293,"mutability":"mutable","name":"arr","nameLocation":"15202:3:7","nodeType":"VariableDeclaration","scope":2315,"src":"15184:21:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2292,"nodeType":"ArrayTypeName","src":"15184:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2295,"mutability":"mutable","name":"pos","nameLocation":"15215:3:7","nodeType":"VariableDeclaration","scope":2315,"src":"15207:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2294,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:7"},"returnParameters":{"id":2300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2315,"src":"15243:31:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2670_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2298,"nodeType":"UserDefinedTypeName","pathNode":{"id":2297,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:7","15255:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":2670,"src":"15243:23:7"},"referencedDeclaration":2670,"src":"15243:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2670_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:7"},"scope":2414,"src":"15162:281:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2340,"nodeType":"Block","src":"15759:167:7","statements":[{"assignments":[2328],"declarations":[{"constant":false,"id":2328,"mutability":"mutable","name":"slot","nameLocation":"15777:4:7","nodeType":"VariableDeclaration","scope":2340,"src":"15769:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2329,"nodeType":"VariableDeclarationStatement","src":"15769:12:7"},{"AST":{"nodeType":"YulBlock","src":"15816:40:7","statements":[{"nodeType":"YulAssignment","src":"15830:16:7","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15838:8:7"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15830:4:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2319,"isOffset":false,"isSlot":true,"src":"15838:8:7","suffix":"slot","valueSize":1},{"declaration":2328,"isOffset":false,"isSlot":false,"src":"15830:4:7","valueSize":1}],"flags":["memory-safe"],"id":2330,"nodeType":"InlineAssembly","src":"15791:65:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2335,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"15898:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2331,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"15872:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:7","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":2573,"src":"15872:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:7","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":2563,"src":"15872:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:7","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":2726,"src":"15872:45:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$2673_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2673_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":2326,"id":2339,"nodeType":"Return","src":"15865:54:7"}]},"documentation":{"id":2316,"nodeType":"StructuredDocumentation","src":"15449:191:7","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2341,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:7","nodeType":"FunctionDefinition","parameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2319,"mutability":"mutable","name":"arr","nameLocation":"15685:3:7","nodeType":"VariableDeclaration","scope":2341,"src":"15667:21:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2317,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2318,"nodeType":"ArrayTypeName","src":"15667:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2321,"mutability":"mutable","name":"pos","nameLocation":"15698:3:7","nodeType":"VariableDeclaration","scope":2341,"src":"15690:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:7"},"returnParameters":{"id":2326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2341,"src":"15726:31:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2673_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2324,"nodeType":"UserDefinedTypeName","pathNode":{"id":2323,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:7","15738:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":2673,"src":"15726:23:7"},"referencedDeclaration":2673,"src":"15726:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2673_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:7"},"scope":2414,"src":"15645:281:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2353,"nodeType":"Block","src":"16227:98:7","statements":[{"AST":{"nodeType":"YulBlock","src":"16246:73:7","statements":[{"nodeType":"YulAssignment","src":"16260:49:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"16281:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"16286:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16277:3:7"},"nodeType":"YulFunctionCall","src":"16277:14:7"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16297:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"16302:4:7","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16293:3:7"},"nodeType":"YulFunctionCall","src":"16293:14:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16273:3:7"},"nodeType":"YulFunctionCall","src":"16273:35:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16267:5:7"},"nodeType":"YulFunctionCall","src":"16267:42:7"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"16260:3:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2345,"isOffset":false,"isSlot":false,"src":"16281:3:7","valueSize":1},{"declaration":2347,"isOffset":false,"isSlot":false,"src":"16297:3:7","valueSize":1},{"declaration":2350,"isOffset":false,"isSlot":false,"src":"16260:3:7","valueSize":1}],"id":2352,"nodeType":"InlineAssembly","src":"16237:82:7"}]},"documentation":{"id":2342,"nodeType":"StructuredDocumentation","src":"15932:191:7","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2354,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16137:18:7","nodeType":"FunctionDefinition","parameters":{"id":2348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2345,"mutability":"mutable","name":"arr","nameLocation":"16173:3:7","nodeType":"VariableDeclaration","scope":2354,"src":"16156:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2343,"name":"address","nodeType":"ElementaryTypeName","src":"16156:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2344,"nodeType":"ArrayTypeName","src":"16156:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2347,"mutability":"mutable","name":"pos","nameLocation":"16186:3:7","nodeType":"VariableDeclaration","scope":2354,"src":"16178:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"16178:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16155:35:7"},"returnParameters":{"id":2351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2350,"mutability":"mutable","name":"res","nameLocation":"16222:3:7","nodeType":"VariableDeclaration","scope":2354,"src":"16214:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2349,"name":"address","nodeType":"ElementaryTypeName","src":"16214:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16213:13:7"},"scope":2414,"src":"16128:197:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2366,"nodeType":"Block","src":"16626:98:7","statements":[{"AST":{"nodeType":"YulBlock","src":"16645:73:7","statements":[{"nodeType":"YulAssignment","src":"16659:49:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"16680:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"16685:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16676:3:7"},"nodeType":"YulFunctionCall","src":"16676:14:7"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16696:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"16701:4:7","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16692:3:7"},"nodeType":"YulFunctionCall","src":"16692:14:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16672:3:7"},"nodeType":"YulFunctionCall","src":"16672:35:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16666:5:7"},"nodeType":"YulFunctionCall","src":"16666:42:7"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"16659:3:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2358,"isOffset":false,"isSlot":false,"src":"16680:3:7","valueSize":1},{"declaration":2360,"isOffset":false,"isSlot":false,"src":"16696:3:7","valueSize":1},{"declaration":2363,"isOffset":false,"isSlot":false,"src":"16659:3:7","valueSize":1}],"id":2365,"nodeType":"InlineAssembly","src":"16636:82:7"}]},"documentation":{"id":2355,"nodeType":"StructuredDocumentation","src":"16331:191:7","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2367,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16536:18:7","nodeType":"FunctionDefinition","parameters":{"id":2361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2358,"mutability":"mutable","name":"arr","nameLocation":"16572:3:7","nodeType":"VariableDeclaration","scope":2367,"src":"16555:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16555:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2357,"nodeType":"ArrayTypeName","src":"16555:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2360,"mutability":"mutable","name":"pos","nameLocation":"16585:3:7","nodeType":"VariableDeclaration","scope":2367,"src":"16577:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2359,"name":"uint256","nodeType":"ElementaryTypeName","src":"16577:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16554:35:7"},"returnParameters":{"id":2364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2363,"mutability":"mutable","name":"res","nameLocation":"16621:3:7","nodeType":"VariableDeclaration","scope":2367,"src":"16613:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2362,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16613:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16612:13:7"},"scope":2414,"src":"16527:197:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2379,"nodeType":"Block","src":"17025:98:7","statements":[{"AST":{"nodeType":"YulBlock","src":"17044:73:7","statements":[{"nodeType":"YulAssignment","src":"17058:49:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"17079:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"17084:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17075:3:7"},"nodeType":"YulFunctionCall","src":"17075:14:7"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17095:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"17100:4:7","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17091:3:7"},"nodeType":"YulFunctionCall","src":"17091:14:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17071:3:7"},"nodeType":"YulFunctionCall","src":"17071:35:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17065:5:7"},"nodeType":"YulFunctionCall","src":"17065:42:7"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"17058:3:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2371,"isOffset":false,"isSlot":false,"src":"17079:3:7","valueSize":1},{"declaration":2373,"isOffset":false,"isSlot":false,"src":"17095:3:7","valueSize":1},{"declaration":2376,"isOffset":false,"isSlot":false,"src":"17058:3:7","valueSize":1}],"id":2378,"nodeType":"InlineAssembly","src":"17035:82:7"}]},"documentation":{"id":2368,"nodeType":"StructuredDocumentation","src":"16730:191:7","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2380,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16935:18:7","nodeType":"FunctionDefinition","parameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"arr","nameLocation":"16971:3:7","nodeType":"VariableDeclaration","scope":2380,"src":"16954:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2369,"name":"uint256","nodeType":"ElementaryTypeName","src":"16954:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2370,"nodeType":"ArrayTypeName","src":"16954:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2373,"mutability":"mutable","name":"pos","nameLocation":"16984:3:7","nodeType":"VariableDeclaration","scope":2380,"src":"16976:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2372,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16953:35:7"},"returnParameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"res","nameLocation":"17020:3:7","nodeType":"VariableDeclaration","scope":2380,"src":"17012:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2375,"name":"uint256","nodeType":"ElementaryTypeName","src":"17012:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17011:13:7"},"scope":2414,"src":"16926:197:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2390,"nodeType":"Block","src":"17439:88:7","statements":[{"AST":{"nodeType":"YulBlock","src":"17474:47:7","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"17495:10:7"},{"name":"len","nodeType":"YulIdentifier","src":"17507:3:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17488:6:7"},"nodeType":"YulFunctionCall","src":"17488:23:7"},"nodeType":"YulExpressionStatement","src":"17488:23:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":2384,"isOffset":false,"isSlot":true,"src":"17495:10:7","suffix":"slot","valueSize":1},{"declaration":2386,"isOffset":false,"isSlot":false,"src":"17507:3:7","valueSize":1}],"flags":["memory-safe"],"id":2389,"nodeType":"InlineAssembly","src":"17449:72:7"}]},"documentation":{"id":2381,"nodeType":"StructuredDocumentation","src":"17129:233:7","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2391,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17376:15:7","nodeType":"FunctionDefinition","parameters":{"id":2387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"array","nameLocation":"17410:5:7","nodeType":"VariableDeclaration","scope":2391,"src":"17392:23:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2382,"name":"address","nodeType":"ElementaryTypeName","src":"17392:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2383,"nodeType":"ArrayTypeName","src":"17392:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2386,"mutability":"mutable","name":"len","nameLocation":"17425:3:7","nodeType":"VariableDeclaration","scope":2391,"src":"17417:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2385,"name":"uint256","nodeType":"ElementaryTypeName","src":"17417:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17391:38:7"},"returnParameters":{"id":2388,"nodeType":"ParameterList","parameters":[],"src":"17439:0:7"},"scope":2414,"src":"17367:160:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2401,"nodeType":"Block","src":"17843:88:7","statements":[{"AST":{"nodeType":"YulBlock","src":"17878:47:7","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"17899:10:7"},{"name":"len","nodeType":"YulIdentifier","src":"17911:3:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17892:6:7"},"nodeType":"YulFunctionCall","src":"17892:23:7"},"nodeType":"YulExpressionStatement","src":"17892:23:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":2395,"isOffset":false,"isSlot":true,"src":"17899:10:7","suffix":"slot","valueSize":1},{"declaration":2397,"isOffset":false,"isSlot":false,"src":"17911:3:7","valueSize":1}],"flags":["memory-safe"],"id":2400,"nodeType":"InlineAssembly","src":"17853:72:7"}]},"documentation":{"id":2392,"nodeType":"StructuredDocumentation","src":"17533:233:7","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2402,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17780:15:7","nodeType":"FunctionDefinition","parameters":{"id":2398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2395,"mutability":"mutable","name":"array","nameLocation":"17814:5:7","nodeType":"VariableDeclaration","scope":2402,"src":"17796:23:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17796:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2394,"nodeType":"ArrayTypeName","src":"17796:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2397,"mutability":"mutable","name":"len","nameLocation":"17829:3:7","nodeType":"VariableDeclaration","scope":2402,"src":"17821:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"17821:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17795:38:7"},"returnParameters":{"id":2399,"nodeType":"ParameterList","parameters":[],"src":"17843:0:7"},"scope":2414,"src":"17771:160:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2412,"nodeType":"Block","src":"18247:88:7","statements":[{"AST":{"nodeType":"YulBlock","src":"18282:47:7","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"18303:10:7"},{"name":"len","nodeType":"YulIdentifier","src":"18315:3:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18296:6:7"},"nodeType":"YulFunctionCall","src":"18296:23:7"},"nodeType":"YulExpressionStatement","src":"18296:23:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":2406,"isOffset":false,"isSlot":true,"src":"18303:10:7","suffix":"slot","valueSize":1},{"declaration":2408,"isOffset":false,"isSlot":false,"src":"18315:3:7","valueSize":1}],"flags":["memory-safe"],"id":2411,"nodeType":"InlineAssembly","src":"18257:72:7"}]},"documentation":{"id":2403,"nodeType":"StructuredDocumentation","src":"17937:233:7","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2413,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"18184:15:7","nodeType":"FunctionDefinition","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"array","nameLocation":"18218:5:7","nodeType":"VariableDeclaration","scope":2413,"src":"18200:23:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2404,"name":"uint256","nodeType":"ElementaryTypeName","src":"18200:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2405,"nodeType":"ArrayTypeName","src":"18200:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2408,"mutability":"mutable","name":"len","nameLocation":"18233:3:7","nodeType":"VariableDeclaration","scope":2413,"src":"18225:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2407,"name":"uint256","nodeType":"ElementaryTypeName","src":"18225:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18199:38:7"},"returnParameters":{"id":2410,"nodeType":"ParameterList","parameters":[],"src":"18247:0:7"},"scope":2414,"src":"18175:160:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2415,"src":"459:17878:7","usedErrors":[],"usedEvents":[]}],"src":"183:18155:7"},"id":7},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[2446]},"id":2447,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2416,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":2417,"nodeType":"StructuredDocumentation","src":"131:92:8","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":2446,"linearizedBaseContracts":[2446],"name":"Comparators","nameLocation":"232:11:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":2430,"nodeType":"Block","src":"313:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2426,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"330:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2427,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"334:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2425,"id":2429,"nodeType":"Return","src":"323:12:8"}]},"id":2431,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:8","nodeType":"FunctionDefinition","parameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2419,"mutability":"mutable","name":"a","nameLocation":"270:1:8","nodeType":"VariableDeclaration","scope":2431,"src":"262:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2418,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2421,"mutability":"mutable","name":"b","nameLocation":"281:1:8","nodeType":"VariableDeclaration","scope":2431,"src":"273:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:8"},"returnParameters":{"id":2425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2431,"src":"307:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2423,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:8"},"scope":2446,"src":"250:92:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2444,"nodeType":"Block","src":"411:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2440,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"428:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2441,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"432:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2439,"id":2443,"nodeType":"Return","src":"421:12:8"}]},"id":2445,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:8","nodeType":"FunctionDefinition","parameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"a","nameLocation":"368:1:8","nodeType":"VariableDeclaration","scope":2445,"src":"360:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2435,"mutability":"mutable","name":"b","nameLocation":"379:1:8","nodeType":"VariableDeclaration","scope":2445,"src":"371:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:8"},"returnParameters":{"id":2439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2445,"src":"405:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2437,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:8"},"scope":2446,"src":"348:92:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2447,"src":"224:218:8","usedErrors":[],"usedEvents":[]}],"src":"105:338:8"},"id":8},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2476]},"id":2477,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2448,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2449,"nodeType":"StructuredDocumentation","src":"127:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2476,"linearizedBaseContracts":[2476],"name":"Context","nameLocation":"642:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":2457,"nodeType":"Block","src":"718:34:9","statements":[{"expression":{"expression":{"id":2454,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:9","memberName":"sender","nodeType":"MemberAccess","src":"735:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2453,"id":2456,"nodeType":"Return","src":"728:17:9"}]},"id":2458,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:9","nodeType":"FunctionDefinition","parameters":{"id":2450,"nodeType":"ParameterList","parameters":[],"src":"675:2:9"},"returnParameters":{"id":2453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2458,"src":"709:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2451,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:9"},"scope":2476,"src":"656:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2466,"nodeType":"Block","src":"825:32:9","statements":[{"expression":{"expression":{"id":2463,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:9","memberName":"data","nodeType":"MemberAccess","src":"842:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2462,"id":2465,"nodeType":"Return","src":"835:15:9"}]},"id":2467,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:9","nodeType":"FunctionDefinition","parameters":{"id":2459,"nodeType":"ParameterList","parameters":[],"src":"775:2:9"},"returnParameters":{"id":2462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2467,"src":"809:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2460,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:9"},"scope":2476,"src":"758:99:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2474,"nodeType":"Block","src":"935:25:9","statements":[{"expression":{"hexValue":"30","id":2472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2471,"id":2473,"nodeType":"Return","src":"945:8:9"}]},"id":2475,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:9","nodeType":"FunctionDefinition","parameters":{"id":2468,"nodeType":"ParameterList","parameters":[],"src":"892:2:9"},"returnParameters":{"id":2471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2475,"src":"926:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:9"},"scope":2476,"src":"863:97:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2477,"src":"624:338:9","usedErrors":[],"usedEvents":[]}],"src":"101:862:9"},"id":9},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2528]},"id":2529,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2478,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2479,"nodeType":"StructuredDocumentation","src":"125:489:10","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2528,"linearizedBaseContracts":[2528],"name":"Panic","nameLocation":"665:5:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2480,"nodeType":"StructuredDocumentation","src":"677:36:10","text":"@dev generic / unspecified error"},"id":2483,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:10","nodeType":"VariableDeclaration","scope":2528,"src":"718:40:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2481,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2484,"nodeType":"StructuredDocumentation","src":"764:37:10","text":"@dev used by the assert() builtin"},"id":2487,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:10","nodeType":"VariableDeclaration","scope":2528,"src":"806:39:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2485,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2488,"nodeType":"StructuredDocumentation","src":"851:41:10","text":"@dev arithmetic underflow or overflow"},"id":2491,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:10","nodeType":"VariableDeclaration","scope":2528,"src":"897:47:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2489,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:10","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2492,"nodeType":"StructuredDocumentation","src":"950:35:10","text":"@dev division or modulo by zero"},"id":2495,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:10","nodeType":"VariableDeclaration","scope":2528,"src":"990:49:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2493,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2496,"nodeType":"StructuredDocumentation","src":"1045:30:10","text":"@dev enum conversion error"},"id":2499,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:10","nodeType":"VariableDeclaration","scope":2528,"src":"1080:54:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:10","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2500,"nodeType":"StructuredDocumentation","src":"1140:36:10","text":"@dev invalid encoding in storage"},"id":2503,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:10","nodeType":"VariableDeclaration","scope":2528,"src":"1181:55:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:10","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2504,"nodeType":"StructuredDocumentation","src":"1242:24:10","text":"@dev empty array pop"},"id":2507,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:10","nodeType":"VariableDeclaration","scope":2528,"src":"1271:48:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2505,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:10","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2508,"nodeType":"StructuredDocumentation","src":"1325:35:10","text":"@dev array out of bounds access"},"id":2511,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:10","nodeType":"VariableDeclaration","scope":2528,"src":"1365:52:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:10","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2512,"nodeType":"StructuredDocumentation","src":"1423:65:10","text":"@dev resource error (too large allocation or too large array)"},"id":2515,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:10","nodeType":"VariableDeclaration","scope":2528,"src":"1493:47:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:10","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2516,"nodeType":"StructuredDocumentation","src":"1546:42:10","text":"@dev calling invalid internal function"},"id":2519,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:10","nodeType":"VariableDeclaration","scope":2528,"src":"1593:58:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2517,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:10","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2526,"nodeType":"Block","src":"1819:151:10","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:10","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:10"},"nodeType":"YulFunctionCall","src":"1868:24:10"},"nodeType":"YulExpressionStatement","src":"1868:24:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:10","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:10"},"nodeType":"YulFunctionCall","src":"1905:18:10"},"nodeType":"YulExpressionStatement","src":"1905:18:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:10","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:10"},"nodeType":"YulFunctionCall","src":"1936:18:10"},"nodeType":"YulExpressionStatement","src":"1936:18:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":2522,"isOffset":false,"isSlot":false,"src":"1918:4:10","valueSize":1}],"flags":["memory-safe"],"id":2525,"nodeType":"InlineAssembly","src":"1829:135:10"}]},"documentation":{"id":2520,"nodeType":"StructuredDocumentation","src":"1658:113:10","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2527,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:10","nodeType":"FunctionDefinition","parameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"code","nameLocation":"1799:4:10","nodeType":"VariableDeclaration","scope":2527,"src":"1791:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:10"},"returnParameters":{"id":2524,"nodeType":"ParameterList","parameters":[],"src":"1819:0:10"},"scope":2528,"src":"1776:194:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2529,"src":"657:1315:10","usedErrors":[],"usedEvents":[]}],"src":"99:1874:10"},"id":10},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[2658]},"id":2659,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2530,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":2531,"nodeType":"StructuredDocumentation","src":"225:1373:11","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":2658,"linearizedBaseContracts":[2658],"name":"SlotDerivation","nameLocation":"1607:14:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2540,"nodeType":"Block","src":"1790:194:11","statements":[{"AST":{"nodeType":"YulBlock","src":"1825:153:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1846:4:11","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1870:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1881:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1866:3:11"},"nodeType":"YulFunctionCall","src":"1866:20:11"},{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1894:9:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1888:5:11"},"nodeType":"YulFunctionCall","src":"1888:16:11"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1856:9:11"},"nodeType":"YulFunctionCall","src":"1856:49:11"},{"kind":"number","nodeType":"YulLiteral","src":"1907:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1852:3:11"},"nodeType":"YulFunctionCall","src":"1852:57:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1839:6:11"},"nodeType":"YulFunctionCall","src":"1839:71:11"},"nodeType":"YulExpressionStatement","src":"1839:71:11"},{"nodeType":"YulAssignment","src":"1923:45:11","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1945:4:11","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1951:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1935:9:11"},"nodeType":"YulFunctionCall","src":"1935:21:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1962:4:11","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1958:3:11"},"nodeType":"YulFunctionCall","src":"1958:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1931:3:11"},"nodeType":"YulFunctionCall","src":"1931:37:11"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2534,"isOffset":false,"isSlot":false,"src":"1870:9:11","valueSize":1},{"declaration":2534,"isOffset":false,"isSlot":false,"src":"1894:9:11","valueSize":1},{"declaration":2537,"isOffset":false,"isSlot":false,"src":"1923:4:11","valueSize":1}],"flags":["memory-safe"],"id":2539,"nodeType":"InlineAssembly","src":"1800:178:11"}]},"documentation":{"id":2532,"nodeType":"StructuredDocumentation","src":"1628:74:11","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":2541,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1716:11:11","nodeType":"FunctionDefinition","parameters":{"id":2535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2534,"mutability":"mutable","name":"namespace","nameLocation":"1742:9:11","nodeType":"VariableDeclaration","scope":2541,"src":"1728:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2533,"name":"string","nodeType":"ElementaryTypeName","src":"1728:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1727:25:11"},"returnParameters":{"id":2538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2537,"mutability":"mutable","name":"slot","nameLocation":"1784:4:11","nodeType":"VariableDeclaration","scope":2541,"src":"1776:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2536,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1776:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1775:14:11"},"scope":2658,"src":"1707:277:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2562,"nodeType":"Block","src":"2176:86:11","statements":[{"id":2561,"nodeType":"UncheckedBlock","src":"2186:70:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2555,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"2233:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2225:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2553,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:11","typeDescriptions":{}}},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2557,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"2241:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2225:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2217:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2551,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2217:7:11","typeDescriptions":{}}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2550,"id":2560,"nodeType":"Return","src":"2210:35:11"}]}]},"documentation":{"id":2542,"nodeType":"StructuredDocumentation","src":"1990:99:11","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":2563,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2103:6:11","nodeType":"FunctionDefinition","parameters":{"id":2547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"slot","nameLocation":"2118:4:11","nodeType":"VariableDeclaration","scope":2563,"src":"2110:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2546,"mutability":"mutable","name":"pos","nameLocation":"2132:3:11","nodeType":"VariableDeclaration","scope":2563,"src":"2124:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"2124:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2109:27:11"},"returnParameters":{"id":2550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2549,"mutability":"mutable","name":"result","nameLocation":"2168:6:11","nodeType":"VariableDeclaration","scope":2563,"src":"2160:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2160:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2159:16:11"},"scope":2658,"src":"2094:168:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2572,"nodeType":"Block","src":"2465:127:11","statements":[{"AST":{"nodeType":"YulBlock","src":"2500:86:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2521:4:11","type":"","value":"0x00"},{"name":"slot","nodeType":"YulIdentifier","src":"2527:4:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2514:6:11"},"nodeType":"YulFunctionCall","src":"2514:18:11"},"nodeType":"YulExpressionStatement","src":"2514:18:11"},{"nodeType":"YulAssignment","src":"2545:31:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2565:4:11","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2571:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2555:9:11"},"nodeType":"YulFunctionCall","src":"2555:21:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2545:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2569,"isOffset":false,"isSlot":false,"src":"2545:6:11","valueSize":1},{"declaration":2566,"isOffset":false,"isSlot":false,"src":"2527:4:11","valueSize":1}],"flags":["memory-safe"],"id":2571,"nodeType":"InlineAssembly","src":"2475:111:11"}]},"documentation":{"id":2564,"nodeType":"StructuredDocumentation","src":"2268:118:11","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":2573,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2400:11:11","nodeType":"FunctionDefinition","parameters":{"id":2567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2566,"mutability":"mutable","name":"slot","nameLocation":"2420:4:11","nodeType":"VariableDeclaration","scope":2573,"src":"2412:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2565,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2412:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2411:14:11"},"returnParameters":{"id":2570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"result","nameLocation":"2457:6:11","nodeType":"VariableDeclaration","scope":2573,"src":"2449:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:16:11"},"scope":2658,"src":"2391:201:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2584,"nodeType":"Block","src":"2770:179:11","statements":[{"AST":{"nodeType":"YulBlock","src":"2805:138:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2826:4:11","type":"","value":"0x00"},{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"2836:3:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2845:2:11","type":"","value":"96"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2853:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2849:3:11"},"nodeType":"YulFunctionCall","src":"2849:6:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2841:3:11"},"nodeType":"YulFunctionCall","src":"2841:15:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2832:3:11"},"nodeType":"YulFunctionCall","src":"2832:25:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2819:6:11"},"nodeType":"YulFunctionCall","src":"2819:39:11"},"nodeType":"YulExpressionStatement","src":"2819:39:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2878:4:11","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"2884:4:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2871:6:11"},"nodeType":"YulFunctionCall","src":"2871:18:11"},"nodeType":"YulExpressionStatement","src":"2871:18:11"},{"nodeType":"YulAssignment","src":"2902:31:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2922:4:11","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2928:4:11","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2912:9:11"},"nodeType":"YulFunctionCall","src":"2912:21:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2902:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2578,"isOffset":false,"isSlot":false,"src":"2836:3:11","valueSize":1},{"declaration":2581,"isOffset":false,"isSlot":false,"src":"2902:6:11","valueSize":1},{"declaration":2576,"isOffset":false,"isSlot":false,"src":"2884:4:11","valueSize":1}],"flags":["memory-safe"],"id":2583,"nodeType":"InlineAssembly","src":"2780:163:11"}]},"documentation":{"id":2574,"nodeType":"StructuredDocumentation","src":"2598:78:11","text":" @dev Derive the location of a mapping element from the key."},"id":2585,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2690:13:11","nodeType":"FunctionDefinition","parameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2576,"mutability":"mutable","name":"slot","nameLocation":"2712:4:11","nodeType":"VariableDeclaration","scope":2585,"src":"2704:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2575,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2704:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2578,"mutability":"mutable","name":"key","nameLocation":"2726:3:11","nodeType":"VariableDeclaration","scope":2585,"src":"2718:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2577,"name":"address","nodeType":"ElementaryTypeName","src":"2718:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2703:27:11"},"returnParameters":{"id":2582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2581,"mutability":"mutable","name":"result","nameLocation":"2762:6:11","nodeType":"VariableDeclaration","scope":2585,"src":"2754:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2754:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2753:16:11"},"scope":2658,"src":"2681:268:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2596,"nodeType":"Block","src":"3124:173:11","statements":[{"AST":{"nodeType":"YulBlock","src":"3159:132:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3180:4:11","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"3200:3:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3193:6:11"},"nodeType":"YulFunctionCall","src":"3193:11:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3186:6:11"},"nodeType":"YulFunctionCall","src":"3186:19:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3173:6:11"},"nodeType":"YulFunctionCall","src":"3173:33:11"},"nodeType":"YulExpressionStatement","src":"3173:33:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3226:4:11","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3232:4:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3219:6:11"},"nodeType":"YulFunctionCall","src":"3219:18:11"},"nodeType":"YulExpressionStatement","src":"3219:18:11"},{"nodeType":"YulAssignment","src":"3250:31:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3270:4:11","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3276:4:11","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3260:9:11"},"nodeType":"YulFunctionCall","src":"3260:21:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3250:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2590,"isOffset":false,"isSlot":false,"src":"3200:3:11","valueSize":1},{"declaration":2593,"isOffset":false,"isSlot":false,"src":"3250:6:11","valueSize":1},{"declaration":2588,"isOffset":false,"isSlot":false,"src":"3232:4:11","valueSize":1}],"flags":["memory-safe"],"id":2595,"nodeType":"InlineAssembly","src":"3134:157:11"}]},"documentation":{"id":2586,"nodeType":"StructuredDocumentation","src":"2955:78:11","text":" @dev Derive the location of a mapping element from the key."},"id":2597,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3047:13:11","nodeType":"FunctionDefinition","parameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"slot","nameLocation":"3069:4:11","nodeType":"VariableDeclaration","scope":2597,"src":"3061:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3061:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"key","nameLocation":"3080:3:11","nodeType":"VariableDeclaration","scope":2597,"src":"3075:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2589,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3060:24:11"},"returnParameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"result","nameLocation":"3116:6:11","nodeType":"VariableDeclaration","scope":2597,"src":"3108:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2592,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:16:11"},"scope":2658,"src":"3038:259:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2608,"nodeType":"Block","src":"3475:157:11","statements":[{"AST":{"nodeType":"YulBlock","src":"3510:116:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3531:4:11","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3537:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3524:6:11"},"nodeType":"YulFunctionCall","src":"3524:17:11"},"nodeType":"YulExpressionStatement","src":"3524:17:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3561:4:11","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3567:4:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3554:6:11"},"nodeType":"YulFunctionCall","src":"3554:18:11"},"nodeType":"YulExpressionStatement","src":"3554:18:11"},{"nodeType":"YulAssignment","src":"3585:31:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3605:4:11","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3611:4:11","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3595:9:11"},"nodeType":"YulFunctionCall","src":"3595:21:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3585:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2602,"isOffset":false,"isSlot":false,"src":"3537:3:11","valueSize":1},{"declaration":2605,"isOffset":false,"isSlot":false,"src":"3585:6:11","valueSize":1},{"declaration":2600,"isOffset":false,"isSlot":false,"src":"3567:4:11","valueSize":1}],"flags":["memory-safe"],"id":2607,"nodeType":"InlineAssembly","src":"3485:141:11"}]},"documentation":{"id":2598,"nodeType":"StructuredDocumentation","src":"3303:78:11","text":" @dev Derive the location of a mapping element from the key."},"id":2609,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3395:13:11","nodeType":"FunctionDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"slot","nameLocation":"3417:4:11","nodeType":"VariableDeclaration","scope":2609,"src":"3409:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2599,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3409:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2602,"mutability":"mutable","name":"key","nameLocation":"3431:3:11","nodeType":"VariableDeclaration","scope":2609,"src":"3423:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2601,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3408:27:11"},"returnParameters":{"id":2606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"result","nameLocation":"3467:6:11","nodeType":"VariableDeclaration","scope":2609,"src":"3459:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2604,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3459:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3458:16:11"},"scope":2658,"src":"3386:246:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2620,"nodeType":"Block","src":"3810:157:11","statements":[{"AST":{"nodeType":"YulBlock","src":"3845:116:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3866:4:11","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3872:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3859:6:11"},"nodeType":"YulFunctionCall","src":"3859:17:11"},"nodeType":"YulExpressionStatement","src":"3859:17:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3896:4:11","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3902:4:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3889:6:11"},"nodeType":"YulFunctionCall","src":"3889:18:11"},"nodeType":"YulExpressionStatement","src":"3889:18:11"},{"nodeType":"YulAssignment","src":"3920:31:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3940:4:11","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3946:4:11","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3930:9:11"},"nodeType":"YulFunctionCall","src":"3930:21:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3920:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2614,"isOffset":false,"isSlot":false,"src":"3872:3:11","valueSize":1},{"declaration":2617,"isOffset":false,"isSlot":false,"src":"3920:6:11","valueSize":1},{"declaration":2612,"isOffset":false,"isSlot":false,"src":"3902:4:11","valueSize":1}],"flags":["memory-safe"],"id":2619,"nodeType":"InlineAssembly","src":"3820:141:11"}]},"documentation":{"id":2610,"nodeType":"StructuredDocumentation","src":"3638:78:11","text":" @dev Derive the location of a mapping element from the key."},"id":2621,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3730:13:11","nodeType":"FunctionDefinition","parameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2612,"mutability":"mutable","name":"slot","nameLocation":"3752:4:11","nodeType":"VariableDeclaration","scope":2621,"src":"3744:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3744:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2614,"mutability":"mutable","name":"key","nameLocation":"3766:3:11","nodeType":"VariableDeclaration","scope":2621,"src":"3758:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2613,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:27:11"},"returnParameters":{"id":2618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"result","nameLocation":"3802:6:11","nodeType":"VariableDeclaration","scope":2621,"src":"3794:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:16:11"},"scope":2658,"src":"3721:246:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2632,"nodeType":"Block","src":"4144:157:11","statements":[{"AST":{"nodeType":"YulBlock","src":"4179:116:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4200:4:11","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"4206:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4193:6:11"},"nodeType":"YulFunctionCall","src":"4193:17:11"},"nodeType":"YulExpressionStatement","src":"4193:17:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4230:4:11","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"4236:4:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4223:6:11"},"nodeType":"YulFunctionCall","src":"4223:18:11"},"nodeType":"YulExpressionStatement","src":"4223:18:11"},{"nodeType":"YulAssignment","src":"4254:31:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4274:4:11","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"4280:4:11","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4264:9:11"},"nodeType":"YulFunctionCall","src":"4264:21:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4254:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2626,"isOffset":false,"isSlot":false,"src":"4206:3:11","valueSize":1},{"declaration":2629,"isOffset":false,"isSlot":false,"src":"4254:6:11","valueSize":1},{"declaration":2624,"isOffset":false,"isSlot":false,"src":"4236:4:11","valueSize":1}],"flags":["memory-safe"],"id":2631,"nodeType":"InlineAssembly","src":"4154:141:11"}]},"documentation":{"id":2622,"nodeType":"StructuredDocumentation","src":"3973:78:11","text":" @dev Derive the location of a mapping element from the key."},"id":2633,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4065:13:11","nodeType":"FunctionDefinition","parameters":{"id":2627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2624,"mutability":"mutable","name":"slot","nameLocation":"4087:4:11","nodeType":"VariableDeclaration","scope":2633,"src":"4079:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2623,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4079:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2626,"mutability":"mutable","name":"key","nameLocation":"4100:3:11","nodeType":"VariableDeclaration","scope":2633,"src":"4093:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2625,"name":"int256","nodeType":"ElementaryTypeName","src":"4093:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4078:26:11"},"returnParameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"mutability":"mutable","name":"result","nameLocation":"4136:6:11","nodeType":"VariableDeclaration","scope":2633,"src":"4128:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2628,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4128:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4127:16:11"},"scope":2658,"src":"4056:245:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2644,"nodeType":"Block","src":"4485:326:11","statements":[{"AST":{"nodeType":"YulBlock","src":"4520:285:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4534:24:11","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4554:3:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4548:5:11"},"nodeType":"YulFunctionCall","src":"4548:10:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4538:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4571:27:11","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4588:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4593:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4584:3:11"},"nodeType":"YulFunctionCall","src":"4584:14:11"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"4575:5:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4611:29:11","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4626:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"4633:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4622:3:11"},"nodeType":"YulFunctionCall","src":"4622:18:11"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"4615:3:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4653:23:11","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4672:3:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4666:5:11"},"nodeType":"YulFunctionCall","src":"4666:10:11"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"4657:5:11","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4696:3:11"},{"name":"slot","nodeType":"YulIdentifier","src":"4701:4:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4689:6:11"},"nodeType":"YulFunctionCall","src":"4689:17:11"},"nodeType":"YulExpressionStatement","src":"4689:17:11"},{"nodeType":"YulAssignment","src":"4719:45:11","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4739:5:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4750:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4758:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4746:3:11"},"nodeType":"YulFunctionCall","src":"4746:17:11"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4729:9:11"},"nodeType":"YulFunctionCall","src":"4729:35:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4719:6:11"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4784:3:11"},{"name":"cache","nodeType":"YulIdentifier","src":"4789:5:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4777:6:11"},"nodeType":"YulFunctionCall","src":"4777:18:11"},"nodeType":"YulExpressionStatement","src":"4777:18:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":2638,"isOffset":false,"isSlot":false,"src":"4554:3:11","valueSize":1},{"declaration":2638,"isOffset":false,"isSlot":false,"src":"4588:3:11","valueSize":1},{"declaration":2641,"isOffset":false,"isSlot":false,"src":"4719:6:11","valueSize":1},{"declaration":2636,"isOffset":false,"isSlot":false,"src":"4701:4:11","valueSize":1}],"flags":["memory-safe"],"id":2643,"nodeType":"InlineAssembly","src":"4495:310:11"}]},"documentation":{"id":2634,"nodeType":"StructuredDocumentation","src":"4307:78:11","text":" @dev Derive the location of a mapping element from the key."},"id":2645,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4399:13:11","nodeType":"FunctionDefinition","parameters":{"id":2639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2636,"mutability":"mutable","name":"slot","nameLocation":"4421:4:11","nodeType":"VariableDeclaration","scope":2645,"src":"4413:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2635,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4413:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2638,"mutability":"mutable","name":"key","nameLocation":"4441:3:11","nodeType":"VariableDeclaration","scope":2645,"src":"4427:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2637,"name":"string","nodeType":"ElementaryTypeName","src":"4427:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4412:33:11"},"returnParameters":{"id":2642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2641,"mutability":"mutable","name":"result","nameLocation":"4477:6:11","nodeType":"VariableDeclaration","scope":2645,"src":"4469:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2640,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4468:16:11"},"scope":2658,"src":"4390:421:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2656,"nodeType":"Block","src":"4994:326:11","statements":[{"AST":{"nodeType":"YulBlock","src":"5029:285:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5043:24:11","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5063:3:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5057:5:11"},"nodeType":"YulFunctionCall","src":"5057:10:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5047:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5080:27:11","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5097:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"5102:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5093:3:11"},"nodeType":"YulFunctionCall","src":"5093:14:11"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"5084:5:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5120:29:11","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5135:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"5142:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5131:3:11"},"nodeType":"YulFunctionCall","src":"5131:18:11"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"5124:3:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5162:23:11","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5181:3:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5175:5:11"},"nodeType":"YulFunctionCall","src":"5175:10:11"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"5166:5:11","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5205:3:11"},{"name":"slot","nodeType":"YulIdentifier","src":"5210:4:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5198:6:11"},"nodeType":"YulFunctionCall","src":"5198:17:11"},"nodeType":"YulExpressionStatement","src":"5198:17:11"},{"nodeType":"YulAssignment","src":"5228:45:11","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5248:5:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5259:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"5267:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5255:3:11"},"nodeType":"YulFunctionCall","src":"5255:17:11"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5238:9:11"},"nodeType":"YulFunctionCall","src":"5238:35:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5228:6:11"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5293:3:11"},{"name":"cache","nodeType":"YulIdentifier","src":"5298:5:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5286:6:11"},"nodeType":"YulFunctionCall","src":"5286:18:11"},"nodeType":"YulExpressionStatement","src":"5286:18:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":2650,"isOffset":false,"isSlot":false,"src":"5063:3:11","valueSize":1},{"declaration":2650,"isOffset":false,"isSlot":false,"src":"5097:3:11","valueSize":1},{"declaration":2653,"isOffset":false,"isSlot":false,"src":"5228:6:11","valueSize":1},{"declaration":2648,"isOffset":false,"isSlot":false,"src":"5210:4:11","valueSize":1}],"flags":["memory-safe"],"id":2655,"nodeType":"InlineAssembly","src":"5004:310:11"}]},"documentation":{"id":2646,"nodeType":"StructuredDocumentation","src":"4817:78:11","text":" @dev Derive the location of a mapping element from the key."},"id":2657,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4909:13:11","nodeType":"FunctionDefinition","parameters":{"id":2651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"slot","nameLocation":"4931:4:11","nodeType":"VariableDeclaration","scope":2657,"src":"4923:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2647,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4923:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2650,"mutability":"mutable","name":"key","nameLocation":"4950:3:11","nodeType":"VariableDeclaration","scope":2657,"src":"4937:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2649,"name":"bytes","nodeType":"ElementaryTypeName","src":"4937:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4922:32:11"},"returnParameters":{"id":2654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2653,"mutability":"mutable","name":"result","nameLocation":"4986:6:11","nodeType":"VariableDeclaration","scope":2657,"src":"4978:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4978:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4977:16:11"},"scope":2658,"src":"4900:420:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2659,"src":"1599:3723:11","usedErrors":[],"usedEvents":[]}],"src":"199:5124:11"},"id":11},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2782]},"id":2783,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2660,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2661,"nodeType":"StructuredDocumentation","src":"219:1187:12","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":2782,"linearizedBaseContracts":[2782],"name":"StorageSlot","nameLocation":"1415:11:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2664,"members":[{"constant":false,"id":2663,"mutability":"mutable","name":"value","nameLocation":"1470:5:12","nodeType":"VariableDeclaration","scope":2664,"src":"1462:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2662,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:12","nodeType":"StructDefinition","scope":2782,"src":"1433:49:12","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2667,"members":[{"constant":false,"id":2666,"mutability":"mutable","name":"value","nameLocation":"1522:5:12","nodeType":"VariableDeclaration","scope":2667,"src":"1517:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2665,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:12","nodeType":"StructDefinition","scope":2782,"src":"1488:46:12","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2670,"members":[{"constant":false,"id":2669,"mutability":"mutable","name":"value","nameLocation":"1577:5:12","nodeType":"VariableDeclaration","scope":2670,"src":"1569:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:12","nodeType":"StructDefinition","scope":2782,"src":"1540:49:12","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2673,"members":[{"constant":false,"id":2672,"mutability":"mutable","name":"value","nameLocation":"1632:5:12","nodeType":"VariableDeclaration","scope":2673,"src":"1624:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:12","nodeType":"StructDefinition","scope":2782,"src":"1595:49:12","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":2676,"members":[{"constant":false,"id":2675,"mutability":"mutable","name":"value","nameLocation":"1685:5:12","nodeType":"VariableDeclaration","scope":2676,"src":"1678:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2674,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:12","nodeType":"StructDefinition","scope":2782,"src":"1650:47:12","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2679,"members":[{"constant":false,"id":2678,"mutability":"mutable","name":"value","nameLocation":"1738:5:12","nodeType":"VariableDeclaration","scope":2679,"src":"1731:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2677,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:12","nodeType":"StructDefinition","scope":2782,"src":"1703:47:12","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2682,"members":[{"constant":false,"id":2681,"mutability":"mutable","name":"value","nameLocation":"1789:5:12","nodeType":"VariableDeclaration","scope":2682,"src":"1783:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2680,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:12","nodeType":"StructDefinition","scope":2782,"src":"1756:45:12","visibility":"public"},{"body":{"id":2692,"nodeType":"Block","src":"1983:79:12","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:12","statements":[{"nodeType":"YulAssignment","src":"2032:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2689,"isOffset":false,"isSlot":true,"src":"2032:6:12","suffix":"slot","valueSize":1},{"declaration":2685,"isOffset":false,"isSlot":false,"src":"2042:4:12","valueSize":1}],"flags":["memory-safe"],"id":2691,"nodeType":"InlineAssembly","src":"1993:63:12"}]},"documentation":{"id":2683,"nodeType":"StructuredDocumentation","src":"1807:87:12","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2693,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:12","nodeType":"FunctionDefinition","parameters":{"id":2686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2685,"mutability":"mutable","name":"slot","nameLocation":"1931:4:12","nodeType":"VariableDeclaration","scope":2693,"src":"1923:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:12"},"returnParameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"r","nameLocation":"1980:1:12","nodeType":"VariableDeclaration","scope":2693,"src":"1960:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2664_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2688,"nodeType":"UserDefinedTypeName","pathNode":{"id":2687,"name":"AddressSlot","nameLocations":["1960:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":2664,"src":"1960:11:12"},"referencedDeclaration":2664,"src":"1960:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2664_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:12"},"scope":2782,"src":"1899:163:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2703,"nodeType":"Block","src":"2243:79:12","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:12","statements":[{"nodeType":"YulAssignment","src":"2292:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2700,"isOffset":false,"isSlot":true,"src":"2292:6:12","suffix":"slot","valueSize":1},{"declaration":2696,"isOffset":false,"isSlot":false,"src":"2302:4:12","valueSize":1}],"flags":["memory-safe"],"id":2702,"nodeType":"InlineAssembly","src":"2253:63:12"}]},"documentation":{"id":2694,"nodeType":"StructuredDocumentation","src":"2068:86:12","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":2704,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:12","nodeType":"FunctionDefinition","parameters":{"id":2697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2696,"mutability":"mutable","name":"slot","nameLocation":"2191:4:12","nodeType":"VariableDeclaration","scope":2704,"src":"2183:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:12"},"returnParameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"r","nameLocation":"2240:1:12","nodeType":"VariableDeclaration","scope":2704,"src":"2220:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2667_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2699,"nodeType":"UserDefinedTypeName","pathNode":{"id":2698,"name":"BooleanSlot","nameLocations":["2220:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"2220:11:12"},"referencedDeclaration":2667,"src":"2220:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2667_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:12"},"scope":2782,"src":"2159:163:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2714,"nodeType":"Block","src":"2503:79:12","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:12","statements":[{"nodeType":"YulAssignment","src":"2552:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2711,"isOffset":false,"isSlot":true,"src":"2552:6:12","suffix":"slot","valueSize":1},{"declaration":2707,"isOffset":false,"isSlot":false,"src":"2562:4:12","valueSize":1}],"flags":["memory-safe"],"id":2713,"nodeType":"InlineAssembly","src":"2513:63:12"}]},"documentation":{"id":2705,"nodeType":"StructuredDocumentation","src":"2328:86:12","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":2715,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:12","nodeType":"FunctionDefinition","parameters":{"id":2708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2707,"mutability":"mutable","name":"slot","nameLocation":"2451:4:12","nodeType":"VariableDeclaration","scope":2715,"src":"2443:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:12"},"returnParameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2711,"mutability":"mutable","name":"r","nameLocation":"2500:1:12","nodeType":"VariableDeclaration","scope":2715,"src":"2480:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2670_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2710,"nodeType":"UserDefinedTypeName","pathNode":{"id":2709,"name":"Bytes32Slot","nameLocations":["2480:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":2670,"src":"2480:11:12"},"referencedDeclaration":2670,"src":"2480:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2670_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:12"},"scope":2782,"src":"2419:163:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2725,"nodeType":"Block","src":"2763:79:12","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:12","statements":[{"nodeType":"YulAssignment","src":"2812:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2722,"isOffset":false,"isSlot":true,"src":"2812:6:12","suffix":"slot","valueSize":1},{"declaration":2718,"isOffset":false,"isSlot":false,"src":"2822:4:12","valueSize":1}],"flags":["memory-safe"],"id":2724,"nodeType":"InlineAssembly","src":"2773:63:12"}]},"documentation":{"id":2716,"nodeType":"StructuredDocumentation","src":"2588:86:12","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":2726,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:12","nodeType":"FunctionDefinition","parameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2718,"mutability":"mutable","name":"slot","nameLocation":"2711:4:12","nodeType":"VariableDeclaration","scope":2726,"src":"2703:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:12"},"returnParameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"r","nameLocation":"2760:1:12","nodeType":"VariableDeclaration","scope":2726,"src":"2740:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2673_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2721,"nodeType":"UserDefinedTypeName","pathNode":{"id":2720,"name":"Uint256Slot","nameLocations":["2740:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":2673,"src":"2740:11:12"},"referencedDeclaration":2673,"src":"2740:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2673_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:12"},"scope":2782,"src":"2679:163:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2736,"nodeType":"Block","src":"3020:79:12","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:12","statements":[{"nodeType":"YulAssignment","src":"3069:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2733,"isOffset":false,"isSlot":true,"src":"3069:6:12","suffix":"slot","valueSize":1},{"declaration":2729,"isOffset":false,"isSlot":false,"src":"3079:4:12","valueSize":1}],"flags":["memory-safe"],"id":2735,"nodeType":"InlineAssembly","src":"3030:63:12"}]},"documentation":{"id":2727,"nodeType":"StructuredDocumentation","src":"2848:85:12","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":2737,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:12","nodeType":"FunctionDefinition","parameters":{"id":2730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2729,"mutability":"mutable","name":"slot","nameLocation":"2969:4:12","nodeType":"VariableDeclaration","scope":2737,"src":"2961:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:12"},"returnParameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2733,"mutability":"mutable","name":"r","nameLocation":"3017:1:12","nodeType":"VariableDeclaration","scope":2737,"src":"2998:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2676_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":2732,"nodeType":"UserDefinedTypeName","pathNode":{"id":2731,"name":"Int256Slot","nameLocations":["2998:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2676,"src":"2998:10:12"},"referencedDeclaration":2676,"src":"2998:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2676_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:12"},"scope":2782,"src":"2938:161:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2747,"nodeType":"Block","src":"3277:79:12","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:12","statements":[{"nodeType":"YulAssignment","src":"3326:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2744,"isOffset":false,"isSlot":true,"src":"3326:6:12","suffix":"slot","valueSize":1},{"declaration":2740,"isOffset":false,"isSlot":false,"src":"3336:4:12","valueSize":1}],"flags":["memory-safe"],"id":2746,"nodeType":"InlineAssembly","src":"3287:63:12"}]},"documentation":{"id":2738,"nodeType":"StructuredDocumentation","src":"3105:85:12","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":2748,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:12","nodeType":"FunctionDefinition","parameters":{"id":2741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2740,"mutability":"mutable","name":"slot","nameLocation":"3226:4:12","nodeType":"VariableDeclaration","scope":2748,"src":"3218:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2739,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:12"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"r","nameLocation":"3274:1:12","nodeType":"VariableDeclaration","scope":2748,"src":"3255:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2679_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2743,"nodeType":"UserDefinedTypeName","pathNode":{"id":2742,"name":"StringSlot","nameLocations":["3255:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2679,"src":"3255:10:12"},"referencedDeclaration":2679,"src":"3255:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2679_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:12"},"scope":2782,"src":"3195:161:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2758,"nodeType":"Block","src":"3558:85:12","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:12","statements":[{"nodeType":"YulAssignment","src":"3607:20:12","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2755,"isOffset":false,"isSlot":true,"src":"3607:6:12","suffix":"slot","valueSize":1},{"declaration":2751,"isOffset":false,"isSlot":true,"src":"3617:10:12","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2757,"nodeType":"InlineAssembly","src":"3568:69:12"}]},"documentation":{"id":2749,"nodeType":"StructuredDocumentation","src":"3362:101:12","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2759,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:12","nodeType":"FunctionDefinition","parameters":{"id":2752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2751,"mutability":"mutable","name":"store","nameLocation":"3506:5:12","nodeType":"VariableDeclaration","scope":2759,"src":"3491:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2750,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:12"},"returnParameters":{"id":2756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2755,"mutability":"mutable","name":"r","nameLocation":"3555:1:12","nodeType":"VariableDeclaration","scope":2759,"src":"3536:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2679_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2754,"nodeType":"UserDefinedTypeName","pathNode":{"id":2753,"name":"StringSlot","nameLocations":["3536:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2679,"src":"3536:10:12"},"referencedDeclaration":2679,"src":"3536:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2679_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:12"},"scope":2782,"src":"3468:175:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2769,"nodeType":"Block","src":"3818:79:12","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:12","statements":[{"nodeType":"YulAssignment","src":"3867:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2766,"isOffset":false,"isSlot":true,"src":"3867:6:12","suffix":"slot","valueSize":1},{"declaration":2762,"isOffset":false,"isSlot":false,"src":"3877:4:12","valueSize":1}],"flags":["memory-safe"],"id":2768,"nodeType":"InlineAssembly","src":"3828:63:12"}]},"documentation":{"id":2760,"nodeType":"StructuredDocumentation","src":"3649:84:12","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":2770,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:12","nodeType":"FunctionDefinition","parameters":{"id":2763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2762,"mutability":"mutable","name":"slot","nameLocation":"3768:4:12","nodeType":"VariableDeclaration","scope":2770,"src":"3760:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2761,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:12"},"returnParameters":{"id":2767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2766,"mutability":"mutable","name":"r","nameLocation":"3815:1:12","nodeType":"VariableDeclaration","scope":2770,"src":"3797:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2682_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2765,"nodeType":"UserDefinedTypeName","pathNode":{"id":2764,"name":"BytesSlot","nameLocations":["3797:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":2682,"src":"3797:9:12"},"referencedDeclaration":2682,"src":"3797:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2682_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:12"},"scope":2782,"src":"3738:159:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2780,"nodeType":"Block","src":"4094:85:12","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:12","statements":[{"nodeType":"YulAssignment","src":"4143:20:12","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2777,"isOffset":false,"isSlot":true,"src":"4143:6:12","suffix":"slot","valueSize":1},{"declaration":2773,"isOffset":false,"isSlot":true,"src":"4153:10:12","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2779,"nodeType":"InlineAssembly","src":"4104:69:12"}]},"documentation":{"id":2771,"nodeType":"StructuredDocumentation","src":"3903:99:12","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2781,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:12","nodeType":"FunctionDefinition","parameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2773,"mutability":"mutable","name":"store","nameLocation":"4043:5:12","nodeType":"VariableDeclaration","scope":2781,"src":"4029:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2772,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:12"},"returnParameters":{"id":2778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2777,"mutability":"mutable","name":"r","nameLocation":"4091:1:12","nodeType":"VariableDeclaration","scope":2781,"src":"4073:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2682_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2776,"nodeType":"UserDefinedTypeName","pathNode":{"id":2775,"name":"BytesSlot","nameLocations":["4073:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":2682,"src":"4073:9:12"},"referencedDeclaration":2682,"src":"4073:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2682_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:12"},"scope":2782,"src":"4007:172:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2783,"src":"1407:2774:12","usedErrors":[],"usedEvents":[]}],"src":"193:3989:12"},"id":12},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2806],"IERC165":[2818]},"id":2807,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2784,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2786,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2807,"sourceUnit":2819,"src":"140:38:13","symbolAliases":[{"foreign":{"id":2785,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"148:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2788,"name":"IERC165","nameLocations":["688:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2818,"src":"688:7:13"},"id":2789,"nodeType":"InheritanceSpecifier","src":"688:7:13"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2787,"nodeType":"StructuredDocumentation","src":"180:479:13","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2806,"linearizedBaseContracts":[2806,2818],"name":"ERC165","nameLocation":"678:6:13","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2817],"body":{"id":2804,"nodeType":"Block","src":"845:64:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2797,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"862:11:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2799,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"882:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2818_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2818_$","typeString":"type(contract IERC165)"}],"id":2798,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2818","typeString":"type(contract IERC165)"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:13","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2796,"id":2803,"nodeType":"Return","src":"855:47:13"}]},"documentation":{"id":2790,"nodeType":"StructuredDocumentation","src":"702:56:13","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2805,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:13","nodeType":"FunctionDefinition","parameters":{"id":2793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2792,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:13","nodeType":"VariableDeclaration","scope":2805,"src":"790:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2791,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:13"},"returnParameters":{"id":2796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2805,"src":"839:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2794,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:13"},"scope":2806,"src":"763:146:13","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2807,"src":"660:251:13","usedErrors":[],"usedEvents":[]}],"src":"114:798:13"},"id":13},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2818]},"id":2819,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2808,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2809,"nodeType":"StructuredDocumentation","src":"141:280:14","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2818,"linearizedBaseContracts":[2818],"name":"IERC165","nameLocation":"432:7:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2810,"nodeType":"StructuredDocumentation","src":"446:340:14","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2817,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:14","nodeType":"FunctionDefinition","parameters":{"id":2813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2812,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:14","nodeType":"VariableDeclaration","scope":2817,"src":"818:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2811,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:14"},"returnParameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2817,"src":"861:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2814,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:14"},"scope":2818,"src":"791:76:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2819,"src":"422:447:14","usedErrors":[],"usedEvents":[]}],"src":"115:755:14"},"id":14},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4439],"Panic":[2528],"SafeCast":[6204]},"id":4440,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2820,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":2822,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4440,"sourceUnit":2529,"src":"129:35:15","symbolAliases":[{"foreign":{"id":2821,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"137:5:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":2824,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4440,"sourceUnit":6205,"src":"165:40:15","symbolAliases":[{"foreign":{"id":2823,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"173:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2825,"nodeType":"StructuredDocumentation","src":"207:73:15","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4439,"linearizedBaseContracts":[4439],"name":"Math","nameLocation":"289:4:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2830,"members":[{"id":2826,"name":"Floor","nameLocation":"324:5:15","nodeType":"EnumValue","src":"324:5:15"},{"id":2827,"name":"Ceil","nameLocation":"367:4:15","nodeType":"EnumValue","src":"367:4:15"},{"id":2828,"name":"Trunc","nameLocation":"409:5:15","nodeType":"EnumValue","src":"409:5:15"},{"id":2829,"name":"Expand","nameLocation":"439:6:15","nodeType":"EnumValue","src":"439:6:15"}],"name":"Rounding","nameLocation":"305:8:15","nodeType":"EnumDefinition","src":"300:169:15"},{"body":{"id":2843,"nodeType":"Block","src":"731:112:15","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:15","statements":[{"nodeType":"YulAssignment","src":"780:16:15","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:15"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:15"},"nodeType":"YulFunctionCall","src":"787:9:15"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:15"}]},{"nodeType":"YulAssignment","src":"809:18:15","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:15"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:15"},"nodeType":"YulFunctionCall","src":"817:10:15"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2833,"isOffset":false,"isSlot":false,"src":"791:1:15","valueSize":1},{"declaration":2833,"isOffset":false,"isSlot":false,"src":"825:1:15","valueSize":1},{"declaration":2835,"isOffset":false,"isSlot":false,"src":"794:1:15","valueSize":1},{"declaration":2838,"isOffset":false,"isSlot":false,"src":"809:4:15","valueSize":1},{"declaration":2840,"isOffset":false,"isSlot":false,"src":"780:3:15","valueSize":1},{"declaration":2840,"isOffset":false,"isSlot":false,"src":"820:3:15","valueSize":1}],"flags":["memory-safe"],"id":2842,"nodeType":"InlineAssembly","src":"741:96:15"}]},"documentation":{"id":2831,"nodeType":"StructuredDocumentation","src":"475:163:15","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":2844,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:15","nodeType":"FunctionDefinition","parameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2833,"mutability":"mutable","name":"a","nameLocation":"667:1:15","nodeType":"VariableDeclaration","scope":2844,"src":"659:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2832,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2835,"mutability":"mutable","name":"b","nameLocation":"678:1:15","nodeType":"VariableDeclaration","scope":2844,"src":"670:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2834,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:15"},"returnParameters":{"id":2841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2838,"mutability":"mutable","name":"high","nameLocation":"712:4:15","nodeType":"VariableDeclaration","scope":2844,"src":"704:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2837,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2840,"mutability":"mutable","name":"low","nameLocation":"726:3:15","nodeType":"VariableDeclaration","scope":2844,"src":"718:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2839,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:15"},"scope":4439,"src":"643:200:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2857,"nodeType":"Block","src":"1115:462:15","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:15","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:15"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:15","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:15"},"nodeType":"YulFunctionCall","src":"1474:6:15"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:15"},"nodeType":"YulFunctionCall","src":"1461:20:15"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:15","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:15","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:15"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:15"},"nodeType":"YulFunctionCall","src":"1501:9:15"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:15"}]},{"nodeType":"YulAssignment","src":"1523:38:15","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:15"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:15"},"nodeType":"YulFunctionCall","src":"1535:12:15"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:15"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:15"},"nodeType":"YulFunctionCall","src":"1549:11:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:15"},"nodeType":"YulFunctionCall","src":"1531:30:15"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2847,"isOffset":false,"isSlot":false,"src":"1468:1:15","valueSize":1},{"declaration":2847,"isOffset":false,"isSlot":false,"src":"1505:1:15","valueSize":1},{"declaration":2849,"isOffset":false,"isSlot":false,"src":"1471:1:15","valueSize":1},{"declaration":2849,"isOffset":false,"isSlot":false,"src":"1508:1:15","valueSize":1},{"declaration":2852,"isOffset":false,"isSlot":false,"src":"1523:4:15","valueSize":1},{"declaration":2854,"isOffset":false,"isSlot":false,"src":"1494:3:15","valueSize":1},{"declaration":2854,"isOffset":false,"isSlot":false,"src":"1543:3:15","valueSize":1},{"declaration":2854,"isOffset":false,"isSlot":false,"src":"1556:3:15","valueSize":1}],"flags":["memory-safe"],"id":2856,"nodeType":"InlineAssembly","src":"1412:159:15"}]},"documentation":{"id":2845,"nodeType":"StructuredDocumentation","src":"849:173:15","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":2858,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:15","nodeType":"FunctionDefinition","parameters":{"id":2850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"a","nameLocation":"1051:1:15","nodeType":"VariableDeclaration","scope":2858,"src":"1043:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2846,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2849,"mutability":"mutable","name":"b","nameLocation":"1062:1:15","nodeType":"VariableDeclaration","scope":2858,"src":"1054:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2848,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:15"},"returnParameters":{"id":2855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2852,"mutability":"mutable","name":"high","nameLocation":"1096:4:15","nodeType":"VariableDeclaration","scope":2858,"src":"1088:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2854,"mutability":"mutable","name":"low","nameLocation":"1110:3:15","nodeType":"VariableDeclaration","scope":2858,"src":"1102:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2853,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:15"},"scope":4439,"src":"1027:550:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2892,"nodeType":"Block","src":"1784:149:15","statements":[{"id":2891,"nodeType":"UncheckedBlock","src":"1794:133:15","statements":[{"assignments":[2871],"declarations":[{"constant":false,"id":2871,"mutability":"mutable","name":"c","nameLocation":"1826:1:15","nodeType":"VariableDeclaration","scope":2891,"src":"1818:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2870,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2875,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2872,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"1830:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2873,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"1834:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:15"},{"expression":{"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2876,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"1849:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2877,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"1859:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2878,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"1864:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2881,"nodeType":"ExpressionStatement","src":"1849:16:15"},{"expression":{"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2882,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"1879:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2883,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"1888:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2886,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"1908:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2884,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"1892:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6204_$","typeString":"type(library SafeCast)"}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6203,"src":"1892:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2890,"nodeType":"ExpressionStatement","src":"1879:37:15"}]}]},"documentation":{"id":2859,"nodeType":"StructuredDocumentation","src":"1583:105:15","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":2893,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:15","nodeType":"FunctionDefinition","parameters":{"id":2864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"a","nameLocation":"1717:1:15","nodeType":"VariableDeclaration","scope":2893,"src":"1709:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2860,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2863,"mutability":"mutable","name":"b","nameLocation":"1728:1:15","nodeType":"VariableDeclaration","scope":2893,"src":"1720:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2862,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:15"},"returnParameters":{"id":2869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"success","nameLocation":"1759:7:15","nodeType":"VariableDeclaration","scope":2893,"src":"1754:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2865,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2868,"mutability":"mutable","name":"result","nameLocation":"1776:6:15","nodeType":"VariableDeclaration","scope":2893,"src":"1768:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2867,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:15"},"scope":4439,"src":"1693:240:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2927,"nodeType":"Block","src":"2143:149:15","statements":[{"id":2926,"nodeType":"UncheckedBlock","src":"2153:133:15","statements":[{"assignments":[2906],"declarations":[{"constant":false,"id":2906,"mutability":"mutable","name":"c","nameLocation":"2185:1:15","nodeType":"VariableDeclaration","scope":2926,"src":"2177:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2905,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2910,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2907,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"2189:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2908,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"2193:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:15"},{"expression":{"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2911,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"2208:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2912,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"2218:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2913,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"2223:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2916,"nodeType":"ExpressionStatement","src":"2208:16:15"},{"expression":{"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2917,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"2238:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2918,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"2247:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2921,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"2267:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2919,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"2251:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6204_$","typeString":"type(library SafeCast)"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6203,"src":"2251:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2925,"nodeType":"ExpressionStatement","src":"2238:37:15"}]}]},"documentation":{"id":2894,"nodeType":"StructuredDocumentation","src":"1939:108:15","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":2928,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:15","nodeType":"FunctionDefinition","parameters":{"id":2899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2896,"mutability":"mutable","name":"a","nameLocation":"2076:1:15","nodeType":"VariableDeclaration","scope":2928,"src":"2068:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2898,"mutability":"mutable","name":"b","nameLocation":"2087:1:15","nodeType":"VariableDeclaration","scope":2928,"src":"2079:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2897,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:15"},"returnParameters":{"id":2904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"success","nameLocation":"2118:7:15","nodeType":"VariableDeclaration","scope":2928,"src":"2113:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2900,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2903,"mutability":"mutable","name":"result","nameLocation":"2135:6:15","nodeType":"VariableDeclaration","scope":2928,"src":"2127:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2902,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:15"},"scope":4439,"src":"2052:240:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2957,"nodeType":"Block","src":"2505:391:15","statements":[{"id":2956,"nodeType":"UncheckedBlock","src":"2515:375:15","statements":[{"assignments":[2941],"declarations":[{"constant":false,"id":2941,"mutability":"mutable","name":"c","nameLocation":"2547:1:15","nodeType":"VariableDeclaration","scope":2956,"src":"2539:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2940,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2945,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2942,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"2551:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2943,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"2555:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:15"},{"AST":{"nodeType":"YulBlock","src":"2595:188:15","statements":[{"nodeType":"YulAssignment","src":"2727:42:15","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:15"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:15"},"nodeType":"YulFunctionCall","src":"2744:9:15"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:15"},"nodeType":"YulFunctionCall","src":"2741:16:15"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:15"},"nodeType":"YulFunctionCall","src":"2759:9:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:15"},"nodeType":"YulFunctionCall","src":"2738:31:15"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2931,"isOffset":false,"isSlot":false,"src":"2751:1:15","valueSize":1},{"declaration":2931,"isOffset":false,"isSlot":false,"src":"2766:1:15","valueSize":1},{"declaration":2933,"isOffset":false,"isSlot":false,"src":"2755:1:15","valueSize":1},{"declaration":2941,"isOffset":false,"isSlot":false,"src":"2748:1:15","valueSize":1},{"declaration":2936,"isOffset":false,"isSlot":false,"src":"2727:7:15","valueSize":1}],"flags":["memory-safe"],"id":2946,"nodeType":"InlineAssembly","src":"2570:213:15"},{"expression":{"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2947,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"2842:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2948,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"2851:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2951,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"2871:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2949,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"2855:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6204_$","typeString":"type(library SafeCast)"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6203,"src":"2855:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2955,"nodeType":"ExpressionStatement","src":"2842:37:15"}]}]},"documentation":{"id":2929,"nodeType":"StructuredDocumentation","src":"2298:111:15","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":2958,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:15","nodeType":"FunctionDefinition","parameters":{"id":2934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2931,"mutability":"mutable","name":"a","nameLocation":"2438:1:15","nodeType":"VariableDeclaration","scope":2958,"src":"2430:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2930,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2933,"mutability":"mutable","name":"b","nameLocation":"2449:1:15","nodeType":"VariableDeclaration","scope":2958,"src":"2441:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2932,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:15"},"returnParameters":{"id":2939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2936,"mutability":"mutable","name":"success","nameLocation":"2480:7:15","nodeType":"VariableDeclaration","scope":2958,"src":"2475:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2935,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2938,"mutability":"mutable","name":"result","nameLocation":"2497:6:15","nodeType":"VariableDeclaration","scope":2958,"src":"2489:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2937,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:15"},"scope":4439,"src":"2414:482:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2978,"nodeType":"Block","src":"3111:231:15","statements":[{"id":2977,"nodeType":"UncheckedBlock","src":"3121:215:15","statements":[{"expression":{"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2970,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"3145:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2971,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"3155:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2975,"nodeType":"ExpressionStatement","src":"3145:15:15"},{"AST":{"nodeType":"YulBlock","src":"3199:127:15","statements":[{"nodeType":"YulAssignment","src":"3293:19:15","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:15"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:15"},"nodeType":"YulFunctionCall","src":"3303:9:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2961,"isOffset":false,"isSlot":false,"src":"3307:1:15","valueSize":1},{"declaration":2963,"isOffset":false,"isSlot":false,"src":"3310:1:15","valueSize":1},{"declaration":2968,"isOffset":false,"isSlot":false,"src":"3293:6:15","valueSize":1}],"flags":["memory-safe"],"id":2976,"nodeType":"InlineAssembly","src":"3174:152:15"}]}]},"documentation":{"id":2959,"nodeType":"StructuredDocumentation","src":"2902:113:15","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":2979,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:15","nodeType":"FunctionDefinition","parameters":{"id":2964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2961,"mutability":"mutable","name":"a","nameLocation":"3044:1:15","nodeType":"VariableDeclaration","scope":2979,"src":"3036:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2960,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2963,"mutability":"mutable","name":"b","nameLocation":"3055:1:15","nodeType":"VariableDeclaration","scope":2979,"src":"3047:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2962,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:15"},"returnParameters":{"id":2969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2966,"mutability":"mutable","name":"success","nameLocation":"3086:7:15","nodeType":"VariableDeclaration","scope":2979,"src":"3081:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2965,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"result","nameLocation":"3103:6:15","nodeType":"VariableDeclaration","scope":2979,"src":"3095:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2967,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:15"},"scope":4439,"src":"3020:322:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2999,"nodeType":"Block","src":"3567:231:15","statements":[{"id":2998,"nodeType":"UncheckedBlock","src":"3577:215:15","statements":[{"expression":{"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2991,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"3601:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2992,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"3611:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2996,"nodeType":"ExpressionStatement","src":"3601:15:15"},{"AST":{"nodeType":"YulBlock","src":"3655:127:15","statements":[{"nodeType":"YulAssignment","src":"3749:19:15","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:15"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:15"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:15"},"nodeType":"YulFunctionCall","src":"3759:9:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2982,"isOffset":false,"isSlot":false,"src":"3763:1:15","valueSize":1},{"declaration":2984,"isOffset":false,"isSlot":false,"src":"3766:1:15","valueSize":1},{"declaration":2989,"isOffset":false,"isSlot":false,"src":"3749:6:15","valueSize":1}],"flags":["memory-safe"],"id":2997,"nodeType":"InlineAssembly","src":"3630:152:15"}]}]},"documentation":{"id":2980,"nodeType":"StructuredDocumentation","src":"3348:123:15","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3000,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:15","nodeType":"FunctionDefinition","parameters":{"id":2985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2982,"mutability":"mutable","name":"a","nameLocation":"3500:1:15","nodeType":"VariableDeclaration","scope":3000,"src":"3492:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2981,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2984,"mutability":"mutable","name":"b","nameLocation":"3511:1:15","nodeType":"VariableDeclaration","scope":3000,"src":"3503:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2983,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:15"},"returnParameters":{"id":2990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2987,"mutability":"mutable","name":"success","nameLocation":"3542:7:15","nodeType":"VariableDeclaration","scope":3000,"src":"3537:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2986,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2989,"mutability":"mutable","name":"result","nameLocation":"3559:6:15","nodeType":"VariableDeclaration","scope":3000,"src":"3551:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2988,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:15"},"scope":4439,"src":"3476:322:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3029,"nodeType":"Block","src":"3989:122:15","statements":[{"assignments":[3011,3013],"declarations":[{"constant":false,"id":3011,"mutability":"mutable","name":"success","nameLocation":"4005:7:15","nodeType":"VariableDeclaration","scope":3029,"src":"4000:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3010,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3013,"mutability":"mutable","name":"result","nameLocation":"4022:6:15","nodeType":"VariableDeclaration","scope":3029,"src":"4014:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3018,"initialValue":{"arguments":[{"id":3015,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"4039:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3016,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"4042:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3014,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"4032:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:15"},{"expression":{"arguments":[{"id":3020,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"4069:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3021,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"4078:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3023,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3022,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:15","memberName":"max","nodeType":"MemberAccess","src":"4086:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3019,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"4061:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3009,"id":3028,"nodeType":"Return","src":"4054:50:15"}]},"documentation":{"id":3001,"nodeType":"StructuredDocumentation","src":"3804:103:15","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3030,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:15","nodeType":"FunctionDefinition","parameters":{"id":3006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3003,"mutability":"mutable","name":"a","nameLocation":"3943:1:15","nodeType":"VariableDeclaration","scope":3030,"src":"3935:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3002,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3005,"mutability":"mutable","name":"b","nameLocation":"3954:1:15","nodeType":"VariableDeclaration","scope":3030,"src":"3946:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3004,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:15"},"returnParameters":{"id":3009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3030,"src":"3980:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3007,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:15"},"scope":4439,"src":"3912:199:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3049,"nodeType":"Block","src":"4294:73:15","statements":[{"assignments":[null,3041],"declarations":[null,{"constant":false,"id":3041,"mutability":"mutable","name":"result","nameLocation":"4315:6:15","nodeType":"VariableDeclaration","scope":3049,"src":"4307:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3040,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3046,"initialValue":{"arguments":[{"id":3043,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"4332:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3044,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"4335:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3042,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"4325:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:15"},{"expression":{"id":3047,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"4354:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3039,"id":3048,"nodeType":"Return","src":"4347:13:15"}]},"documentation":{"id":3031,"nodeType":"StructuredDocumentation","src":"4117:95:15","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3050,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:15","nodeType":"FunctionDefinition","parameters":{"id":3036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"mutability":"mutable","name":"a","nameLocation":"4248:1:15","nodeType":"VariableDeclaration","scope":3050,"src":"4240:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3032,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3035,"mutability":"mutable","name":"b","nameLocation":"4259:1:15","nodeType":"VariableDeclaration","scope":3050,"src":"4251:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3034,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:15"},"returnParameters":{"id":3039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3050,"src":"4285:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3037,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:15"},"scope":4439,"src":"4217:150:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3079,"nodeType":"Block","src":"4564:122:15","statements":[{"assignments":[3061,3063],"declarations":[{"constant":false,"id":3061,"mutability":"mutable","name":"success","nameLocation":"4580:7:15","nodeType":"VariableDeclaration","scope":3079,"src":"4575:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3060,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3063,"mutability":"mutable","name":"result","nameLocation":"4597:6:15","nodeType":"VariableDeclaration","scope":3079,"src":"4589:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3062,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3068,"initialValue":{"arguments":[{"id":3065,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"4614:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3066,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"4617:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3064,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"4607:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:15"},{"expression":{"arguments":[{"id":3070,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"4644:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3071,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"4653:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3073,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3072,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:15","memberName":"max","nodeType":"MemberAccess","src":"4661:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3069,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"4636:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3059,"id":3078,"nodeType":"Return","src":"4629:50:15"}]},"documentation":{"id":3051,"nodeType":"StructuredDocumentation","src":"4373:109:15","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3080,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:15","nodeType":"FunctionDefinition","parameters":{"id":3056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3053,"mutability":"mutable","name":"a","nameLocation":"4518:1:15","nodeType":"VariableDeclaration","scope":3080,"src":"4510:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3052,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3055,"mutability":"mutable","name":"b","nameLocation":"4529:1:15","nodeType":"VariableDeclaration","scope":3080,"src":"4521:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3054,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:15"},"returnParameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3080,"src":"4555:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3057,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:15"},"scope":4439,"src":"4487:199:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3106,"nodeType":"Block","src":"5158:207:15","statements":[{"id":3105,"nodeType":"UncheckedBlock","src":"5168:191:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3092,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"5306:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3093,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"5312:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3094,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"5316:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3096,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3099,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"5337:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3097,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"5321:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6204_$","typeString":"type(library SafeCast)"}},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6203,"src":"5321:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3102,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3091,"id":3104,"nodeType":"Return","src":"5299:49:15"}]}]},"documentation":{"id":3081,"nodeType":"StructuredDocumentation","src":"4692:374:15","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3107,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:15","nodeType":"FunctionDefinition","parameters":{"id":3088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3083,"mutability":"mutable","name":"condition","nameLocation":"5093:9:15","nodeType":"VariableDeclaration","scope":3107,"src":"5088:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3082,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3085,"mutability":"mutable","name":"a","nameLocation":"5112:1:15","nodeType":"VariableDeclaration","scope":3107,"src":"5104:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3084,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3087,"mutability":"mutable","name":"b","nameLocation":"5123:1:15","nodeType":"VariableDeclaration","scope":3107,"src":"5115:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3086,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:15"},"returnParameters":{"id":3091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3107,"src":"5149:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3089,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:15"},"scope":4439,"src":"5071:294:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3125,"nodeType":"Block","src":"5502:44:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3118,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"5527:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3119,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"5531:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3121,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"5534:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3122,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"5537:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3117,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"5519:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3116,"id":3124,"nodeType":"Return","src":"5512:27:15"}]},"documentation":{"id":3108,"nodeType":"StructuredDocumentation","src":"5371:59:15","text":" @dev Returns the largest of two numbers."},"id":3126,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:15","nodeType":"FunctionDefinition","parameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"a","nameLocation":"5456:1:15","nodeType":"VariableDeclaration","scope":3126,"src":"5448:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3109,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3112,"mutability":"mutable","name":"b","nameLocation":"5467:1:15","nodeType":"VariableDeclaration","scope":3126,"src":"5459:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3111,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:15"},"returnParameters":{"id":3116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3126,"src":"5493:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3114,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:15"},"scope":4439,"src":"5435:111:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3144,"nodeType":"Block","src":"5684:44:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3137,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"5709:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3138,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"5713:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3140,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"5716:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3141,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"5719:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3136,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"5701:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3135,"id":3143,"nodeType":"Return","src":"5694:27:15"}]},"documentation":{"id":3127,"nodeType":"StructuredDocumentation","src":"5552:60:15","text":" @dev Returns the smallest of two numbers."},"id":3145,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:15","nodeType":"FunctionDefinition","parameters":{"id":3132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3129,"mutability":"mutable","name":"a","nameLocation":"5638:1:15","nodeType":"VariableDeclaration","scope":3145,"src":"5630:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3128,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3131,"mutability":"mutable","name":"b","nameLocation":"5649:1:15","nodeType":"VariableDeclaration","scope":3145,"src":"5641:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3130,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:15"},"returnParameters":{"id":3135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3145,"src":"5675:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3133,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:15"},"scope":4439,"src":"5617:111:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3167,"nodeType":"Block","src":"5912:82:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3155,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"5967:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3156,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"5971:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3159,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"5977:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3160,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"5981:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3162,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3154,"id":3166,"nodeType":"Return","src":"5959:28:15"}]},"documentation":{"id":3146,"nodeType":"StructuredDocumentation","src":"5734:102:15","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3168,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:15","nodeType":"FunctionDefinition","parameters":{"id":3151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3148,"mutability":"mutable","name":"a","nameLocation":"5866:1:15","nodeType":"VariableDeclaration","scope":3168,"src":"5858:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3147,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3150,"mutability":"mutable","name":"b","nameLocation":"5877:1:15","nodeType":"VariableDeclaration","scope":3168,"src":"5869:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3149,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:15"},"returnParameters":{"id":3154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3168,"src":"5903:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3152,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:15"},"scope":4439,"src":"5841:153:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3208,"nodeType":"Block","src":"6286:633:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3178,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"6300:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3189,"nodeType":"IfStatement","src":"6296:150:15","trueBody":{"id":3188,"nodeType":"Block","src":"6308:138:15","statements":[{"expression":{"arguments":[{"expression":{"id":3184,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"6412:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2528_$","typeString":"type(library Panic)"}},"id":3185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:15","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2495,"src":"6412:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3181,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"6400:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2528_$","typeString":"type(library Panic)"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:15","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2527,"src":"6400:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3187,"nodeType":"ExpressionStatement","src":"6400:35:15"}]}},{"id":3207,"nodeType":"UncheckedBlock","src":"6829:84:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3192,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"6876:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3190,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"6860:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6204_$","typeString":"type(library SafeCast)"}},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6203,"src":"6860:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3196,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"6887:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3200,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"6896:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3177,"id":3206,"nodeType":"Return","src":"6853:49:15"}]}]},"documentation":{"id":3169,"nodeType":"StructuredDocumentation","src":"6000:210:15","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3209,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:15","nodeType":"FunctionDefinition","parameters":{"id":3174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3171,"mutability":"mutable","name":"a","nameLocation":"6240:1:15","nodeType":"VariableDeclaration","scope":3209,"src":"6232:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3170,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3173,"mutability":"mutable","name":"b","nameLocation":"6251:1:15","nodeType":"VariableDeclaration","scope":3209,"src":"6243:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3172,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:15"},"returnParameters":{"id":3177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3209,"src":"6277:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3175,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:15"},"scope":4439,"src":"6215:704:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3344,"nodeType":"Block","src":"7340:3585:15","statements":[{"id":3343,"nodeType":"UncheckedBlock","src":"7350:3569:15","statements":[{"assignments":[3222,3224],"declarations":[{"constant":false,"id":3222,"mutability":"mutable","name":"high","nameLocation":"7383:4:15","nodeType":"VariableDeclaration","scope":3343,"src":"7375:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3221,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3224,"mutability":"mutable","name":"low","nameLocation":"7397:3:15","nodeType":"VariableDeclaration","scope":3343,"src":"7389:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3223,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3229,"initialValue":{"arguments":[{"id":3226,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"7411:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3227,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"7414:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3225,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"7404:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3230,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"7498:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3238,"nodeType":"IfStatement","src":"7494:365:15","trueBody":{"id":3237,"nodeType":"Block","src":"7509:350:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3233,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7827:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3234,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"7833:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3220,"id":3236,"nodeType":"Return","src":"7820:24:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3239,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"7969:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3240,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"7984:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3257,"nodeType":"IfStatement","src":"7965:142:15","trueBody":{"id":3256,"nodeType":"Block","src":"7990:117:15","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3246,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"8028:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3249,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"8046:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2528_$","typeString":"type(library Panic)"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:15","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2495,"src":"8046:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3251,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"8070:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2528_$","typeString":"type(library Panic)"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:15","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2491,"src":"8070:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3245,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"8020:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3242,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"8008:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2528_$","typeString":"type(library Panic)"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:15","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2527,"src":"8008:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3255,"nodeType":"ExpressionStatement","src":"8008:84:15"}]}},{"assignments":[3259],"declarations":[{"constant":false,"id":3259,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:15","nodeType":"VariableDeclaration","scope":3343,"src":"8359:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3258,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3260,"nodeType":"VariableDeclarationStatement","src":"8359:17:15"},{"AST":{"nodeType":"YulBlock","src":"8415:283:15","statements":[{"nodeType":"YulAssignment","src":"8484:38:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:15"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:15"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:15"},"nodeType":"YulFunctionCall","src":"8497:25:15"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:15"}]},{"nodeType":"YulAssignment","src":"8604:37:15","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:15"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:15"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:15"},"nodeType":"YulFunctionCall","src":"8622:18:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:15"},"nodeType":"YulFunctionCall","src":"8612:29:15"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:15"}]},{"nodeType":"YulAssignment","src":"8658:26:15","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:15"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:15"},"nodeType":"YulFunctionCall","src":"8665:19:15"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3216,"isOffset":false,"isSlot":false,"src":"8510:11:15","valueSize":1},{"declaration":3222,"isOffset":false,"isSlot":false,"src":"8604:4:15","valueSize":1},{"declaration":3222,"isOffset":false,"isSlot":false,"src":"8616:4:15","valueSize":1},{"declaration":3224,"isOffset":false,"isSlot":false,"src":"8636:3:15","valueSize":1},{"declaration":3224,"isOffset":false,"isSlot":false,"src":"8658:3:15","valueSize":1},{"declaration":3224,"isOffset":false,"isSlot":false,"src":"8669:3:15","valueSize":1},{"declaration":3259,"isOffset":false,"isSlot":false,"src":"8484:9:15","valueSize":1},{"declaration":3259,"isOffset":false,"isSlot":false,"src":"8625:9:15","valueSize":1},{"declaration":3259,"isOffset":false,"isSlot":false,"src":"8674:9:15","valueSize":1},{"declaration":3212,"isOffset":false,"isSlot":false,"src":"8504:1:15","valueSize":1},{"declaration":3214,"isOffset":false,"isSlot":false,"src":"8507:1:15","valueSize":1}],"flags":["memory-safe"],"id":3261,"nodeType":"InlineAssembly","src":"8390:308:15"},{"assignments":[3263],"declarations":[{"constant":false,"id":3263,"mutability":"mutable","name":"twos","nameLocation":"8910:4:15","nodeType":"VariableDeclaration","scope":3343,"src":"8902:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3270,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3264,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"8917:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3266,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"8936:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3268,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:15"},{"AST":{"nodeType":"YulBlock","src":"8987:359:15","statements":[{"nodeType":"YulAssignment","src":"9052:37:15","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:15"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:15"},"nodeType":"YulFunctionCall","src":"9067:22:15"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:15"}]},{"nodeType":"YulAssignment","src":"9153:21:15","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:15"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:15"},"nodeType":"YulFunctionCall","src":"9160:14:15"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:15"}]},{"nodeType":"YulAssignment","src":"9293:39:15","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:15","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:15"},"nodeType":"YulFunctionCall","src":"9309:12:15"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:15"},"nodeType":"YulFunctionCall","src":"9305:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:15"},"nodeType":"YulFunctionCall","src":"9301:31:15"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3216,"isOffset":false,"isSlot":false,"src":"9052:11:15","valueSize":1},{"declaration":3216,"isOffset":false,"isSlot":false,"src":"9071:11:15","valueSize":1},{"declaration":3224,"isOffset":false,"isSlot":false,"src":"9153:3:15","valueSize":1},{"declaration":3224,"isOffset":false,"isSlot":false,"src":"9164:3:15","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"9084:4:15","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"9169:4:15","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"9293:4:15","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"9316:4:15","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"9323:4:15","valueSize":1}],"flags":["memory-safe"],"id":3271,"nodeType":"InlineAssembly","src":"8962:384:15"},{"expression":{"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3272,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"9409:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3273,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"9416:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3274,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"9423:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3277,"nodeType":"ExpressionStatement","src":"9409:18:15"},{"assignments":[3279],"declarations":[{"constant":false,"id":3279,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:15","nodeType":"VariableDeclaration","scope":3343,"src":"9762:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3278,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3286,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3281,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"9785:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3283,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:15"},{"expression":{"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3287,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"10018:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3289,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"10033:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3290,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"10047:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3294,"nodeType":"ExpressionStatement","src":"10018:36:15"},{"expression":{"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3295,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"10088:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3297,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"10103:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3298,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"10117:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3302,"nodeType":"ExpressionStatement","src":"10088:36:15"},{"expression":{"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3303,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"10160:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3305,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"10175:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3306,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"10189:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3310,"nodeType":"ExpressionStatement","src":"10160:36:15"},{"expression":{"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3311,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"10231:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3313,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"10246:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3314,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"10260:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3318,"nodeType":"ExpressionStatement","src":"10231:36:15"},{"expression":{"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3319,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"10304:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3321,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"10319:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3322,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"10333:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3326,"nodeType":"ExpressionStatement","src":"10304:36:15"},{"expression":{"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3327,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"10378:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3329,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"10393:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3330,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"10407:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3334,"nodeType":"ExpressionStatement","src":"10378:36:15"},{"expression":{"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3335,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"10859:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3336,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"10868:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3337,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"10874:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3340,"nodeType":"ExpressionStatement","src":"10859:22:15"},{"expression":{"id":3341,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"10902:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3220,"id":3342,"nodeType":"Return","src":"10895:13:15"}]}]},"documentation":{"id":3210,"nodeType":"StructuredDocumentation","src":"6925:312:15","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3345,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:15","nodeType":"FunctionDefinition","parameters":{"id":3217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"mutability":"mutable","name":"x","nameLocation":"7266:1:15","nodeType":"VariableDeclaration","scope":3345,"src":"7258:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3211,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3214,"mutability":"mutable","name":"y","nameLocation":"7277:1:15","nodeType":"VariableDeclaration","scope":3345,"src":"7269:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3213,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3216,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:15","nodeType":"VariableDeclaration","scope":3345,"src":"7280:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3215,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:15"},"returnParameters":{"id":3220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3219,"mutability":"mutable","name":"result","nameLocation":"7332:6:15","nodeType":"VariableDeclaration","scope":3345,"src":"7324:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3218,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:15"},"scope":4439,"src":"7242:3683:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3381,"nodeType":"Block","src":"11164:128:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3361,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"11188:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3362,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"11191:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3363,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"11194:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3360,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3345,3382],"referencedDeclaration":3345,"src":"11181:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3368,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"11242:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"}],"id":3367,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"11225:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2830_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3371,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"11262:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3372,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"11265:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3373,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"11268:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3370,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:15","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3365,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"11209:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6204_$","typeString":"type(library SafeCast)"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6203,"src":"11209:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3359,"id":3380,"nodeType":"Return","src":"11174:111:15"}]},"documentation":{"id":3346,"nodeType":"StructuredDocumentation","src":"10931:118:15","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3382,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:15","nodeType":"FunctionDefinition","parameters":{"id":3356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3348,"mutability":"mutable","name":"x","nameLocation":"11078:1:15","nodeType":"VariableDeclaration","scope":3382,"src":"11070:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3347,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3350,"mutability":"mutable","name":"y","nameLocation":"11089:1:15","nodeType":"VariableDeclaration","scope":3382,"src":"11081:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3349,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3352,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:15","nodeType":"VariableDeclaration","scope":3382,"src":"11092:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3355,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:15","nodeType":"VariableDeclaration","scope":3382,"src":"11113:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"},"typeName":{"id":3354,"nodeType":"UserDefinedTypeName","pathNode":{"id":3353,"name":"Rounding","nameLocations":["11113:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2830,"src":"11113:8:15"},"referencedDeclaration":2830,"src":"11113:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:15"},"returnParameters":{"id":3359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3382,"src":"11155:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3357,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:15"},"scope":4439,"src":"11054:238:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3431,"nodeType":"Block","src":"11500:245:15","statements":[{"id":3430,"nodeType":"UncheckedBlock","src":"11510:229:15","statements":[{"assignments":[3395,3397],"declarations":[{"constant":false,"id":3395,"mutability":"mutable","name":"high","nameLocation":"11543:4:15","nodeType":"VariableDeclaration","scope":3430,"src":"11535:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3394,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3397,"mutability":"mutable","name":"low","nameLocation":"11557:3:15","nodeType":"VariableDeclaration","scope":3430,"src":"11549:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3396,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3402,"initialValue":{"arguments":[{"id":3399,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"11571:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3400,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"11574:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3398,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"11564:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3403,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"11594:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3405,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"11607:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3416,"nodeType":"IfStatement","src":"11590:86:15","trueBody":{"id":3415,"nodeType":"Block","src":"11610:66:15","statements":[{"expression":{"arguments":[{"expression":{"id":3411,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"11640:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2528_$","typeString":"type(library Panic)"}},"id":3412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:15","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2491,"src":"11640:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3408,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"11628:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2528_$","typeString":"type(library Panic)"}},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:15","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2527,"src":"11628:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3414,"nodeType":"ExpressionStatement","src":"11628:33:15"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3417,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"11697:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":3418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:15","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3419,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"11712:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":3421,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3423,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3424,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"11719:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3425,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"11726:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3427,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3393,"id":3429,"nodeType":"Return","src":"11689:39:15"}]}]},"documentation":{"id":3383,"nodeType":"StructuredDocumentation","src":"11298:111:15","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":3432,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:15","nodeType":"FunctionDefinition","parameters":{"id":3390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3385,"mutability":"mutable","name":"x","nameLocation":"11438:1:15","nodeType":"VariableDeclaration","scope":3432,"src":"11430:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3384,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3387,"mutability":"mutable","name":"y","nameLocation":"11449:1:15","nodeType":"VariableDeclaration","scope":3432,"src":"11441:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3386,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3389,"mutability":"mutable","name":"n","nameLocation":"11458:1:15","nodeType":"VariableDeclaration","scope":3432,"src":"11452:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3388,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:15"},"returnParameters":{"id":3393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3392,"mutability":"mutable","name":"result","nameLocation":"11492:6:15","nodeType":"VariableDeclaration","scope":3432,"src":"11484:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3391,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:15"},"scope":4439,"src":"11414:331:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3470,"nodeType":"Block","src":"11963:113:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3448,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"11987:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3449,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"11990:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3450,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"11993:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3447,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[3432,3471],"referencedDeclaration":3432,"src":"11980:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3455,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"12031:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"}],"id":3454,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"12014:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2830_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3458,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"12051:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3459,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"12054:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3461,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"12062:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3457,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:15","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3452,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"11998:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6204_$","typeString":"type(library SafeCast)"}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6203,"src":"11998:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3446,"id":3469,"nodeType":"Return","src":"11973:96:15"}]},"documentation":{"id":3433,"nodeType":"StructuredDocumentation","src":"11751:109:15","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":3471,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:15","nodeType":"FunctionDefinition","parameters":{"id":3443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3435,"mutability":"mutable","name":"x","nameLocation":"11889:1:15","nodeType":"VariableDeclaration","scope":3471,"src":"11881:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3434,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3437,"mutability":"mutable","name":"y","nameLocation":"11900:1:15","nodeType":"VariableDeclaration","scope":3471,"src":"11892:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3436,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3439,"mutability":"mutable","name":"n","nameLocation":"11909:1:15","nodeType":"VariableDeclaration","scope":3471,"src":"11903:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3438,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3442,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:15","nodeType":"VariableDeclaration","scope":3471,"src":"11912:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"},"typeName":{"id":3441,"nodeType":"UserDefinedTypeName","pathNode":{"id":3440,"name":"Rounding","nameLocations":["11912:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2830,"src":"11912:8:15"},"referencedDeclaration":2830,"src":"11912:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:15"},"returnParameters":{"id":3446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3471,"src":"11954:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3444,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:15"},"scope":4439,"src":"11865:211:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3567,"nodeType":"Block","src":"12710:1849:15","statements":[{"id":3566,"nodeType":"UncheckedBlock","src":"12720:1833:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3481,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"12748:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3486,"nodeType":"IfStatement","src":"12744:20:15","trueBody":{"expression":{"hexValue":"30","id":3484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3480,"id":3485,"nodeType":"Return","src":"12756:8:15"}},{"assignments":[3488],"declarations":[{"constant":false,"id":3488,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:15","nodeType":"VariableDeclaration","scope":3566,"src":"13235:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3487,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3492,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3489,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"13255:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3490,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"13259:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:15"},{"assignments":[3494],"declarations":[{"constant":false,"id":3494,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:15","nodeType":"VariableDeclaration","scope":3566,"src":"13274:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3493,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3496,"initialValue":{"id":3495,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"13288:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:15"},{"assignments":[3498],"declarations":[{"constant":false,"id":3498,"mutability":"mutable","name":"x","nameLocation":"13432:1:15","nodeType":"VariableDeclaration","scope":3566,"src":"13425:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3497,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3500,"initialValue":{"hexValue":"30","id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:15"},{"assignments":[3502],"declarations":[{"constant":false,"id":3502,"mutability":"mutable","name":"y","nameLocation":"13458:1:15","nodeType":"VariableDeclaration","scope":3566,"src":"13451:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3501,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3504,"initialValue":{"hexValue":"31","id":3503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:15"},{"body":{"id":3541,"nodeType":"Block","src":"13501:882:15","statements":[{"assignments":[3509],"declarations":[{"constant":false,"id":3509,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:15","nodeType":"VariableDeclaration","scope":3541,"src":"13519:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3508,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3513,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3510,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"13538:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3511,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"13544:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:15"},{"expression":{"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3514,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"13573:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3515,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"13578:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3516,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3517,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"13678:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3518,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"13923:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3519,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"13929:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3520,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"13941:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:15","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3525,"nodeType":"ExpressionStatement","src":"13572:395:15"},{"expression":{"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3526,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"13987:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3527,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"13990:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3528,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3529,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"14072:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3530,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"14326:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3531,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"14330:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3534,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"14341:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3532,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:15","typeDescriptions":{}}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:15","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3540,"nodeType":"ExpressionStatement","src":"13986:382:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3505,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"13485:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3542,"nodeType":"WhileStatement","src":"13478:905:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3543,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"14401:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3548,"nodeType":"IfStatement","src":"14397:22:15","trueBody":{"expression":{"hexValue":"30","id":3546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3480,"id":3547,"nodeType":"Return","src":"14411:8:15"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3550,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"14470:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3553,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"14477:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:15","subExpression":{"id":3556,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"14490:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:15","typeDescriptions":{}}},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3562,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"14502:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3560,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:15","typeDescriptions":{}}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3549,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"14462:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3480,"id":3565,"nodeType":"Return","src":"14455:50:15"}]}]},"documentation":{"id":3472,"nodeType":"StructuredDocumentation","src":"12082:553:15","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3568,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:15","nodeType":"FunctionDefinition","parameters":{"id":3477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3474,"mutability":"mutable","name":"a","nameLocation":"12664:1:15","nodeType":"VariableDeclaration","scope":3568,"src":"12656:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3473,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3476,"mutability":"mutable","name":"n","nameLocation":"12675:1:15","nodeType":"VariableDeclaration","scope":3568,"src":"12667:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3475,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:15"},"returnParameters":{"id":3480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3568,"src":"12701:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3478,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:15"},"scope":4439,"src":"12640:1919:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3588,"nodeType":"Block","src":"15159:82:15","statements":[{"id":3587,"nodeType":"UncheckedBlock","src":"15169:66:15","statements":[{"expression":{"arguments":[{"id":3580,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"15212:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3581,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"15215:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3584,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"15222:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3578,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"15200:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4439_$","typeString":"type(library Math)"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:15","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3625,"src":"15200:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3577,"id":3586,"nodeType":"Return","src":"15193:31:15"}]}]},"documentation":{"id":3569,"nodeType":"StructuredDocumentation","src":"14565:514:15","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3589,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:15","nodeType":"FunctionDefinition","parameters":{"id":3574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3571,"mutability":"mutable","name":"a","nameLocation":"15113:1:15","nodeType":"VariableDeclaration","scope":3589,"src":"15105:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3570,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3573,"mutability":"mutable","name":"p","nameLocation":"15124:1:15","nodeType":"VariableDeclaration","scope":3589,"src":"15116:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3572,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:15"},"returnParameters":{"id":3577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3589,"src":"15150:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3575,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:15"},"scope":4439,"src":"15084:157:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3624,"nodeType":"Block","src":"16011:174:15","statements":[{"assignments":[3602,3604],"declarations":[{"constant":false,"id":3602,"mutability":"mutable","name":"success","nameLocation":"16027:7:15","nodeType":"VariableDeclaration","scope":3624,"src":"16022:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3601,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3604,"mutability":"mutable","name":"result","nameLocation":"16044:6:15","nodeType":"VariableDeclaration","scope":3624,"src":"16036:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3603,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3610,"initialValue":{"arguments":[{"id":3606,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"16064:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3607,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"16067:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3608,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"16070:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3605,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3649,3731],"referencedDeclaration":3649,"src":"16054:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:15"},{"condition":{"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:15","subExpression":{"id":3611,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"16087:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3621,"nodeType":"IfStatement","src":"16082:74:15","trueBody":{"id":3620,"nodeType":"Block","src":"16096:60:15","statements":[{"expression":{"arguments":[{"expression":{"id":3616,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"16122:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2528_$","typeString":"type(library Panic)"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:15","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2495,"src":"16122:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3613,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"16110:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2528_$","typeString":"type(library Panic)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:15","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2527,"src":"16110:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3619,"nodeType":"ExpressionStatement","src":"16110:35:15"}]}},{"expression":{"id":3622,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"16172:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3600,"id":3623,"nodeType":"Return","src":"16165:13:15"}]},"documentation":{"id":3590,"nodeType":"StructuredDocumentation","src":"15247:678:15","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3625,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:15","nodeType":"FunctionDefinition","parameters":{"id":3597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3592,"mutability":"mutable","name":"b","nameLocation":"15954:1:15","nodeType":"VariableDeclaration","scope":3625,"src":"15946:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3591,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3594,"mutability":"mutable","name":"e","nameLocation":"15965:1:15","nodeType":"VariableDeclaration","scope":3625,"src":"15957:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3593,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3596,"mutability":"mutable","name":"m","nameLocation":"15976:1:15","nodeType":"VariableDeclaration","scope":3625,"src":"15968:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3595,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:15"},"returnParameters":{"id":3600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3625,"src":"16002:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3598,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:15"},"scope":4439,"src":"15930:255:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3648,"nodeType":"Block","src":"17039:1493:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3639,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"17053:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3646,"nodeType":"IfStatement","src":"17049:29:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3638,"id":3645,"nodeType":"Return","src":"17061:17:15"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:15","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:15","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:15"},"nodeType":"YulFunctionCall","src":"17138:11:15"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:15","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:15","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:15"},"nodeType":"YulFunctionCall","src":"18050:17:15"},"nodeType":"YulExpressionStatement","src":"18050:17:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:15"},"nodeType":"YulFunctionCall","src":"18087:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:15","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:15"},"nodeType":"YulFunctionCall","src":"18080:28:15"},"nodeType":"YulExpressionStatement","src":"18080:28:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:15","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:15"},"nodeType":"YulFunctionCall","src":"18128:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:15","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:15"},"nodeType":"YulFunctionCall","src":"18121:28:15"},"nodeType":"YulExpressionStatement","src":"18121:28:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:15","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:15"},"nodeType":"YulFunctionCall","src":"18169:14:15"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:15"},"nodeType":"YulFunctionCall","src":"18162:25:15"},"nodeType":"YulExpressionStatement","src":"18162:25:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:15","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:15"},"nodeType":"YulFunctionCall","src":"18207:14:15"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:15"},"nodeType":"YulFunctionCall","src":"18200:25:15"},"nodeType":"YulExpressionStatement","src":"18200:25:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:15","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:15"},"nodeType":"YulFunctionCall","src":"18245:14:15"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:15"},"nodeType":"YulFunctionCall","src":"18238:25:15"},"nodeType":"YulExpressionStatement","src":"18238:25:15"},{"nodeType":"YulAssignment","src":"18425:57:15","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:15"},"nodeType":"YulFunctionCall","src":"18447:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:15","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:15","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:15","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:15","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:15"},"nodeType":"YulFunctionCall","src":"18436:46:15"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:15"}]},{"nodeType":"YulAssignment","src":"18495:21:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:15","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:15"},"nodeType":"YulFunctionCall","src":"18505:11:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3628,"isOffset":false,"isSlot":false,"src":"18185:1:15","valueSize":1},{"declaration":3630,"isOffset":false,"isSlot":false,"src":"18223:1:15","valueSize":1},{"declaration":3632,"isOffset":false,"isSlot":false,"src":"18261:1:15","valueSize":1},{"declaration":3637,"isOffset":false,"isSlot":false,"src":"18495:6:15","valueSize":1},{"declaration":3635,"isOffset":false,"isSlot":false,"src":"18425:7:15","valueSize":1}],"flags":["memory-safe"],"id":3647,"nodeType":"InlineAssembly","src":"17088:1438:15"}]},"documentation":{"id":3626,"nodeType":"StructuredDocumentation","src":"16191:738:15","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3649,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:15","nodeType":"FunctionDefinition","parameters":{"id":3633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3628,"mutability":"mutable","name":"b","nameLocation":"16961:1:15","nodeType":"VariableDeclaration","scope":3649,"src":"16953:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3627,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3630,"mutability":"mutable","name":"e","nameLocation":"16972:1:15","nodeType":"VariableDeclaration","scope":3649,"src":"16964:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3632,"mutability":"mutable","name":"m","nameLocation":"16983:1:15","nodeType":"VariableDeclaration","scope":3649,"src":"16975:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3631,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:15"},"returnParameters":{"id":3638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3635,"mutability":"mutable","name":"success","nameLocation":"17014:7:15","nodeType":"VariableDeclaration","scope":3649,"src":"17009:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3634,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3637,"mutability":"mutable","name":"result","nameLocation":"17031:6:15","nodeType":"VariableDeclaration","scope":3649,"src":"17023:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3636,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:15"},"scope":4439,"src":"16934:1598:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3684,"nodeType":"Block","src":"18729:179:15","statements":[{"assignments":[3662,3664],"declarations":[{"constant":false,"id":3662,"mutability":"mutable","name":"success","nameLocation":"18745:7:15","nodeType":"VariableDeclaration","scope":3684,"src":"18740:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3661,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3664,"mutability":"mutable","name":"result","nameLocation":"18767:6:15","nodeType":"VariableDeclaration","scope":3684,"src":"18754:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3663,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3670,"initialValue":{"arguments":[{"id":3666,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"18787:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3667,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"18790:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3668,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"18793:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3665,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3649,3731],"referencedDeclaration":3731,"src":"18777:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:15"},{"condition":{"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:15","subExpression":{"id":3671,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"18810:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3681,"nodeType":"IfStatement","src":"18805:74:15","trueBody":{"id":3680,"nodeType":"Block","src":"18819:60:15","statements":[{"expression":{"arguments":[{"expression":{"id":3676,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"18845:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2528_$","typeString":"type(library Panic)"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:15","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2495,"src":"18845:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3673,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"18833:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2528_$","typeString":"type(library Panic)"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:15","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2527,"src":"18833:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3679,"nodeType":"ExpressionStatement","src":"18833:35:15"}]}},{"expression":{"id":3682,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"18895:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3660,"id":3683,"nodeType":"Return","src":"18888:13:15"}]},"documentation":{"id":3650,"nodeType":"StructuredDocumentation","src":"18538:85:15","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":3685,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:15","nodeType":"FunctionDefinition","parameters":{"id":3657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"b","nameLocation":"18657:1:15","nodeType":"VariableDeclaration","scope":3685,"src":"18644:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3651,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3654,"mutability":"mutable","name":"e","nameLocation":"18673:1:15","nodeType":"VariableDeclaration","scope":3685,"src":"18660:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3653,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3656,"mutability":"mutable","name":"m","nameLocation":"18689:1:15","nodeType":"VariableDeclaration","scope":3685,"src":"18676:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3655,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:15"},"returnParameters":{"id":3660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3685,"src":"18715:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3658,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:15"},"scope":4439,"src":"18628:280:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3730,"nodeType":"Block","src":"19162:771:15","statements":[{"condition":{"arguments":[{"id":3700,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"19187:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3699,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"19176:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3709,"nodeType":"IfStatement","src":"19172:47:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3703,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3698,"id":3708,"nodeType":"Return","src":"19191:28:15"}},{"assignments":[3711],"declarations":[{"constant":false,"id":3711,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:15","nodeType":"VariableDeclaration","scope":3730,"src":"19230:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3710,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3714,"initialValue":{"expression":{"id":3712,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"19245:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:15","memberName":"length","nodeType":"MemberAccess","src":"19245:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:15"},{"expression":{"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3715,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"19335:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3718,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"19361:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:15","memberName":"length","nodeType":"MemberAccess","src":"19361:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3720,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"19371:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:15","memberName":"length","nodeType":"MemberAccess","src":"19371:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3722,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"19381:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3723,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"19387:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3724,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"19390:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3725,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"19393:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3716,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3728,"nodeType":"ExpressionStatement","src":"19335:60:15"},{"AST":{"nodeType":"YulBlock","src":"19431:496:15","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:15","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:15"},"nodeType":"YulFunctionCall","src":"19460:17:15"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:15","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:15","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:15"},"nodeType":"YulFunctionCall","src":"19589:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:15","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:15"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:15"},"nodeType":"YulFunctionCall","src":"19611:13:15"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:15"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:15"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:15"},"nodeType":"YulFunctionCall","src":"19578:62:15"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:15"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:15"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:15"},"nodeType":"YulFunctionCall","src":"19789:20:15"},"nodeType":"YulExpressionStatement","src":"19789:20:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:15","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:15"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:15"},"nodeType":"YulFunctionCall","src":"19898:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:15"},"nodeType":"YulFunctionCall","src":"19885:32:15"},"nodeType":"YulExpressionStatement","src":"19885:32:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":3711,"isOffset":false,"isSlot":false,"src":"19635:4:15","valueSize":1},{"declaration":3711,"isOffset":false,"isSlot":false,"src":"19804:4:15","valueSize":1},{"declaration":3711,"isOffset":false,"isSlot":false,"src":"19911:4:15","valueSize":1},{"declaration":3697,"isOffset":false,"isSlot":false,"src":"19464:6:15","valueSize":1},{"declaration":3697,"isOffset":false,"isSlot":false,"src":"19617:6:15","valueSize":1},{"declaration":3697,"isOffset":false,"isSlot":false,"src":"19796:6:15","valueSize":1},{"declaration":3695,"isOffset":false,"isSlot":false,"src":"19567:7:15","valueSize":1}],"flags":["memory-safe"],"id":3729,"nodeType":"InlineAssembly","src":"19406:521:15"}]},"documentation":{"id":3686,"nodeType":"StructuredDocumentation","src":"18914:88:15","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":3731,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:15","nodeType":"FunctionDefinition","parameters":{"id":3693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3688,"mutability":"mutable","name":"b","nameLocation":"19048:1:15","nodeType":"VariableDeclaration","scope":3731,"src":"19035:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3687,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3690,"mutability":"mutable","name":"e","nameLocation":"19072:1:15","nodeType":"VariableDeclaration","scope":3731,"src":"19059:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3689,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3692,"mutability":"mutable","name":"m","nameLocation":"19096:1:15","nodeType":"VariableDeclaration","scope":3731,"src":"19083:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3691,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:15"},"returnParameters":{"id":3698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3695,"mutability":"mutable","name":"success","nameLocation":"19132:7:15","nodeType":"VariableDeclaration","scope":3731,"src":"19127:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3694,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3697,"mutability":"mutable","name":"result","nameLocation":"19154:6:15","nodeType":"VariableDeclaration","scope":3731,"src":"19141:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3696,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:15"},"scope":4439,"src":"19007:926:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3763,"nodeType":"Block","src":"20088:176:15","statements":[{"body":{"id":3759,"nodeType":"Block","src":"20145:92:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3750,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"20163:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3752,"indexExpression":{"id":3751,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"20173:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3758,"nodeType":"IfStatement","src":"20159:68:15","trueBody":{"id":3757,"nodeType":"Block","src":"20182:45:15","statements":[{"expression":{"hexValue":"66616c7365","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3738,"id":3756,"nodeType":"Return","src":"20200:12:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3743,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"20118:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3744,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"20122:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:15","memberName":"length","nodeType":"MemberAccess","src":"20122:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3760,"initializationExpression":{"assignments":[3740],"declarations":[{"constant":false,"id":3740,"mutability":"mutable","name":"i","nameLocation":"20111:1:15","nodeType":"VariableDeclaration","scope":3760,"src":"20103:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3739,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3742,"initialValue":{"hexValue":"30","id":3741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:15"},"loopExpression":{"expression":{"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:15","subExpression":{"id":3747,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"20142:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3749,"nodeType":"ExpressionStatement","src":"20140:3:15"},"nodeType":"ForStatement","src":"20098:139:15"},{"expression":{"hexValue":"74727565","id":3761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3738,"id":3762,"nodeType":"Return","src":"20246:11:15"}]},"documentation":{"id":3732,"nodeType":"StructuredDocumentation","src":"19939:72:15","text":" @dev Returns whether the provided byte array is zero."},"id":3764,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:15","nodeType":"FunctionDefinition","parameters":{"id":3735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3734,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:15","nodeType":"VariableDeclaration","scope":3764,"src":"20036:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3733,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:15"},"returnParameters":{"id":3738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3764,"src":"20082:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3736,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:15"},"scope":4439,"src":"20016:248:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3982,"nodeType":"Block","src":"20624:5124:15","statements":[{"id":3981,"nodeType":"UncheckedBlock","src":"20634:5108:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3772,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"20728:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":3773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3778,"nodeType":"IfStatement","src":"20724:53:15","trueBody":{"id":3777,"nodeType":"Block","src":"20736:41:15","statements":[{"expression":{"id":3775,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"20761:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3771,"id":3776,"nodeType":"Return","src":"20754:8:15"}]}},{"assignments":[3780],"declarations":[{"constant":false,"id":3780,"mutability":"mutable","name":"aa","nameLocation":"21712:2:15","nodeType":"VariableDeclaration","scope":3981,"src":"21704:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3779,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3782,"initialValue":{"id":3781,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"21717:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:15"},{"assignments":[3784],"declarations":[{"constant":false,"id":3784,"mutability":"mutable","name":"xn","nameLocation":"21740:2:15","nodeType":"VariableDeclaration","scope":3981,"src":"21732:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3783,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3786,"initialValue":{"hexValue":"31","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3787,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"21765:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:15","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3791,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:15","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3802,"nodeType":"IfStatement","src":"21761:92:15","trueBody":{"id":3801,"nodeType":"Block","src":"21783:70:15","statements":[{"expression":{"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3793,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"21801:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3796,"nodeType":"ExpressionStatement","src":"21801:10:15"},{"expression":{"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3797,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"21829:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3800,"nodeType":"ExpressionStatement","src":"21829:9:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3803,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"21870:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:15","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3807,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:15","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3818,"nodeType":"IfStatement","src":"21866:90:15","trueBody":{"id":3817,"nodeType":"Block","src":"21887:69:15","statements":[{"expression":{"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3809,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"21905:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3812,"nodeType":"ExpressionStatement","src":"21905:9:15"},{"expression":{"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3813,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"21932:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3816,"nodeType":"ExpressionStatement","src":"21932:9:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3819,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"21973:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:15","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3823,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:15","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3834,"nodeType":"IfStatement","src":"21969:90:15","trueBody":{"id":3833,"nodeType":"Block","src":"21990:69:15","statements":[{"expression":{"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3825,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"22008:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3828,"nodeType":"ExpressionStatement","src":"22008:9:15"},{"expression":{"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3829,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"22035:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3832,"nodeType":"ExpressionStatement","src":"22035:9:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3835,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"22076:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:15","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:15","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3850,"nodeType":"IfStatement","src":"22072:89:15","trueBody":{"id":3849,"nodeType":"Block","src":"22093:68:15","statements":[{"expression":{"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3841,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"22111:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3844,"nodeType":"ExpressionStatement","src":"22111:9:15"},{"expression":{"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3845,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"22138:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":3846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3848,"nodeType":"ExpressionStatement","src":"22138:8:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3851,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"22178:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:15","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:15","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3866,"nodeType":"IfStatement","src":"22174:87:15","trueBody":{"id":3865,"nodeType":"Block","src":"22194:67:15","statements":[{"expression":{"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3857,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"22212:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3860,"nodeType":"ExpressionStatement","src":"22212:8:15"},{"expression":{"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3861,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"22238:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3864,"nodeType":"ExpressionStatement","src":"22238:8:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3867,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"22278:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3871,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3882,"nodeType":"IfStatement","src":"22274:87:15","trueBody":{"id":3881,"nodeType":"Block","src":"22294:67:15","statements":[{"expression":{"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3873,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"22312:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3876,"nodeType":"ExpressionStatement","src":"22312:8:15"},{"expression":{"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3877,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"22338:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":3878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3880,"nodeType":"ExpressionStatement","src":"22338:8:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3883,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"22378:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3887,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3894,"nodeType":"IfStatement","src":"22374:61:15","trueBody":{"id":3893,"nodeType":"Block","src":"22394:41:15","statements":[{"expression":{"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3889,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"22412:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3892,"nodeType":"ExpressionStatement","src":"22412:8:15"}]}},{"expression":{"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3895,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"22855:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3897,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"22865:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3899,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3903,"nodeType":"ExpressionStatement","src":"22855:18:15"},{"expression":{"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3904,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"24760:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3905,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"24766:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3906,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"24771:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3907,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"24775:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3910,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3914,"nodeType":"ExpressionStatement","src":"24760:23:15"},{"expression":{"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3915,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"24869:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3916,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"24875:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3917,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"24880:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3918,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"24884:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3925,"nodeType":"ExpressionStatement","src":"24869:23:15"},{"expression":{"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3926,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"24980:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3927,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"24986:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3928,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"24991:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3929,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"24995:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3936,"nodeType":"ExpressionStatement","src":"24980:23:15"},{"expression":{"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3937,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"25089:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3938,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"25095:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3939,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"25100:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3940,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"25104:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3943,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3947,"nodeType":"ExpressionStatement","src":"25089:23:15"},{"expression":{"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3948,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"25199:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3949,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"25205:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3950,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"25210:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3951,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"25214:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3954,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3958,"nodeType":"ExpressionStatement","src":"25199:23:15"},{"expression":{"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3959,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"25309:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3960,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"25315:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3961,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"25320:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3962,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"25324:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3965,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3969,"nodeType":"ExpressionStatement","src":"25309:23:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3970,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"25698:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3973,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"25719:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3974,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"25724:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3975,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"25728:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3971,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"25703:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6204_$","typeString":"type(library SafeCast)"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6203,"src":"25703:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3771,"id":3980,"nodeType":"Return","src":"25691:40:15"}]}]},"documentation":{"id":3765,"nodeType":"StructuredDocumentation","src":"20270:292:15","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":3983,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:15","nodeType":"FunctionDefinition","parameters":{"id":3768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3767,"mutability":"mutable","name":"a","nameLocation":"20589:1:15","nodeType":"VariableDeclaration","scope":3983,"src":"20581:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3766,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:15"},"returnParameters":{"id":3771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3983,"src":"20615:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3769,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:15"},"scope":4439,"src":"20567:5181:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4016,"nodeType":"Block","src":"25921:171:15","statements":[{"id":4015,"nodeType":"UncheckedBlock","src":"25931:155:15","statements":[{"assignments":[3995],"declarations":[{"constant":false,"id":3995,"mutability":"mutable","name":"result","nameLocation":"25963:6:15","nodeType":"VariableDeclaration","scope":4015,"src":"25955:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3994,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3999,"initialValue":{"arguments":[{"id":3997,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"25977:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3996,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3983,4017],"referencedDeclaration":3983,"src":"25972:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4000,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"26000:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4004,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"26042:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"}],"id":4003,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"26025:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2830_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4006,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"26055:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4007,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"26064:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4009,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"26073:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4001,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"26009:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6204_$","typeString":"type(library SafeCast)"}},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6203,"src":"26009:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3993,"id":4014,"nodeType":"Return","src":"25993:82:15"}]}]},"documentation":{"id":3984,"nodeType":"StructuredDocumentation","src":"25754:86:15","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4017,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:15","nodeType":"FunctionDefinition","parameters":{"id":3990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3986,"mutability":"mutable","name":"a","nameLocation":"25867:1:15","nodeType":"VariableDeclaration","scope":4017,"src":"25859:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3985,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3989,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:15","nodeType":"VariableDeclaration","scope":4017,"src":"25870:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"},"typeName":{"id":3988,"nodeType":"UserDefinedTypeName","pathNode":{"id":3987,"name":"Rounding","nameLocations":["25870:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2830,"src":"25870:8:15"},"referencedDeclaration":2830,"src":"25870:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:15"},"returnParameters":{"id":3993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4017,"src":"25912:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3991,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:15"},"scope":4439,"src":"25845:247:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4107,"nodeType":"Block","src":"26281:2334:15","statements":[{"expression":{"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4025,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"26363:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4028,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"26383:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:15","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4026,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"26367:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6204_$","typeString":"type(library SafeCast)"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6203,"src":"26367:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:15","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4035,"nodeType":"ExpressionStatement","src":"26363:64:15"},{"expression":{"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4036,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"26503:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4039,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"26525:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4040,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"26530:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4042,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:15","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4037,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"26508:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6204_$","typeString":"type(library SafeCast)"}},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6203,"src":"26508:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:15","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4049,"nodeType":"ExpressionStatement","src":"26503:56:15"},{"expression":{"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4050,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"26634:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4053,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"26656:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4054,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"26661:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4056,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:15","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4051,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"26639:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6204_$","typeString":"type(library SafeCast)"}},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6203,"src":"26639:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:15","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4063,"nodeType":"ExpressionStatement","src":"26634:48:15"},{"expression":{"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4064,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"26757:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4067,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"26779:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4068,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"26784:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4070,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:15","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4065,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"26762:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6204_$","typeString":"type(library SafeCast)"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6203,"src":"26762:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4077,"nodeType":"ExpressionStatement","src":"26757:44:15"},{"expression":{"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4078,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"26874:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4081,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"26896:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4082,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"26901:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4084,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4079,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"26879:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6204_$","typeString":"type(library SafeCast)"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6203,"src":"26879:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4091,"nodeType":"ExpressionStatement","src":"26874:42:15"},{"expression":{"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4092,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"26988:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4095,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"27010:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4096,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"27015:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4098,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4093,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"26993:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6204_$","typeString":"type(library SafeCast)"}},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6203,"src":"26993:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4105,"nodeType":"ExpressionStatement","src":"26988:41:15"},{"AST":{"nodeType":"YulBlock","src":"28490:119:15","statements":[{"nodeType":"YulAssignment","src":"28504:95:15","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:15"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:15"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:15"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:15"},"nodeType":"YulFunctionCall","src":"28520:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:15","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:15"},"nodeType":"YulFunctionCall","src":"28515:83:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:15"},"nodeType":"YulFunctionCall","src":"28509:90:15"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4023,"isOffset":false,"isSlot":false,"src":"28504:1:15","valueSize":1},{"declaration":4023,"isOffset":false,"isSlot":false,"src":"28512:1:15","valueSize":1},{"declaration":4023,"isOffset":false,"isSlot":false,"src":"28524:1:15","valueSize":1},{"declaration":4020,"isOffset":false,"isSlot":false,"src":"28527:1:15","valueSize":1}],"flags":["memory-safe"],"id":4106,"nodeType":"InlineAssembly","src":"28465:144:15"}]},"documentation":{"id":4018,"nodeType":"StructuredDocumentation","src":"26098:119:15","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4108,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:15","nodeType":"FunctionDefinition","parameters":{"id":4021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4020,"mutability":"mutable","name":"x","nameLocation":"26244:1:15","nodeType":"VariableDeclaration","scope":4108,"src":"26236:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4019,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:15"},"returnParameters":{"id":4024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4023,"mutability":"mutable","name":"r","nameLocation":"26278:1:15","nodeType":"VariableDeclaration","scope":4108,"src":"26270:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4022,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:15"},"scope":4439,"src":"26222:2393:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4141,"nodeType":"Block","src":"28848:175:15","statements":[{"id":4140,"nodeType":"UncheckedBlock","src":"28858:159:15","statements":[{"assignments":[4120],"declarations":[{"constant":false,"id":4120,"mutability":"mutable","name":"result","nameLocation":"28890:6:15","nodeType":"VariableDeclaration","scope":4140,"src":"28882:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4119,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4124,"initialValue":{"arguments":[{"id":4122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"28904:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4121,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4108,4142],"referencedDeclaration":4108,"src":"28899:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4125,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"28931:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4129,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"28973:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"}],"id":4128,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"28956:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2830_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4132,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"28991:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"29000:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4126,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"28940:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6204_$","typeString":"type(library SafeCast)"}},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6203,"src":"28940:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4118,"id":4139,"nodeType":"Return","src":"28924:82:15"}]}]},"documentation":{"id":4109,"nodeType":"StructuredDocumentation","src":"28621:142:15","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4142,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:15","nodeType":"FunctionDefinition","parameters":{"id":4115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4111,"mutability":"mutable","name":"value","nameLocation":"28790:5:15","nodeType":"VariableDeclaration","scope":4142,"src":"28782:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4110,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4114,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:15","nodeType":"VariableDeclaration","scope":4142,"src":"28797:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"},"typeName":{"id":4113,"nodeType":"UserDefinedTypeName","pathNode":{"id":4112,"name":"Rounding","nameLocations":["28797:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2830,"src":"28797:8:15"},"referencedDeclaration":2830,"src":"28797:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:15"},"returnParameters":{"id":4118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4142,"src":"28839:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4116,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:15"},"scope":4439,"src":"28768:255:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4270,"nodeType":"Block","src":"29216:854:15","statements":[{"assignments":[4151],"declarations":[{"constant":false,"id":4151,"mutability":"mutable","name":"result","nameLocation":"29234:6:15","nodeType":"VariableDeclaration","scope":4270,"src":"29226:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4150,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4153,"initialValue":{"hexValue":"30","id":4152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:15"},{"id":4267,"nodeType":"UncheckedBlock","src":"29254:787:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"29282:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4170,"nodeType":"IfStatement","src":"29278:103:15","trueBody":{"id":4169,"nodeType":"Block","src":"29301:80:15","statements":[{"expression":{"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"29319:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4164,"nodeType":"ExpressionStatement","src":"29319:17:15"},{"expression":{"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4165,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"29354:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4168,"nodeType":"ExpressionStatement","src":"29354:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"29398:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4187,"nodeType":"IfStatement","src":"29394:103:15","trueBody":{"id":4186,"nodeType":"Block","src":"29417:80:15","statements":[{"expression":{"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"29435:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4181,"nodeType":"ExpressionStatement","src":"29435:17:15"},{"expression":{"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4182,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"29470:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4185,"nodeType":"ExpressionStatement","src":"29470:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"29514:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4204,"nodeType":"IfStatement","src":"29510:103:15","trueBody":{"id":4203,"nodeType":"Block","src":"29533:80:15","statements":[{"expression":{"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"29551:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4198,"nodeType":"ExpressionStatement","src":"29551:17:15"},{"expression":{"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4199,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"29586:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4202,"nodeType":"ExpressionStatement","src":"29586:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"29630:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4221,"nodeType":"IfStatement","src":"29626:100:15","trueBody":{"id":4220,"nodeType":"Block","src":"29648:78:15","statements":[{"expression":{"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"29666:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4215,"nodeType":"ExpressionStatement","src":"29666:16:15"},{"expression":{"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4216,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"29700:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4219,"nodeType":"ExpressionStatement","src":"29700:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"29743:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4238,"nodeType":"IfStatement","src":"29739:100:15","trueBody":{"id":4237,"nodeType":"Block","src":"29761:78:15","statements":[{"expression":{"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"29779:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4232,"nodeType":"ExpressionStatement","src":"29779:16:15"},{"expression":{"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4233,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"29813:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4236,"nodeType":"ExpressionStatement","src":"29813:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"29856:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4255,"nodeType":"IfStatement","src":"29852:100:15","trueBody":{"id":4254,"nodeType":"Block","src":"29874:78:15","statements":[{"expression":{"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"29892:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4249,"nodeType":"ExpressionStatement","src":"29892:16:15"},{"expression":{"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4250,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"29926:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4253,"nodeType":"ExpressionStatement","src":"29926:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"29969:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4266,"nodeType":"IfStatement","src":"29965:66:15","trueBody":{"id":4265,"nodeType":"Block","src":"29987:44:15","statements":[{"expression":{"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4261,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"30005:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4264,"nodeType":"ExpressionStatement","src":"30005:11:15"}]}}]},{"expression":{"id":4268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"30057:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4149,"id":4269,"nodeType":"Return","src":"30050:13:15"}]},"documentation":{"id":4143,"nodeType":"StructuredDocumentation","src":"29029:120:15","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4271,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:15","nodeType":"FunctionDefinition","parameters":{"id":4146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4145,"mutability":"mutable","name":"value","nameLocation":"29177:5:15","nodeType":"VariableDeclaration","scope":4271,"src":"29169:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4144,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:15"},"returnParameters":{"id":4149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4271,"src":"29207:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4147,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:15"},"scope":4439,"src":"29154:916:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4304,"nodeType":"Block","src":"30305:177:15","statements":[{"id":4303,"nodeType":"UncheckedBlock","src":"30315:161:15","statements":[{"assignments":[4283],"declarations":[{"constant":false,"id":4283,"mutability":"mutable","name":"result","nameLocation":"30347:6:15","nodeType":"VariableDeclaration","scope":4303,"src":"30339:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4282,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4287,"initialValue":{"arguments":[{"id":4285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"30362:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4284,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4271,4305],"referencedDeclaration":4271,"src":"30356:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4288,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"30389:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4292,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"30431:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"}],"id":4291,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"30414:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2830_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4295,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"30450:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"30459:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4289,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"30398:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6204_$","typeString":"type(library SafeCast)"}},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6203,"src":"30398:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4281,"id":4302,"nodeType":"Return","src":"30382:83:15"}]}]},"documentation":{"id":4272,"nodeType":"StructuredDocumentation","src":"30076:143:15","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4305,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:15","nodeType":"FunctionDefinition","parameters":{"id":4278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4274,"mutability":"mutable","name":"value","nameLocation":"30247:5:15","nodeType":"VariableDeclaration","scope":4305,"src":"30239:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4273,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4277,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:15","nodeType":"VariableDeclaration","scope":4305,"src":"30254:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"},"typeName":{"id":4276,"nodeType":"UserDefinedTypeName","pathNode":{"id":4275,"name":"Rounding","nameLocations":["30254:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2830,"src":"30254:8:15"},"referencedDeclaration":2830,"src":"30254:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:15"},"returnParameters":{"id":4281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4305,"src":"30296:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4279,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:15"},"scope":4439,"src":"30224:258:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4381,"nodeType":"Block","src":"30800:675:15","statements":[{"expression":{"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4313,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"30882:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4316,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"30902:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:15","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4314,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"30886:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6204_$","typeString":"type(library SafeCast)"}},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6203,"src":"30886:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:15","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4323,"nodeType":"ExpressionStatement","src":"30882:64:15"},{"expression":{"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4324,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"31022:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4327,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"31044:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4328,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"31049:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4330,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:15","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4325,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"31027:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6204_$","typeString":"type(library SafeCast)"}},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6203,"src":"31027:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:15","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4337,"nodeType":"ExpressionStatement","src":"31022:56:15"},{"expression":{"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4338,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"31153:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4341,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"31175:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4342,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"31180:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:15","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4339,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"31158:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6204_$","typeString":"type(library SafeCast)"}},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6203,"src":"31158:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:15","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4351,"nodeType":"ExpressionStatement","src":"31153:48:15"},{"expression":{"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4352,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"31276:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4355,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"31298:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4356,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"31303:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4358,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:15","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4353,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"31281:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6204_$","typeString":"type(library SafeCast)"}},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6203,"src":"31281:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4365,"nodeType":"ExpressionStatement","src":"31276:44:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4366,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"31426:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4372,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"31453:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4373,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"31458:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4375,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4370,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"31436:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6204_$","typeString":"type(library SafeCast)"}},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6203,"src":"31436:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4312,"id":4380,"nodeType":"Return","src":"31418:50:15"}]},"documentation":{"id":4306,"nodeType":"StructuredDocumentation","src":"30488:246:15","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4382,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:15","nodeType":"FunctionDefinition","parameters":{"id":4309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4308,"mutability":"mutable","name":"x","nameLocation":"30763:1:15","nodeType":"VariableDeclaration","scope":4382,"src":"30755:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4307,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:15"},"returnParameters":{"id":4312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4311,"mutability":"mutable","name":"r","nameLocation":"30797:1:15","nodeType":"VariableDeclaration","scope":4382,"src":"30789:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4310,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:15"},"scope":4439,"src":"30739:736:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4418,"nodeType":"Block","src":"31712:184:15","statements":[{"id":4417,"nodeType":"UncheckedBlock","src":"31722:168:15","statements":[{"assignments":[4394],"declarations":[{"constant":false,"id":4394,"mutability":"mutable","name":"result","nameLocation":"31754:6:15","nodeType":"VariableDeclaration","scope":4417,"src":"31746:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4393,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4398,"initialValue":{"arguments":[{"id":4396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"31770:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4395,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4382,4419],"referencedDeclaration":4382,"src":"31763:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4399,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"31797:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4403,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"31839:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"}],"id":4402,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"31822:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2830_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4406,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"31858:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4409,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"31873:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4400,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"31806:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6204_$","typeString":"type(library SafeCast)"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6203,"src":"31806:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4392,"id":4416,"nodeType":"Return","src":"31790:89:15"}]}]},"documentation":{"id":4383,"nodeType":"StructuredDocumentation","src":"31481:144:15","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4419,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:15","nodeType":"FunctionDefinition","parameters":{"id":4389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4385,"mutability":"mutable","name":"value","nameLocation":"31654:5:15","nodeType":"VariableDeclaration","scope":4419,"src":"31646:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4384,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4388,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:15","nodeType":"VariableDeclaration","scope":4419,"src":"31661:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"},"typeName":{"id":4387,"nodeType":"UserDefinedTypeName","pathNode":{"id":4386,"name":"Rounding","nameLocations":["31661:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2830,"src":"31661:8:15"},"referencedDeclaration":2830,"src":"31661:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:15"},"returnParameters":{"id":4392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4419,"src":"31703:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4390,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:15"},"scope":4439,"src":"31630:266:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4437,"nodeType":"Block","src":"32094:48:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4430,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4423,"src":"32117:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"}],"id":4429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4428,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:15","typeDescriptions":{}}},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4427,"id":4436,"nodeType":"Return","src":"32104:31:15"}]},"documentation":{"id":4420,"nodeType":"StructuredDocumentation","src":"31902:113:15","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4438,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:15","nodeType":"FunctionDefinition","parameters":{"id":4424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4423,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:15","nodeType":"VariableDeclaration","scope":4438,"src":"32046:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"},"typeName":{"id":4422,"nodeType":"UserDefinedTypeName","pathNode":{"id":4421,"name":"Rounding","nameLocations":["32046:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2830,"src":"32046:8:15"},"referencedDeclaration":2830,"src":"32046:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2830","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:15"},"returnParameters":{"id":4427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4438,"src":"32088:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4425,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:15"},"scope":4439,"src":"32020:122:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4440,"src":"281:31863:15","usedErrors":[],"usedEvents":[]}],"src":"103:32042:15"},"id":15},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6204]},"id":6205,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4441,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4442,"nodeType":"StructuredDocumentation","src":"218:550:16","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6204,"linearizedBaseContracts":[6204],"name":"SafeCast","nameLocation":"777:8:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4443,"nodeType":"StructuredDocumentation","src":"792:68:16","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4449,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:16","nodeType":"ErrorDefinition","parameters":{"id":4448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4445,"mutability":"mutable","name":"bits","nameLocation":"908:4:16","nodeType":"VariableDeclaration","scope":4449,"src":"902:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4444,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4447,"mutability":"mutable","name":"value","nameLocation":"922:5:16","nodeType":"VariableDeclaration","scope":4449,"src":"914:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4446,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:16"},"src":"865:64:16"},{"documentation":{"id":4450,"nodeType":"StructuredDocumentation","src":"935:75:16","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4454,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:16","nodeType":"ErrorDefinition","parameters":{"id":4453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4452,"mutability":"mutable","name":"value","nameLocation":"1056:5:16","nodeType":"VariableDeclaration","scope":4454,"src":"1049:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4451,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:16"},"src":"1015:48:16"},{"documentation":{"id":4455,"nodeType":"StructuredDocumentation","src":"1069:67:16","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4461,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:16","nodeType":"ErrorDefinition","parameters":{"id":4460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4457,"mutability":"mutable","name":"bits","nameLocation":"1183:4:16","nodeType":"VariableDeclaration","scope":4461,"src":"1177:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4456,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4459,"mutability":"mutable","name":"value","nameLocation":"1196:5:16","nodeType":"VariableDeclaration","scope":4461,"src":"1189:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4458,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:16"},"src":"1141:62:16"},{"documentation":{"id":4462,"nodeType":"StructuredDocumentation","src":"1209:75:16","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4466,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:16","nodeType":"ErrorDefinition","parameters":{"id":4465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4464,"mutability":"mutable","name":"value","nameLocation":"1331:5:16","nodeType":"VariableDeclaration","scope":4466,"src":"1323:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4463,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:16"},"src":"1289:49:16"},{"body":{"id":4493,"nodeType":"Block","src":"1695:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"1709:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4476,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4475,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:16","memberName":"max","nodeType":"MemberAccess","src":"1717:17:16","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4487,"nodeType":"IfStatement","src":"1705:105:16","trueBody":{"id":4486,"nodeType":"Block","src":"1736:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:16","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"1793:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4481,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"1757:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4485,"nodeType":"RevertStatement","src":"1750:49:16"}]}},{"expression":{"arguments":[{"id":4490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"1834:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4488,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:16","typeDescriptions":{}}},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4473,"id":4492,"nodeType":"Return","src":"1819:21:16"}]},"documentation":{"id":4467,"nodeType":"StructuredDocumentation","src":"1344:280:16","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4494,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:16","nodeType":"FunctionDefinition","parameters":{"id":4470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4469,"mutability":"mutable","name":"value","nameLocation":"1656:5:16","nodeType":"VariableDeclaration","scope":4494,"src":"1648:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:16"},"returnParameters":{"id":4473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4494,"src":"1686:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4471,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:16","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:16"},"scope":6204,"src":"1629:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4521,"nodeType":"Block","src":"2204:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"2218:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4504,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4503,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:16","memberName":"max","nodeType":"MemberAccess","src":"2226:17:16","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4515,"nodeType":"IfStatement","src":"2214:105:16","trueBody":{"id":4514,"nodeType":"Block","src":"2245:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:16","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"2302:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4509,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"2266:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4513,"nodeType":"RevertStatement","src":"2259:49:16"}]}},{"expression":{"arguments":[{"id":4518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"2343:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4516,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:16","typeDescriptions":{}}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4501,"id":4520,"nodeType":"Return","src":"2328:21:16"}]},"documentation":{"id":4495,"nodeType":"StructuredDocumentation","src":"1853:280:16","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4522,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:16","nodeType":"FunctionDefinition","parameters":{"id":4498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4497,"mutability":"mutable","name":"value","nameLocation":"2165:5:16","nodeType":"VariableDeclaration","scope":4522,"src":"2157:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4496,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:16"},"returnParameters":{"id":4501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4522,"src":"2195:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4499,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:16","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:16"},"scope":6204,"src":"2138:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4549,"nodeType":"Block","src":"2713:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"2727:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4532,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4531,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:16","memberName":"max","nodeType":"MemberAccess","src":"2735:17:16","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4543,"nodeType":"IfStatement","src":"2723:105:16","trueBody":{"id":4542,"nodeType":"Block","src":"2754:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:16","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"2811:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4537,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"2775:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4541,"nodeType":"RevertStatement","src":"2768:49:16"}]}},{"expression":{"arguments":[{"id":4546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"2852:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4544,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:16","typeDescriptions":{}}},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4529,"id":4548,"nodeType":"Return","src":"2837:21:16"}]},"documentation":{"id":4523,"nodeType":"StructuredDocumentation","src":"2362:280:16","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4550,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:16","nodeType":"FunctionDefinition","parameters":{"id":4526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4525,"mutability":"mutable","name":"value","nameLocation":"2674:5:16","nodeType":"VariableDeclaration","scope":4550,"src":"2666:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4524,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:16"},"returnParameters":{"id":4529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4550,"src":"2704:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4527,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:16","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:16"},"scope":6204,"src":"2647:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4577,"nodeType":"Block","src":"3222:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"3236:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4560,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4559,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:16","memberName":"max","nodeType":"MemberAccess","src":"3244:17:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4571,"nodeType":"IfStatement","src":"3232:105:16","trueBody":{"id":4570,"nodeType":"Block","src":"3263:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:16","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"3320:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4565,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"3284:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4569,"nodeType":"RevertStatement","src":"3277:49:16"}]}},{"expression":{"arguments":[{"id":4574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"3361:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4572,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:16","typeDescriptions":{}}},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4557,"id":4576,"nodeType":"Return","src":"3346:21:16"}]},"documentation":{"id":4551,"nodeType":"StructuredDocumentation","src":"2871:280:16","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4578,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:16","nodeType":"FunctionDefinition","parameters":{"id":4554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4553,"mutability":"mutable","name":"value","nameLocation":"3183:5:16","nodeType":"VariableDeclaration","scope":4578,"src":"3175:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4552,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:16"},"returnParameters":{"id":4557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4578,"src":"3213:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4555,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:16"},"scope":6204,"src":"3156:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4605,"nodeType":"Block","src":"3731:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"3745:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4588,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4587,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:16","memberName":"max","nodeType":"MemberAccess","src":"3753:17:16","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4599,"nodeType":"IfStatement","src":"3741:105:16","trueBody":{"id":4598,"nodeType":"Block","src":"3772:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:16","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"3829:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4593,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"3793:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4597,"nodeType":"RevertStatement","src":"3786:49:16"}]}},{"expression":{"arguments":[{"id":4602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"3870:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4600,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:16","typeDescriptions":{}}},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4585,"id":4604,"nodeType":"Return","src":"3855:21:16"}]},"documentation":{"id":4579,"nodeType":"StructuredDocumentation","src":"3380:280:16","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4606,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:16","nodeType":"FunctionDefinition","parameters":{"id":4582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4581,"mutability":"mutable","name":"value","nameLocation":"3692:5:16","nodeType":"VariableDeclaration","scope":4606,"src":"3684:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4580,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:16"},"returnParameters":{"id":4585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4606,"src":"3722:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4583,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:16","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:16"},"scope":6204,"src":"3665:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4633,"nodeType":"Block","src":"4240:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"4254:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4616,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4615,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:16","memberName":"max","nodeType":"MemberAccess","src":"4262:17:16","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4627,"nodeType":"IfStatement","src":"4250:105:16","trueBody":{"id":4626,"nodeType":"Block","src":"4281:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:16","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"4338:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4621,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"4302:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4625,"nodeType":"RevertStatement","src":"4295:49:16"}]}},{"expression":{"arguments":[{"id":4630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"4379:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4628,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:16","typeDescriptions":{}}},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4613,"id":4632,"nodeType":"Return","src":"4364:21:16"}]},"documentation":{"id":4607,"nodeType":"StructuredDocumentation","src":"3889:280:16","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4634,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:16","nodeType":"FunctionDefinition","parameters":{"id":4610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4609,"mutability":"mutable","name":"value","nameLocation":"4201:5:16","nodeType":"VariableDeclaration","scope":4634,"src":"4193:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4608,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:16"},"returnParameters":{"id":4613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4634,"src":"4231:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4611,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:16","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:16"},"scope":6204,"src":"4174:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4661,"nodeType":"Block","src":"4749:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"4763:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4644,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4643,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:16","memberName":"max","nodeType":"MemberAccess","src":"4771:17:16","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4655,"nodeType":"IfStatement","src":"4759:105:16","trueBody":{"id":4654,"nodeType":"Block","src":"4790:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:16","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"4847:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4649,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"4811:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4653,"nodeType":"RevertStatement","src":"4804:49:16"}]}},{"expression":{"arguments":[{"id":4658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"4888:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4656,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:16","typeDescriptions":{}}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4641,"id":4660,"nodeType":"Return","src":"4873:21:16"}]},"documentation":{"id":4635,"nodeType":"StructuredDocumentation","src":"4398:280:16","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4662,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:16","nodeType":"FunctionDefinition","parameters":{"id":4638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4637,"mutability":"mutable","name":"value","nameLocation":"4710:5:16","nodeType":"VariableDeclaration","scope":4662,"src":"4702:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4636,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:16"},"returnParameters":{"id":4641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4662,"src":"4740:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4639,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:16","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:16"},"scope":6204,"src":"4683:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4689,"nodeType":"Block","src":"5258:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"5272:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4672,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4671,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:16","memberName":"max","nodeType":"MemberAccess","src":"5280:17:16","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4683,"nodeType":"IfStatement","src":"5268:105:16","trueBody":{"id":4682,"nodeType":"Block","src":"5299:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:16","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"5356:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4677,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"5320:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4681,"nodeType":"RevertStatement","src":"5313:49:16"}]}},{"expression":{"arguments":[{"id":4686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"5397:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4684,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:16","typeDescriptions":{}}},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4669,"id":4688,"nodeType":"Return","src":"5382:21:16"}]},"documentation":{"id":4663,"nodeType":"StructuredDocumentation","src":"4907:280:16","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4690,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:16","nodeType":"FunctionDefinition","parameters":{"id":4666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4665,"mutability":"mutable","name":"value","nameLocation":"5219:5:16","nodeType":"VariableDeclaration","scope":4690,"src":"5211:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4664,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:16"},"returnParameters":{"id":4669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4690,"src":"5249:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4667,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:16","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:16"},"scope":6204,"src":"5192:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4717,"nodeType":"Block","src":"5767:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"5781:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4700,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4699,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:16","memberName":"max","nodeType":"MemberAccess","src":"5789:17:16","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4711,"nodeType":"IfStatement","src":"5777:105:16","trueBody":{"id":4710,"nodeType":"Block","src":"5808:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:16","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"5865:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4705,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"5829:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4709,"nodeType":"RevertStatement","src":"5822:49:16"}]}},{"expression":{"arguments":[{"id":4714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"5906:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4712,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:16","typeDescriptions":{}}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4697,"id":4716,"nodeType":"Return","src":"5891:21:16"}]},"documentation":{"id":4691,"nodeType":"StructuredDocumentation","src":"5416:280:16","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4718,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:16","nodeType":"FunctionDefinition","parameters":{"id":4694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4693,"mutability":"mutable","name":"value","nameLocation":"5728:5:16","nodeType":"VariableDeclaration","scope":4718,"src":"5720:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4692,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:16"},"returnParameters":{"id":4697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4718,"src":"5758:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4695,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:16","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:16"},"scope":6204,"src":"5701:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4745,"nodeType":"Block","src":"6276:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"6290:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4728,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4727,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:16","memberName":"max","nodeType":"MemberAccess","src":"6298:17:16","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4739,"nodeType":"IfStatement","src":"6286:105:16","trueBody":{"id":4738,"nodeType":"Block","src":"6317:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:16","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"6374:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4733,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"6338:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4737,"nodeType":"RevertStatement","src":"6331:49:16"}]}},{"expression":{"arguments":[{"id":4742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"6415:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4740,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:16","typeDescriptions":{}}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4725,"id":4744,"nodeType":"Return","src":"6400:21:16"}]},"documentation":{"id":4719,"nodeType":"StructuredDocumentation","src":"5925:280:16","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4746,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:16","nodeType":"FunctionDefinition","parameters":{"id":4722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4721,"mutability":"mutable","name":"value","nameLocation":"6237:5:16","nodeType":"VariableDeclaration","scope":4746,"src":"6229:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4720,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:16"},"returnParameters":{"id":4725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4746,"src":"6267:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4723,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:16","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:16"},"scope":6204,"src":"6210:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4773,"nodeType":"Block","src":"6785:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"6799:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4756,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4755,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:16","memberName":"max","nodeType":"MemberAccess","src":"6807:17:16","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4767,"nodeType":"IfStatement","src":"6795:105:16","trueBody":{"id":4766,"nodeType":"Block","src":"6826:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:16","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"6883:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4761,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"6847:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4765,"nodeType":"RevertStatement","src":"6840:49:16"}]}},{"expression":{"arguments":[{"id":4770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"6924:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4768,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:16","typeDescriptions":{}}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4753,"id":4772,"nodeType":"Return","src":"6909:21:16"}]},"documentation":{"id":4747,"nodeType":"StructuredDocumentation","src":"6434:280:16","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4774,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:16","nodeType":"FunctionDefinition","parameters":{"id":4750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4749,"mutability":"mutable","name":"value","nameLocation":"6746:5:16","nodeType":"VariableDeclaration","scope":4774,"src":"6738:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4748,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:16"},"returnParameters":{"id":4753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4774,"src":"6776:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4751,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:16","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:16"},"scope":6204,"src":"6719:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4801,"nodeType":"Block","src":"7294:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"7308:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4784,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4783,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:16","memberName":"max","nodeType":"MemberAccess","src":"7316:17:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4795,"nodeType":"IfStatement","src":"7304:105:16","trueBody":{"id":4794,"nodeType":"Block","src":"7335:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"7392:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4789,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"7356:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4793,"nodeType":"RevertStatement","src":"7349:49:16"}]}},{"expression":{"arguments":[{"id":4798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"7433:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4796,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:16","typeDescriptions":{}}},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4781,"id":4800,"nodeType":"Return","src":"7418:21:16"}]},"documentation":{"id":4775,"nodeType":"StructuredDocumentation","src":"6943:280:16","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4802,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:16","nodeType":"FunctionDefinition","parameters":{"id":4778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4777,"mutability":"mutable","name":"value","nameLocation":"7255:5:16","nodeType":"VariableDeclaration","scope":4802,"src":"7247:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4776,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:16"},"returnParameters":{"id":4781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4802,"src":"7285:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4779,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:16"},"scope":6204,"src":"7228:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4829,"nodeType":"Block","src":"7803:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"7817:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4812,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4811,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:16","memberName":"max","nodeType":"MemberAccess","src":"7825:17:16","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4823,"nodeType":"IfStatement","src":"7813:105:16","trueBody":{"id":4822,"nodeType":"Block","src":"7844:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:16","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"7901:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4817,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"7865:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4821,"nodeType":"RevertStatement","src":"7858:49:16"}]}},{"expression":{"arguments":[{"id":4826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"7942:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4824,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:16","typeDescriptions":{}}},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4809,"id":4828,"nodeType":"Return","src":"7927:21:16"}]},"documentation":{"id":4803,"nodeType":"StructuredDocumentation","src":"7452:280:16","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4830,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:16","nodeType":"FunctionDefinition","parameters":{"id":4806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4805,"mutability":"mutable","name":"value","nameLocation":"7764:5:16","nodeType":"VariableDeclaration","scope":4830,"src":"7756:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4804,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:16"},"returnParameters":{"id":4809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4830,"src":"7794:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4807,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:16","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:16"},"scope":6204,"src":"7737:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4857,"nodeType":"Block","src":"8312:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"8326:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4840,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4839,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:16","memberName":"max","nodeType":"MemberAccess","src":"8334:17:16","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4851,"nodeType":"IfStatement","src":"8322:105:16","trueBody":{"id":4850,"nodeType":"Block","src":"8353:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:16","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"8410:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4845,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"8374:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4849,"nodeType":"RevertStatement","src":"8367:49:16"}]}},{"expression":{"arguments":[{"id":4854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"8451:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4852,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:16","typeDescriptions":{}}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4837,"id":4856,"nodeType":"Return","src":"8436:21:16"}]},"documentation":{"id":4831,"nodeType":"StructuredDocumentation","src":"7961:280:16","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4858,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:16","nodeType":"FunctionDefinition","parameters":{"id":4834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4833,"mutability":"mutable","name":"value","nameLocation":"8273:5:16","nodeType":"VariableDeclaration","scope":4858,"src":"8265:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4832,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:16"},"returnParameters":{"id":4837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4858,"src":"8303:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4835,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:16","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:16"},"scope":6204,"src":"8246:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4885,"nodeType":"Block","src":"8821:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"8835:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4868,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4867,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:16","memberName":"max","nodeType":"MemberAccess","src":"8843:17:16","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4879,"nodeType":"IfStatement","src":"8831:105:16","trueBody":{"id":4878,"nodeType":"Block","src":"8862:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:16","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"8919:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4873,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"8883:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4877,"nodeType":"RevertStatement","src":"8876:49:16"}]}},{"expression":{"arguments":[{"id":4882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"8960:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4880,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:16","typeDescriptions":{}}},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4865,"id":4884,"nodeType":"Return","src":"8945:21:16"}]},"documentation":{"id":4859,"nodeType":"StructuredDocumentation","src":"8470:280:16","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4886,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:16","nodeType":"FunctionDefinition","parameters":{"id":4862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4861,"mutability":"mutable","name":"value","nameLocation":"8782:5:16","nodeType":"VariableDeclaration","scope":4886,"src":"8774:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4860,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:16"},"returnParameters":{"id":4865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4886,"src":"8812:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4863,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:16","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:16"},"scope":6204,"src":"8755:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4913,"nodeType":"Block","src":"9330:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"9344:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4896,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4895,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:16","memberName":"max","nodeType":"MemberAccess","src":"9352:17:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4907,"nodeType":"IfStatement","src":"9340:105:16","trueBody":{"id":4906,"nodeType":"Block","src":"9371:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"9428:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4901,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"9392:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4905,"nodeType":"RevertStatement","src":"9385:49:16"}]}},{"expression":{"arguments":[{"id":4910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"9469:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4908,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:16","typeDescriptions":{}}},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4893,"id":4912,"nodeType":"Return","src":"9454:21:16"}]},"documentation":{"id":4887,"nodeType":"StructuredDocumentation","src":"8979:280:16","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4914,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:16","nodeType":"FunctionDefinition","parameters":{"id":4890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4889,"mutability":"mutable","name":"value","nameLocation":"9291:5:16","nodeType":"VariableDeclaration","scope":4914,"src":"9283:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4888,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:16"},"returnParameters":{"id":4893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4914,"src":"9321:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4891,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:16"},"scope":6204,"src":"9264:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4941,"nodeType":"Block","src":"9839:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"9853:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4924,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4923,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:16","memberName":"max","nodeType":"MemberAccess","src":"9861:17:16","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4935,"nodeType":"IfStatement","src":"9849:105:16","trueBody":{"id":4934,"nodeType":"Block","src":"9880:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:16","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"9937:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4929,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"9901:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4933,"nodeType":"RevertStatement","src":"9894:49:16"}]}},{"expression":{"arguments":[{"id":4938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"9978:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4936,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:16","typeDescriptions":{}}},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4921,"id":4940,"nodeType":"Return","src":"9963:21:16"}]},"documentation":{"id":4915,"nodeType":"StructuredDocumentation","src":"9488:280:16","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4942,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:16","nodeType":"FunctionDefinition","parameters":{"id":4918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4917,"mutability":"mutable","name":"value","nameLocation":"9800:5:16","nodeType":"VariableDeclaration","scope":4942,"src":"9792:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4916,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:16"},"returnParameters":{"id":4921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4942,"src":"9830:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4919,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:16","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:16"},"scope":6204,"src":"9773:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4969,"nodeType":"Block","src":"10348:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"10362:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4952,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4951,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:16","memberName":"max","nodeType":"MemberAccess","src":"10370:17:16","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4963,"nodeType":"IfStatement","src":"10358:105:16","trueBody":{"id":4962,"nodeType":"Block","src":"10389:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:16","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"10446:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4957,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"10410:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4961,"nodeType":"RevertStatement","src":"10403:49:16"}]}},{"expression":{"arguments":[{"id":4966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"10487:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4964,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:16","typeDescriptions":{}}},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4949,"id":4968,"nodeType":"Return","src":"10472:21:16"}]},"documentation":{"id":4943,"nodeType":"StructuredDocumentation","src":"9997:280:16","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4970,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:16","nodeType":"FunctionDefinition","parameters":{"id":4946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"mutability":"mutable","name":"value","nameLocation":"10309:5:16","nodeType":"VariableDeclaration","scope":4970,"src":"10301:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4944,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:16"},"returnParameters":{"id":4949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4970,"src":"10339:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4947,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:16","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:16"},"scope":6204,"src":"10282:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4997,"nodeType":"Block","src":"10857:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"10871:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4980,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4979,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:16","memberName":"max","nodeType":"MemberAccess","src":"10879:17:16","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4991,"nodeType":"IfStatement","src":"10867:105:16","trueBody":{"id":4990,"nodeType":"Block","src":"10898:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:16","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"10955:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4985,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"10919:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4989,"nodeType":"RevertStatement","src":"10912:49:16"}]}},{"expression":{"arguments":[{"id":4994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"10996:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4992,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:16","typeDescriptions":{}}},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4977,"id":4996,"nodeType":"Return","src":"10981:21:16"}]},"documentation":{"id":4971,"nodeType":"StructuredDocumentation","src":"10506:280:16","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4998,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:16","nodeType":"FunctionDefinition","parameters":{"id":4974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4973,"mutability":"mutable","name":"value","nameLocation":"10818:5:16","nodeType":"VariableDeclaration","scope":4998,"src":"10810:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4972,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:16"},"returnParameters":{"id":4977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4998,"src":"10848:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4975,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:16","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:16"},"scope":6204,"src":"10791:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5025,"nodeType":"Block","src":"11360:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"11374:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5008,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5007,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:16","memberName":"max","nodeType":"MemberAccess","src":"11382:16:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5019,"nodeType":"IfStatement","src":"11370:103:16","trueBody":{"id":5018,"nodeType":"Block","src":"11400:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"11456:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5013,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"11421:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5017,"nodeType":"RevertStatement","src":"11414:48:16"}]}},{"expression":{"arguments":[{"id":5022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"11496:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5020,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:16","typeDescriptions":{}}},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5005,"id":5024,"nodeType":"Return","src":"11482:20:16"}]},"documentation":{"id":4999,"nodeType":"StructuredDocumentation","src":"11015:276:16","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5026,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:16","nodeType":"FunctionDefinition","parameters":{"id":5002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5001,"mutability":"mutable","name":"value","nameLocation":"11322:5:16","nodeType":"VariableDeclaration","scope":5026,"src":"11314:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5000,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:16"},"returnParameters":{"id":5005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5026,"src":"11352:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5003,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:16"},"scope":6204,"src":"11296:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5053,"nodeType":"Block","src":"11860:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"11874:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5036,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5035,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:16","memberName":"max","nodeType":"MemberAccess","src":"11882:16:16","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5047,"nodeType":"IfStatement","src":"11870:103:16","trueBody":{"id":5046,"nodeType":"Block","src":"11900:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:16","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"11956:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5041,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"11921:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5045,"nodeType":"RevertStatement","src":"11914:48:16"}]}},{"expression":{"arguments":[{"id":5050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"11996:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5048,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:16","typeDescriptions":{}}},"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5033,"id":5052,"nodeType":"Return","src":"11982:20:16"}]},"documentation":{"id":5027,"nodeType":"StructuredDocumentation","src":"11515:276:16","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5054,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:16","nodeType":"FunctionDefinition","parameters":{"id":5030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5029,"mutability":"mutable","name":"value","nameLocation":"11822:5:16","nodeType":"VariableDeclaration","scope":5054,"src":"11814:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5028,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:16"},"returnParameters":{"id":5033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5054,"src":"11852:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5031,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:16","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:16"},"scope":6204,"src":"11796:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5081,"nodeType":"Block","src":"12360:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"12374:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5064,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5063,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:16","memberName":"max","nodeType":"MemberAccess","src":"12382:16:16","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5075,"nodeType":"IfStatement","src":"12370:103:16","trueBody":{"id":5074,"nodeType":"Block","src":"12400:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:16","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"12456:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5069,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"12421:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5073,"nodeType":"RevertStatement","src":"12414:48:16"}]}},{"expression":{"arguments":[{"id":5078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"12496:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5076,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:16","typeDescriptions":{}}},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5061,"id":5080,"nodeType":"Return","src":"12482:20:16"}]},"documentation":{"id":5055,"nodeType":"StructuredDocumentation","src":"12015:276:16","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5082,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:16","nodeType":"FunctionDefinition","parameters":{"id":5058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5057,"mutability":"mutable","name":"value","nameLocation":"12322:5:16","nodeType":"VariableDeclaration","scope":5082,"src":"12314:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5056,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:16"},"returnParameters":{"id":5061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5082,"src":"12352:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5059,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:16","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:16"},"scope":6204,"src":"12296:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5109,"nodeType":"Block","src":"12860:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"12874:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5092,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5091,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:16","memberName":"max","nodeType":"MemberAccess","src":"12882:16:16","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5103,"nodeType":"IfStatement","src":"12870:103:16","trueBody":{"id":5102,"nodeType":"Block","src":"12900:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:16","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"12956:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5097,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"12921:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5101,"nodeType":"RevertStatement","src":"12914:48:16"}]}},{"expression":{"arguments":[{"id":5106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"12996:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5104,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:16","typeDescriptions":{}}},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5089,"id":5108,"nodeType":"Return","src":"12982:20:16"}]},"documentation":{"id":5083,"nodeType":"StructuredDocumentation","src":"12515:276:16","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5110,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:16","nodeType":"FunctionDefinition","parameters":{"id":5086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5085,"mutability":"mutable","name":"value","nameLocation":"12822:5:16","nodeType":"VariableDeclaration","scope":5110,"src":"12814:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5084,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:16"},"returnParameters":{"id":5089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5110,"src":"12852:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5087,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:16","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:16"},"scope":6204,"src":"12796:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5137,"nodeType":"Block","src":"13360:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"13374:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5120,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5119,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:16","memberName":"max","nodeType":"MemberAccess","src":"13382:16:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5131,"nodeType":"IfStatement","src":"13370:103:16","trueBody":{"id":5130,"nodeType":"Block","src":"13400:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"13456:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5125,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"13421:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5129,"nodeType":"RevertStatement","src":"13414:48:16"}]}},{"expression":{"arguments":[{"id":5134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"13496:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5132,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:16","typeDescriptions":{}}},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5117,"id":5136,"nodeType":"Return","src":"13482:20:16"}]},"documentation":{"id":5111,"nodeType":"StructuredDocumentation","src":"13015:276:16","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5138,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:16","nodeType":"FunctionDefinition","parameters":{"id":5114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5113,"mutability":"mutable","name":"value","nameLocation":"13322:5:16","nodeType":"VariableDeclaration","scope":5138,"src":"13314:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5112,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:16"},"returnParameters":{"id":5117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5138,"src":"13352:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5115,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:16"},"scope":6204,"src":"13296:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5165,"nodeType":"Block","src":"13860:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"13874:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5148,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5147,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:16","memberName":"max","nodeType":"MemberAccess","src":"13882:16:16","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5159,"nodeType":"IfStatement","src":"13870:103:16","trueBody":{"id":5158,"nodeType":"Block","src":"13900:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:16","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"13956:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5153,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"13921:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5157,"nodeType":"RevertStatement","src":"13914:48:16"}]}},{"expression":{"arguments":[{"id":5162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"13996:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5160,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:16","typeDescriptions":{}}},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5145,"id":5164,"nodeType":"Return","src":"13982:20:16"}]},"documentation":{"id":5139,"nodeType":"StructuredDocumentation","src":"13515:276:16","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5166,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:16","nodeType":"FunctionDefinition","parameters":{"id":5142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5141,"mutability":"mutable","name":"value","nameLocation":"13822:5:16","nodeType":"VariableDeclaration","scope":5166,"src":"13814:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5140,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:16"},"returnParameters":{"id":5145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5166,"src":"13852:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5143,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:16","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:16"},"scope":6204,"src":"13796:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5193,"nodeType":"Block","src":"14360:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"14374:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5176,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5175,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:16","memberName":"max","nodeType":"MemberAccess","src":"14382:16:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5187,"nodeType":"IfStatement","src":"14370:103:16","trueBody":{"id":5186,"nodeType":"Block","src":"14400:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"14456:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5181,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"14421:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5185,"nodeType":"RevertStatement","src":"14414:48:16"}]}},{"expression":{"arguments":[{"id":5190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"14496:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5188,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:16","typeDescriptions":{}}},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5173,"id":5192,"nodeType":"Return","src":"14482:20:16"}]},"documentation":{"id":5167,"nodeType":"StructuredDocumentation","src":"14015:276:16","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5194,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:16","nodeType":"FunctionDefinition","parameters":{"id":5170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5169,"mutability":"mutable","name":"value","nameLocation":"14322:5:16","nodeType":"VariableDeclaration","scope":5194,"src":"14314:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5168,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:16"},"returnParameters":{"id":5173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5194,"src":"14352:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5171,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:16"},"scope":6204,"src":"14296:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5221,"nodeType":"Block","src":"14860:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"14874:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5204,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5203,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:16","memberName":"max","nodeType":"MemberAccess","src":"14882:16:16","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5215,"nodeType":"IfStatement","src":"14870:103:16","trueBody":{"id":5214,"nodeType":"Block","src":"14900:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:16","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"14956:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5209,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"14921:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5213,"nodeType":"RevertStatement","src":"14914:48:16"}]}},{"expression":{"arguments":[{"id":5218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"14996:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5216,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:16","typeDescriptions":{}}},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5201,"id":5220,"nodeType":"Return","src":"14982:20:16"}]},"documentation":{"id":5195,"nodeType":"StructuredDocumentation","src":"14515:276:16","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5222,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:16","nodeType":"FunctionDefinition","parameters":{"id":5198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5197,"mutability":"mutable","name":"value","nameLocation":"14822:5:16","nodeType":"VariableDeclaration","scope":5222,"src":"14814:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5196,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:16"},"returnParameters":{"id":5201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5222,"src":"14852:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5199,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:16","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:16"},"scope":6204,"src":"14796:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5249,"nodeType":"Block","src":"15360:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"15374:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5232,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5231,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:16","memberName":"max","nodeType":"MemberAccess","src":"15382:16:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5243,"nodeType":"IfStatement","src":"15370:103:16","trueBody":{"id":5242,"nodeType":"Block","src":"15400:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"15456:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5237,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"15421:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5241,"nodeType":"RevertStatement","src":"15414:48:16"}]}},{"expression":{"arguments":[{"id":5246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"15496:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5244,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:16","typeDescriptions":{}}},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5229,"id":5248,"nodeType":"Return","src":"15482:20:16"}]},"documentation":{"id":5223,"nodeType":"StructuredDocumentation","src":"15015:276:16","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5250,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:16","nodeType":"FunctionDefinition","parameters":{"id":5226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5225,"mutability":"mutable","name":"value","nameLocation":"15322:5:16","nodeType":"VariableDeclaration","scope":5250,"src":"15314:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5224,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:16"},"returnParameters":{"id":5229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5250,"src":"15352:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5227,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:16"},"scope":6204,"src":"15296:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5277,"nodeType":"Block","src":"15860:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"15874:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5260,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5259,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:16","memberName":"max","nodeType":"MemberAccess","src":"15882:16:16","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5271,"nodeType":"IfStatement","src":"15870:103:16","trueBody":{"id":5270,"nodeType":"Block","src":"15900:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:16","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"15956:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5265,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"15921:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5269,"nodeType":"RevertStatement","src":"15914:48:16"}]}},{"expression":{"arguments":[{"id":5274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"15996:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5272,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:16","typeDescriptions":{}}},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5257,"id":5276,"nodeType":"Return","src":"15982:20:16"}]},"documentation":{"id":5251,"nodeType":"StructuredDocumentation","src":"15515:276:16","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5278,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:16","nodeType":"FunctionDefinition","parameters":{"id":5254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5253,"mutability":"mutable","name":"value","nameLocation":"15822:5:16","nodeType":"VariableDeclaration","scope":5278,"src":"15814:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5252,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:16"},"returnParameters":{"id":5257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5278,"src":"15852:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5255,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:16","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:16"},"scope":6204,"src":"15796:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5305,"nodeType":"Block","src":"16360:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"16374:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5288,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5287,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:16","memberName":"max","nodeType":"MemberAccess","src":"16382:16:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5299,"nodeType":"IfStatement","src":"16370:103:16","trueBody":{"id":5298,"nodeType":"Block","src":"16400:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"16456:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5293,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"16421:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5297,"nodeType":"RevertStatement","src":"16414:48:16"}]}},{"expression":{"arguments":[{"id":5302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"16496:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5300,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:16","typeDescriptions":{}}},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5285,"id":5304,"nodeType":"Return","src":"16482:20:16"}]},"documentation":{"id":5279,"nodeType":"StructuredDocumentation","src":"16015:276:16","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5306,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:16","nodeType":"FunctionDefinition","parameters":{"id":5282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5281,"mutability":"mutable","name":"value","nameLocation":"16322:5:16","nodeType":"VariableDeclaration","scope":5306,"src":"16314:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5280,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:16"},"returnParameters":{"id":5285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5306,"src":"16352:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5283,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:16"},"scope":6204,"src":"16296:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5333,"nodeType":"Block","src":"16854:146:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"16868:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5316,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5315,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:16","memberName":"max","nodeType":"MemberAccess","src":"16876:15:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5327,"nodeType":"IfStatement","src":"16864:101:16","trueBody":{"id":5326,"nodeType":"Block","src":"16893:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"16948:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5321,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"16914:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5325,"nodeType":"RevertStatement","src":"16907:47:16"}]}},{"expression":{"arguments":[{"id":5330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"16987:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5328,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:16","typeDescriptions":{}}},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5313,"id":5332,"nodeType":"Return","src":"16974:19:16"}]},"documentation":{"id":5307,"nodeType":"StructuredDocumentation","src":"16515:272:16","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5334,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:16","nodeType":"FunctionDefinition","parameters":{"id":5310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5309,"mutability":"mutable","name":"value","nameLocation":"16817:5:16","nodeType":"VariableDeclaration","scope":5334,"src":"16809:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5308,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:16"},"returnParameters":{"id":5313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5334,"src":"16847:5:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5311,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:16"},"scope":6204,"src":"16792:208:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5356,"nodeType":"Block","src":"17236:128:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"17250:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5350,"nodeType":"IfStatement","src":"17246:81:16","trueBody":{"id":5349,"nodeType":"Block","src":"17261:66:16","statements":[{"errorCall":{"arguments":[{"id":5346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"17310:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5345,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"17282:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5348,"nodeType":"RevertStatement","src":"17275:41:16"}]}},{"expression":{"arguments":[{"id":5353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"17351:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5351,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:16","typeDescriptions":{}}},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5341,"id":5355,"nodeType":"Return","src":"17336:21:16"}]},"documentation":{"id":5335,"nodeType":"StructuredDocumentation","src":"17006:160:16","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5357,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:16","nodeType":"FunctionDefinition","parameters":{"id":5338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5337,"mutability":"mutable","name":"value","nameLocation":"17197:5:16","nodeType":"VariableDeclaration","scope":5357,"src":"17190:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5336,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:16"},"returnParameters":{"id":5341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5357,"src":"17227:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5339,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:16"},"scope":6204,"src":"17171:193:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5382,"nodeType":"Block","src":"17761:150:16","statements":[{"expression":{"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5365,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"17771:10:16","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"17791:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5366,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:16","typeDescriptions":{}}},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:16","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5371,"nodeType":"ExpressionStatement","src":"17771:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5372,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"17811:10:16","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"17825:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5381,"nodeType":"IfStatement","src":"17807:98:16","trueBody":{"id":5380,"nodeType":"Block","src":"17832:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:16","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"17888:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5375,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"17853:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5379,"nodeType":"RevertStatement","src":"17846:48:16"}]}}]},"documentation":{"id":5358,"nodeType":"StructuredDocumentation","src":"17370:312:16","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5383,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:16","nodeType":"FunctionDefinition","parameters":{"id":5361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5360,"mutability":"mutable","name":"value","nameLocation":"17712:5:16","nodeType":"VariableDeclaration","scope":5383,"src":"17705:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5359,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:16"},"returnParameters":{"id":5364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5363,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:16","nodeType":"VariableDeclaration","scope":5383,"src":"17742:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5362,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:16","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:16"},"scope":6204,"src":"17687:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5408,"nodeType":"Block","src":"18308:150:16","statements":[{"expression":{"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5391,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"18318:10:16","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"18338:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5392,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:16","typeDescriptions":{}}},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:16","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5397,"nodeType":"ExpressionStatement","src":"18318:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5398,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"18358:10:16","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"18372:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5407,"nodeType":"IfStatement","src":"18354:98:16","trueBody":{"id":5406,"nodeType":"Block","src":"18379:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:16","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"18435:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5401,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"18400:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5405,"nodeType":"RevertStatement","src":"18393:48:16"}]}}]},"documentation":{"id":5384,"nodeType":"StructuredDocumentation","src":"17917:312:16","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5409,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:16","nodeType":"FunctionDefinition","parameters":{"id":5387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5386,"mutability":"mutable","name":"value","nameLocation":"18259:5:16","nodeType":"VariableDeclaration","scope":5409,"src":"18252:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5385,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:16"},"returnParameters":{"id":5390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5389,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:16","nodeType":"VariableDeclaration","scope":5409,"src":"18289:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5388,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:16","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:16"},"scope":6204,"src":"18234:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5434,"nodeType":"Block","src":"18855:150:16","statements":[{"expression":{"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5417,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"18865:10:16","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"18885:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5418,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:16","typeDescriptions":{}}},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:16","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5423,"nodeType":"ExpressionStatement","src":"18865:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5424,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"18905:10:16","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"18919:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5433,"nodeType":"IfStatement","src":"18901:98:16","trueBody":{"id":5432,"nodeType":"Block","src":"18926:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:16","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"18982:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5427,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"18947:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5431,"nodeType":"RevertStatement","src":"18940:48:16"}]}}]},"documentation":{"id":5410,"nodeType":"StructuredDocumentation","src":"18464:312:16","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5435,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:16","nodeType":"FunctionDefinition","parameters":{"id":5413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5412,"mutability":"mutable","name":"value","nameLocation":"18806:5:16","nodeType":"VariableDeclaration","scope":5435,"src":"18799:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5411,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:16"},"returnParameters":{"id":5416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5415,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:16","nodeType":"VariableDeclaration","scope":5435,"src":"18836:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5414,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:16","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:16"},"scope":6204,"src":"18781:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5460,"nodeType":"Block","src":"19402:150:16","statements":[{"expression":{"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5443,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"19412:10:16","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"19432:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5444,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:16","typeDescriptions":{}}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:16","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5449,"nodeType":"ExpressionStatement","src":"19412:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5450,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"19452:10:16","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"19466:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5459,"nodeType":"IfStatement","src":"19448:98:16","trueBody":{"id":5458,"nodeType":"Block","src":"19473:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:16","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"19529:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5453,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"19494:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5457,"nodeType":"RevertStatement","src":"19487:48:16"}]}}]},"documentation":{"id":5436,"nodeType":"StructuredDocumentation","src":"19011:312:16","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5461,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:16","nodeType":"FunctionDefinition","parameters":{"id":5439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5438,"mutability":"mutable","name":"value","nameLocation":"19353:5:16","nodeType":"VariableDeclaration","scope":5461,"src":"19346:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5437,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:16"},"returnParameters":{"id":5442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5441,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:16","nodeType":"VariableDeclaration","scope":5461,"src":"19383:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5440,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:16","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:16"},"scope":6204,"src":"19328:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5486,"nodeType":"Block","src":"19949:150:16","statements":[{"expression":{"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5469,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"19959:10:16","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"19979:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5470,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:16","typeDescriptions":{}}},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:16","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5475,"nodeType":"ExpressionStatement","src":"19959:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5476,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"19999:10:16","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"20013:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5485,"nodeType":"IfStatement","src":"19995:98:16","trueBody":{"id":5484,"nodeType":"Block","src":"20020:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:16","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"20076:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5479,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"20041:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5483,"nodeType":"RevertStatement","src":"20034:48:16"}]}}]},"documentation":{"id":5462,"nodeType":"StructuredDocumentation","src":"19558:312:16","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5487,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:16","nodeType":"FunctionDefinition","parameters":{"id":5465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5464,"mutability":"mutable","name":"value","nameLocation":"19900:5:16","nodeType":"VariableDeclaration","scope":5487,"src":"19893:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5463,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:16"},"returnParameters":{"id":5468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5467,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:16","nodeType":"VariableDeclaration","scope":5487,"src":"19930:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5466,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:16","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:16"},"scope":6204,"src":"19875:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5512,"nodeType":"Block","src":"20496:150:16","statements":[{"expression":{"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5495,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"20506:10:16","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"20526:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5496,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:16","typeDescriptions":{}}},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:16","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5501,"nodeType":"ExpressionStatement","src":"20506:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5502,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"20546:10:16","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"20560:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5511,"nodeType":"IfStatement","src":"20542:98:16","trueBody":{"id":5510,"nodeType":"Block","src":"20567:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:16","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"20623:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5505,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"20588:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5509,"nodeType":"RevertStatement","src":"20581:48:16"}]}}]},"documentation":{"id":5488,"nodeType":"StructuredDocumentation","src":"20105:312:16","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5513,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:16","nodeType":"FunctionDefinition","parameters":{"id":5491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5490,"mutability":"mutable","name":"value","nameLocation":"20447:5:16","nodeType":"VariableDeclaration","scope":5513,"src":"20440:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5489,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:16"},"returnParameters":{"id":5494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5493,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:16","nodeType":"VariableDeclaration","scope":5513,"src":"20477:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5492,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:16","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:16"},"scope":6204,"src":"20422:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5538,"nodeType":"Block","src":"21043:150:16","statements":[{"expression":{"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5521,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"21053:10:16","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"21073:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5522,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:16","typeDescriptions":{}}},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:16","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5527,"nodeType":"ExpressionStatement","src":"21053:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5528,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"21093:10:16","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"21107:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5537,"nodeType":"IfStatement","src":"21089:98:16","trueBody":{"id":5536,"nodeType":"Block","src":"21114:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:16","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"21170:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5531,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"21135:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5535,"nodeType":"RevertStatement","src":"21128:48:16"}]}}]},"documentation":{"id":5514,"nodeType":"StructuredDocumentation","src":"20652:312:16","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5539,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:16","nodeType":"FunctionDefinition","parameters":{"id":5517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5516,"mutability":"mutable","name":"value","nameLocation":"20994:5:16","nodeType":"VariableDeclaration","scope":5539,"src":"20987:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5515,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:16"},"returnParameters":{"id":5520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5519,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:16","nodeType":"VariableDeclaration","scope":5539,"src":"21024:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5518,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:16","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:16"},"scope":6204,"src":"20969:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5564,"nodeType":"Block","src":"21590:150:16","statements":[{"expression":{"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5547,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"21600:10:16","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"21620:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5548,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:16","typeDescriptions":{}}},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:16","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5553,"nodeType":"ExpressionStatement","src":"21600:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5554,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"21640:10:16","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"21654:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5563,"nodeType":"IfStatement","src":"21636:98:16","trueBody":{"id":5562,"nodeType":"Block","src":"21661:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:16","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"21717:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5557,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"21682:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5561,"nodeType":"RevertStatement","src":"21675:48:16"}]}}]},"documentation":{"id":5540,"nodeType":"StructuredDocumentation","src":"21199:312:16","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5565,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:16","nodeType":"FunctionDefinition","parameters":{"id":5543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5542,"mutability":"mutable","name":"value","nameLocation":"21541:5:16","nodeType":"VariableDeclaration","scope":5565,"src":"21534:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5541,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:16"},"returnParameters":{"id":5546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5545,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:16","nodeType":"VariableDeclaration","scope":5565,"src":"21571:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5544,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:16","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:16"},"scope":6204,"src":"21516:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5590,"nodeType":"Block","src":"22137:150:16","statements":[{"expression":{"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5573,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"22147:10:16","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"22167:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5574,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:16","typeDescriptions":{}}},"id":5577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:16","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5579,"nodeType":"ExpressionStatement","src":"22147:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5580,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"22187:10:16","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"22201:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5589,"nodeType":"IfStatement","src":"22183:98:16","trueBody":{"id":5588,"nodeType":"Block","src":"22208:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:16","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"22264:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5583,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"22229:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5587,"nodeType":"RevertStatement","src":"22222:48:16"}]}}]},"documentation":{"id":5566,"nodeType":"StructuredDocumentation","src":"21746:312:16","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5591,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:16","nodeType":"FunctionDefinition","parameters":{"id":5569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5568,"mutability":"mutable","name":"value","nameLocation":"22088:5:16","nodeType":"VariableDeclaration","scope":5591,"src":"22081:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5567,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:16"},"returnParameters":{"id":5572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5571,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:16","nodeType":"VariableDeclaration","scope":5591,"src":"22118:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5570,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:16","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:16"},"scope":6204,"src":"22063:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5616,"nodeType":"Block","src":"22684:150:16","statements":[{"expression":{"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5599,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"22694:10:16","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"22714:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5600,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:16","typeDescriptions":{}}},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:16","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5605,"nodeType":"ExpressionStatement","src":"22694:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5606,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"22734:10:16","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"22748:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5615,"nodeType":"IfStatement","src":"22730:98:16","trueBody":{"id":5614,"nodeType":"Block","src":"22755:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:16","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"22811:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5609,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"22776:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5613,"nodeType":"RevertStatement","src":"22769:48:16"}]}}]},"documentation":{"id":5592,"nodeType":"StructuredDocumentation","src":"22293:312:16","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5617,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:16","nodeType":"FunctionDefinition","parameters":{"id":5595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5594,"mutability":"mutable","name":"value","nameLocation":"22635:5:16","nodeType":"VariableDeclaration","scope":5617,"src":"22628:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5593,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:16"},"returnParameters":{"id":5598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5597,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:16","nodeType":"VariableDeclaration","scope":5617,"src":"22665:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5596,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:16","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:16"},"scope":6204,"src":"22610:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5642,"nodeType":"Block","src":"23231:150:16","statements":[{"expression":{"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5625,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"23241:10:16","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"23261:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5626,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:16","typeDescriptions":{}}},"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:16","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5631,"nodeType":"ExpressionStatement","src":"23241:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5632,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"23281:10:16","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"23295:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5641,"nodeType":"IfStatement","src":"23277:98:16","trueBody":{"id":5640,"nodeType":"Block","src":"23302:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:16","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"23358:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5635,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"23323:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5639,"nodeType":"RevertStatement","src":"23316:48:16"}]}}]},"documentation":{"id":5618,"nodeType":"StructuredDocumentation","src":"22840:312:16","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5643,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:16","nodeType":"FunctionDefinition","parameters":{"id":5621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5620,"mutability":"mutable","name":"value","nameLocation":"23182:5:16","nodeType":"VariableDeclaration","scope":5643,"src":"23175:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5619,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:16"},"returnParameters":{"id":5624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5623,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:16","nodeType":"VariableDeclaration","scope":5643,"src":"23212:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5622,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:16","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:16"},"scope":6204,"src":"23157:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5668,"nodeType":"Block","src":"23778:150:16","statements":[{"expression":{"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5651,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5649,"src":"23788:10:16","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"23808:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5652,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:16","typeDescriptions":{}}},"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:16","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5657,"nodeType":"ExpressionStatement","src":"23788:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5658,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5649,"src":"23828:10:16","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"23842:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5667,"nodeType":"IfStatement","src":"23824:98:16","trueBody":{"id":5666,"nodeType":"Block","src":"23849:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"23905:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5661,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"23870:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5665,"nodeType":"RevertStatement","src":"23863:48:16"}]}}]},"documentation":{"id":5644,"nodeType":"StructuredDocumentation","src":"23387:312:16","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5669,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:16","nodeType":"FunctionDefinition","parameters":{"id":5647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5646,"mutability":"mutable","name":"value","nameLocation":"23729:5:16","nodeType":"VariableDeclaration","scope":5669,"src":"23722:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5645,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:16"},"returnParameters":{"id":5650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5649,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:16","nodeType":"VariableDeclaration","scope":5669,"src":"23759:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5648,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:16","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:16"},"scope":6204,"src":"23704:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5694,"nodeType":"Block","src":"24325:150:16","statements":[{"expression":{"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5677,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5675,"src":"24335:10:16","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"24355:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5678,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:16","typeDescriptions":{}}},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:16","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5683,"nodeType":"ExpressionStatement","src":"24335:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5684,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5675,"src":"24375:10:16","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"24389:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5693,"nodeType":"IfStatement","src":"24371:98:16","trueBody":{"id":5692,"nodeType":"Block","src":"24396:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:16","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"24452:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5687,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"24417:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5691,"nodeType":"RevertStatement","src":"24410:48:16"}]}}]},"documentation":{"id":5670,"nodeType":"StructuredDocumentation","src":"23934:312:16","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5695,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:16","nodeType":"FunctionDefinition","parameters":{"id":5673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5672,"mutability":"mutable","name":"value","nameLocation":"24276:5:16","nodeType":"VariableDeclaration","scope":5695,"src":"24269:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5671,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:16"},"returnParameters":{"id":5676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5675,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:16","nodeType":"VariableDeclaration","scope":5695,"src":"24306:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5674,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:16","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:16"},"scope":6204,"src":"24251:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5720,"nodeType":"Block","src":"24872:150:16","statements":[{"expression":{"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5703,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"24882:10:16","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"24902:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5704,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:16","typeDescriptions":{}}},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:16","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5709,"nodeType":"ExpressionStatement","src":"24882:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5710,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"24922:10:16","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"24936:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5719,"nodeType":"IfStatement","src":"24918:98:16","trueBody":{"id":5718,"nodeType":"Block","src":"24943:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:16","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"24999:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5713,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"24964:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5717,"nodeType":"RevertStatement","src":"24957:48:16"}]}}]},"documentation":{"id":5696,"nodeType":"StructuredDocumentation","src":"24481:312:16","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5721,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:16","nodeType":"FunctionDefinition","parameters":{"id":5699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5698,"mutability":"mutable","name":"value","nameLocation":"24823:5:16","nodeType":"VariableDeclaration","scope":5721,"src":"24816:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5697,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:16"},"returnParameters":{"id":5702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5701,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:16","nodeType":"VariableDeclaration","scope":5721,"src":"24853:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5700,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:16","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:16"},"scope":6204,"src":"24798:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5746,"nodeType":"Block","src":"25419:150:16","statements":[{"expression":{"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5729,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"25429:10:16","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"25449:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5730,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:16","typeDescriptions":{}}},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:16","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5735,"nodeType":"ExpressionStatement","src":"25429:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5736,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"25469:10:16","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"25483:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5745,"nodeType":"IfStatement","src":"25465:98:16","trueBody":{"id":5744,"nodeType":"Block","src":"25490:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:16","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"25546:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5739,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"25511:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5743,"nodeType":"RevertStatement","src":"25504:48:16"}]}}]},"documentation":{"id":5722,"nodeType":"StructuredDocumentation","src":"25028:312:16","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5747,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:16","nodeType":"FunctionDefinition","parameters":{"id":5725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5724,"mutability":"mutable","name":"value","nameLocation":"25370:5:16","nodeType":"VariableDeclaration","scope":5747,"src":"25363:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5723,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:16"},"returnParameters":{"id":5728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5727,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:16","nodeType":"VariableDeclaration","scope":5747,"src":"25400:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5726,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:16","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:16"},"scope":6204,"src":"25345:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5772,"nodeType":"Block","src":"25966:150:16","statements":[{"expression":{"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5755,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5753,"src":"25976:10:16","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"25996:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5756,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:16","typeDescriptions":{}}},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:16","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5761,"nodeType":"ExpressionStatement","src":"25976:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5762,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5753,"src":"26016:10:16","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"26030:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5771,"nodeType":"IfStatement","src":"26012:98:16","trueBody":{"id":5770,"nodeType":"Block","src":"26037:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"26093:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5765,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"26058:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5769,"nodeType":"RevertStatement","src":"26051:48:16"}]}}]},"documentation":{"id":5748,"nodeType":"StructuredDocumentation","src":"25575:312:16","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5773,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:16","nodeType":"FunctionDefinition","parameters":{"id":5751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5750,"mutability":"mutable","name":"value","nameLocation":"25917:5:16","nodeType":"VariableDeclaration","scope":5773,"src":"25910:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5749,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:16"},"returnParameters":{"id":5754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5753,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:16","nodeType":"VariableDeclaration","scope":5773,"src":"25947:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5752,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:16","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:16"},"scope":6204,"src":"25892:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5798,"nodeType":"Block","src":"26513:150:16","statements":[{"expression":{"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5781,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5779,"src":"26523:10:16","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"26543:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5782,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:16","typeDescriptions":{}}},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:16","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5787,"nodeType":"ExpressionStatement","src":"26523:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5788,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5779,"src":"26563:10:16","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"26577:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5797,"nodeType":"IfStatement","src":"26559:98:16","trueBody":{"id":5796,"nodeType":"Block","src":"26584:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:16","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"26640:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5791,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"26605:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5795,"nodeType":"RevertStatement","src":"26598:48:16"}]}}]},"documentation":{"id":5774,"nodeType":"StructuredDocumentation","src":"26122:312:16","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5799,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:16","nodeType":"FunctionDefinition","parameters":{"id":5777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5776,"mutability":"mutable","name":"value","nameLocation":"26464:5:16","nodeType":"VariableDeclaration","scope":5799,"src":"26457:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5775,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:16"},"returnParameters":{"id":5780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5779,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:16","nodeType":"VariableDeclaration","scope":5799,"src":"26494:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5778,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:16","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:16"},"scope":6204,"src":"26439:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5824,"nodeType":"Block","src":"27060:150:16","statements":[{"expression":{"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5807,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5805,"src":"27070:10:16","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"27090:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5808,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:16","typeDescriptions":{}}},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:16","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5813,"nodeType":"ExpressionStatement","src":"27070:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5814,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5805,"src":"27110:10:16","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"27124:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5823,"nodeType":"IfStatement","src":"27106:98:16","trueBody":{"id":5822,"nodeType":"Block","src":"27131:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:16","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"27187:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5817,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"27152:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5821,"nodeType":"RevertStatement","src":"27145:48:16"}]}}]},"documentation":{"id":5800,"nodeType":"StructuredDocumentation","src":"26669:312:16","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5825,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:16","nodeType":"FunctionDefinition","parameters":{"id":5803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5802,"mutability":"mutable","name":"value","nameLocation":"27011:5:16","nodeType":"VariableDeclaration","scope":5825,"src":"27004:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5801,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:16"},"returnParameters":{"id":5806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5805,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:16","nodeType":"VariableDeclaration","scope":5825,"src":"27041:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5804,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:16","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:16"},"scope":6204,"src":"26986:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5850,"nodeType":"Block","src":"27607:150:16","statements":[{"expression":{"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5833,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"27617:10:16","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"27637:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5834,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:16","typeDescriptions":{}}},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:16","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5839,"nodeType":"ExpressionStatement","src":"27617:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5840,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"27657:10:16","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"27671:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5849,"nodeType":"IfStatement","src":"27653:98:16","trueBody":{"id":5848,"nodeType":"Block","src":"27678:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:16","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"27734:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5843,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"27699:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5847,"nodeType":"RevertStatement","src":"27692:48:16"}]}}]},"documentation":{"id":5826,"nodeType":"StructuredDocumentation","src":"27216:312:16","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5851,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:16","nodeType":"FunctionDefinition","parameters":{"id":5829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5828,"mutability":"mutable","name":"value","nameLocation":"27558:5:16","nodeType":"VariableDeclaration","scope":5851,"src":"27551:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5827,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:16"},"returnParameters":{"id":5832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5831,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:16","nodeType":"VariableDeclaration","scope":5851,"src":"27588:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5830,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:16","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:16"},"scope":6204,"src":"27533:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5876,"nodeType":"Block","src":"28147:148:16","statements":[{"expression":{"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5859,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"28157:10:16","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"28176:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5860,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:16","typeDescriptions":{}}},"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:16","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5865,"nodeType":"ExpressionStatement","src":"28157:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5866,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"28196:10:16","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"28210:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5875,"nodeType":"IfStatement","src":"28192:97:16","trueBody":{"id":5874,"nodeType":"Block","src":"28217:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"28272:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5869,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"28238:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5873,"nodeType":"RevertStatement","src":"28231:47:16"}]}}]},"documentation":{"id":5852,"nodeType":"StructuredDocumentation","src":"27763:307:16","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5877,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:16","nodeType":"FunctionDefinition","parameters":{"id":5855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5854,"mutability":"mutable","name":"value","nameLocation":"28099:5:16","nodeType":"VariableDeclaration","scope":5877,"src":"28092:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5853,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:16"},"returnParameters":{"id":5858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5857,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:16","nodeType":"VariableDeclaration","scope":5877,"src":"28129:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5856,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:16","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:16"},"scope":6204,"src":"28075:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5902,"nodeType":"Block","src":"28685:148:16","statements":[{"expression":{"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5885,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5883,"src":"28695:10:16","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5880,"src":"28714:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5886,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:16","typeDescriptions":{}}},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:16","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5891,"nodeType":"ExpressionStatement","src":"28695:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5892,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5883,"src":"28734:10:16","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5880,"src":"28748:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5901,"nodeType":"IfStatement","src":"28730:97:16","trueBody":{"id":5900,"nodeType":"Block","src":"28755:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:16","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5880,"src":"28810:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5895,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"28776:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5899,"nodeType":"RevertStatement","src":"28769:47:16"}]}}]},"documentation":{"id":5878,"nodeType":"StructuredDocumentation","src":"28301:307:16","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5903,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:16","nodeType":"FunctionDefinition","parameters":{"id":5881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5880,"mutability":"mutable","name":"value","nameLocation":"28637:5:16","nodeType":"VariableDeclaration","scope":5903,"src":"28630:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5879,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:16"},"returnParameters":{"id":5884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5883,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:16","nodeType":"VariableDeclaration","scope":5903,"src":"28667:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5882,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:16","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:16"},"scope":6204,"src":"28613:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5928,"nodeType":"Block","src":"29223:148:16","statements":[{"expression":{"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5911,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"29233:10:16","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"29252:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5912,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:16","typeDescriptions":{}}},"id":5915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:16","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5917,"nodeType":"ExpressionStatement","src":"29233:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5918,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"29272:10:16","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"29286:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5927,"nodeType":"IfStatement","src":"29268:97:16","trueBody":{"id":5926,"nodeType":"Block","src":"29293:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:16","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"29348:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5921,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"29314:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5925,"nodeType":"RevertStatement","src":"29307:47:16"}]}}]},"documentation":{"id":5904,"nodeType":"StructuredDocumentation","src":"28839:307:16","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5929,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:16","nodeType":"FunctionDefinition","parameters":{"id":5907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5906,"mutability":"mutable","name":"value","nameLocation":"29175:5:16","nodeType":"VariableDeclaration","scope":5929,"src":"29168:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5905,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:16"},"returnParameters":{"id":5910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5909,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:16","nodeType":"VariableDeclaration","scope":5929,"src":"29205:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5908,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:16","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:16"},"scope":6204,"src":"29151:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5954,"nodeType":"Block","src":"29761:148:16","statements":[{"expression":{"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5937,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"29771:10:16","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"29790:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5938,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:16","typeDescriptions":{}}},"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:16","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5943,"nodeType":"ExpressionStatement","src":"29771:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5944,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"29810:10:16","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"29824:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5953,"nodeType":"IfStatement","src":"29806:97:16","trueBody":{"id":5952,"nodeType":"Block","src":"29831:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:16","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"29886:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5947,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"29852:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5951,"nodeType":"RevertStatement","src":"29845:47:16"}]}}]},"documentation":{"id":5930,"nodeType":"StructuredDocumentation","src":"29377:307:16","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5955,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:16","nodeType":"FunctionDefinition","parameters":{"id":5933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5932,"mutability":"mutable","name":"value","nameLocation":"29713:5:16","nodeType":"VariableDeclaration","scope":5955,"src":"29706:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5931,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:16"},"returnParameters":{"id":5936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5935,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:16","nodeType":"VariableDeclaration","scope":5955,"src":"29743:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5934,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:16","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:16"},"scope":6204,"src":"29689:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5980,"nodeType":"Block","src":"30299:148:16","statements":[{"expression":{"id":5968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5963,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"30309:10:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"30328:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5964,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:16","typeDescriptions":{}}},"id":5967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5969,"nodeType":"ExpressionStatement","src":"30309:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5970,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"30348:10:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"30362:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5979,"nodeType":"IfStatement","src":"30344:97:16","trueBody":{"id":5978,"nodeType":"Block","src":"30369:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"30424:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5973,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"30390:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5977,"nodeType":"RevertStatement","src":"30383:47:16"}]}}]},"documentation":{"id":5956,"nodeType":"StructuredDocumentation","src":"29915:307:16","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5981,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:16","nodeType":"FunctionDefinition","parameters":{"id":5959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5958,"mutability":"mutable","name":"value","nameLocation":"30251:5:16","nodeType":"VariableDeclaration","scope":5981,"src":"30244:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5957,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:16"},"returnParameters":{"id":5962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5961,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:16","nodeType":"VariableDeclaration","scope":5981,"src":"30281:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5960,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:16"},"scope":6204,"src":"30227:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6006,"nodeType":"Block","src":"30837:148:16","statements":[{"expression":{"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5989,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"30847:10:16","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5984,"src":"30866:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5990,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:16","typeDescriptions":{}}},"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:16","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5995,"nodeType":"ExpressionStatement","src":"30847:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5996,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"30886:10:16","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5984,"src":"30900:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6005,"nodeType":"IfStatement","src":"30882:97:16","trueBody":{"id":6004,"nodeType":"Block","src":"30907:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:16","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5984,"src":"30962:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5999,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"30928:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6003,"nodeType":"RevertStatement","src":"30921:47:16"}]}}]},"documentation":{"id":5982,"nodeType":"StructuredDocumentation","src":"30453:307:16","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6007,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:16","nodeType":"FunctionDefinition","parameters":{"id":5985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5984,"mutability":"mutable","name":"value","nameLocation":"30789:5:16","nodeType":"VariableDeclaration","scope":6007,"src":"30782:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5983,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:16"},"returnParameters":{"id":5988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5987,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:16","nodeType":"VariableDeclaration","scope":6007,"src":"30819:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5986,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:16","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:16"},"scope":6204,"src":"30765:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6032,"nodeType":"Block","src":"31375:148:16","statements":[{"expression":{"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6015,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"31385:10:16","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"31404:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6016,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:16","typeDescriptions":{}}},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:16","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6021,"nodeType":"ExpressionStatement","src":"31385:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6022,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"31424:10:16","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"31438:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6031,"nodeType":"IfStatement","src":"31420:97:16","trueBody":{"id":6030,"nodeType":"Block","src":"31445:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"31500:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6025,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"31466:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6029,"nodeType":"RevertStatement","src":"31459:47:16"}]}}]},"documentation":{"id":6008,"nodeType":"StructuredDocumentation","src":"30991:307:16","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6033,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:16","nodeType":"FunctionDefinition","parameters":{"id":6011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6010,"mutability":"mutable","name":"value","nameLocation":"31327:5:16","nodeType":"VariableDeclaration","scope":6033,"src":"31320:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6009,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:16"},"returnParameters":{"id":6014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6013,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:16","nodeType":"VariableDeclaration","scope":6033,"src":"31357:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6012,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:16","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:16"},"scope":6204,"src":"31303:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6058,"nodeType":"Block","src":"31913:148:16","statements":[{"expression":{"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6041,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6039,"src":"31923:10:16","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"31942:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6042,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:16","typeDescriptions":{}}},"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:16","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6047,"nodeType":"ExpressionStatement","src":"31923:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6048,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6039,"src":"31962:10:16","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"31976:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6057,"nodeType":"IfStatement","src":"31958:97:16","trueBody":{"id":6056,"nodeType":"Block","src":"31983:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:16","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"32038:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6051,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"32004:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6055,"nodeType":"RevertStatement","src":"31997:47:16"}]}}]},"documentation":{"id":6034,"nodeType":"StructuredDocumentation","src":"31529:307:16","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6059,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:16","nodeType":"FunctionDefinition","parameters":{"id":6037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6036,"mutability":"mutable","name":"value","nameLocation":"31865:5:16","nodeType":"VariableDeclaration","scope":6059,"src":"31858:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6035,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:16"},"returnParameters":{"id":6040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6039,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:16","nodeType":"VariableDeclaration","scope":6059,"src":"31895:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6038,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:16","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:16"},"scope":6204,"src":"31841:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6084,"nodeType":"Block","src":"32451:148:16","statements":[{"expression":{"id":6072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6067,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"32461:10:16","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"32480:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6068,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:16","typeDescriptions":{}}},"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:16","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6073,"nodeType":"ExpressionStatement","src":"32461:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6074,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"32500:10:16","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"32514:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6083,"nodeType":"IfStatement","src":"32496:97:16","trueBody":{"id":6082,"nodeType":"Block","src":"32521:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"32576:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6077,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"32542:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6081,"nodeType":"RevertStatement","src":"32535:47:16"}]}}]},"documentation":{"id":6060,"nodeType":"StructuredDocumentation","src":"32067:307:16","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6085,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:16","nodeType":"FunctionDefinition","parameters":{"id":6063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6062,"mutability":"mutable","name":"value","nameLocation":"32403:5:16","nodeType":"VariableDeclaration","scope":6085,"src":"32396:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6061,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:16"},"returnParameters":{"id":6066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6065,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:16","nodeType":"VariableDeclaration","scope":6085,"src":"32433:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6064,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:16","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:16"},"scope":6204,"src":"32379:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6110,"nodeType":"Block","src":"32989:148:16","statements":[{"expression":{"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6093,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6091,"src":"32999:10:16","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6088,"src":"33018:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6094,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:16","typeDescriptions":{}}},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:16","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6099,"nodeType":"ExpressionStatement","src":"32999:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6100,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6091,"src":"33038:10:16","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6088,"src":"33052:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6109,"nodeType":"IfStatement","src":"33034:97:16","trueBody":{"id":6108,"nodeType":"Block","src":"33059:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:16","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6088,"src":"33114:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6103,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"33080:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6107,"nodeType":"RevertStatement","src":"33073:47:16"}]}}]},"documentation":{"id":6086,"nodeType":"StructuredDocumentation","src":"32605:307:16","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6111,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:16","nodeType":"FunctionDefinition","parameters":{"id":6089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6088,"mutability":"mutable","name":"value","nameLocation":"32941:5:16","nodeType":"VariableDeclaration","scope":6111,"src":"32934:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6087,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:16"},"returnParameters":{"id":6092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6091,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:16","nodeType":"VariableDeclaration","scope":6111,"src":"32971:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6090,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:16","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:16"},"scope":6204,"src":"32917:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6136,"nodeType":"Block","src":"33527:148:16","statements":[{"expression":{"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6119,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"33537:10:16","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"33556:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6120,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:16","typeDescriptions":{}}},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:16","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6125,"nodeType":"ExpressionStatement","src":"33537:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6126,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"33576:10:16","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"33590:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6135,"nodeType":"IfStatement","src":"33572:97:16","trueBody":{"id":6134,"nodeType":"Block","src":"33597:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"33652:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6129,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"33618:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6133,"nodeType":"RevertStatement","src":"33611:47:16"}]}}]},"documentation":{"id":6112,"nodeType":"StructuredDocumentation","src":"33143:307:16","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6137,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:16","nodeType":"FunctionDefinition","parameters":{"id":6115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6114,"mutability":"mutable","name":"value","nameLocation":"33479:5:16","nodeType":"VariableDeclaration","scope":6137,"src":"33472:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6113,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:16"},"returnParameters":{"id":6118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6117,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:16","nodeType":"VariableDeclaration","scope":6137,"src":"33509:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6116,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:16","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:16"},"scope":6204,"src":"33455:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6162,"nodeType":"Block","src":"34058:146:16","statements":[{"expression":{"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6145,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"34068:10:16","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"34086:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6146,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:16","typeDescriptions":{}}},"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:16","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6151,"nodeType":"ExpressionStatement","src":"34068:24:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6152,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"34106:10:16","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"34120:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6161,"nodeType":"IfStatement","src":"34102:96:16","trueBody":{"id":6160,"nodeType":"Block","src":"34127:71:16","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"34181:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6155,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"34148:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6159,"nodeType":"RevertStatement","src":"34141:46:16"}]}}]},"documentation":{"id":6138,"nodeType":"StructuredDocumentation","src":"33681:302:16","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6163,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:16","nodeType":"FunctionDefinition","parameters":{"id":6141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6140,"mutability":"mutable","name":"value","nameLocation":"34011:5:16","nodeType":"VariableDeclaration","scope":6163,"src":"34004:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6139,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:16"},"returnParameters":{"id":6144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6143,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:16","nodeType":"VariableDeclaration","scope":6163,"src":"34041:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6142,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:16","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:16"},"scope":6204,"src":"33988:216:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6192,"nodeType":"Block","src":"34444:250:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"34557:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6175,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6174,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:16","memberName":"max","nodeType":"MemberAccess","src":"34573:16:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6172,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:16","typeDescriptions":{}}},"id":6179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6186,"nodeType":"IfStatement","src":"34553:105:16","trueBody":{"id":6185,"nodeType":"Block","src":"34592:66:16","statements":[{"errorCall":{"arguments":[{"id":6182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"34641:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6181,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"34613:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6184,"nodeType":"RevertStatement","src":"34606:41:16"}]}},{"expression":{"arguments":[{"id":6189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"34681:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6187,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:16","typeDescriptions":{}}},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6170,"id":6191,"nodeType":"Return","src":"34667:20:16"}]},"documentation":{"id":6164,"nodeType":"StructuredDocumentation","src":"34210:165:16","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6193,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:16","nodeType":"FunctionDefinition","parameters":{"id":6167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6166,"mutability":"mutable","name":"value","nameLocation":"34406:5:16","nodeType":"VariableDeclaration","scope":6193,"src":"34398:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6165,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:16"},"returnParameters":{"id":6170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6193,"src":"34436:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6168,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:16"},"scope":6204,"src":"34380:314:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6202,"nodeType":"Block","src":"34853:87:16","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:16","statements":[{"nodeType":"YulAssignment","src":"34902:22:16","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:16"},"nodeType":"YulFunctionCall","src":"34914:9:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:16"},"nodeType":"YulFunctionCall","src":"34907:17:16"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6196,"isOffset":false,"isSlot":false,"src":"34921:1:16","valueSize":1},{"declaration":6199,"isOffset":false,"isSlot":false,"src":"34902:1:16","valueSize":1}],"flags":["memory-safe"],"id":6201,"nodeType":"InlineAssembly","src":"34863:71:16"}]},"documentation":{"id":6194,"nodeType":"StructuredDocumentation","src":"34700:90:16","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6203,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:16","nodeType":"FunctionDefinition","parameters":{"id":6197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6196,"mutability":"mutable","name":"b","nameLocation":"34816:1:16","nodeType":"VariableDeclaration","scope":6203,"src":"34811:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6195,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:16"},"returnParameters":{"id":6200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6199,"mutability":"mutable","name":"u","nameLocation":"34850:1:16","nodeType":"VariableDeclaration","scope":6203,"src":"34842:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6198,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:16"},"scope":6204,"src":"34795:145:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6205,"src":"769:34173:16","usedErrors":[4449,4454,4461,4466],"usedEvents":[]}],"src":"192:34751:16"},"id":16},"contracts/content/ReaderLicenseAMM.sol":{"ast":{"absolutePath":"contracts/content/ReaderLicenseAMM.sol","exportedSymbols":{"Arrays":[2414],"Context":[2476],"ERC1155":[1201],"ERC1155Utils":[1536],"ERC165":[2806],"IERC1155":[1324],"IERC1155Errors":[284],"IERC1155MetadataURI":[1382],"IERC165":[2818],"IEncryptedArticles":[6250],"Ownable":[147],"ReaderLicenseAMM":[7353]},"id":7354,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6206,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":6207,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7354,"sourceUnit":1202,"src":"58:59:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6208,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7354,"sourceUnit":148,"src":"118:52:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IEncryptedArticles","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6250,"linearizedBaseContracts":[6250],"name":"IEncryptedArticles","nameLocation":"182:18:17","nodeType":"ContractDefinition","nodes":[{"functionSelector":"edcfafe6","id":6241,"implemented":false,"kind":"function","modifiers":[],"name":"articles","nameLocation":"309:8:17","nodeType":"FunctionDefinition","parameters":{"id":6211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6210,"mutability":"mutable","name":"articleId","nameLocation":"326:9:17","nodeType":"VariableDeclaration","scope":6241,"src":"318:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6209,"name":"uint256","nodeType":"ElementaryTypeName","src":"318:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"317:19:17"},"returnParameters":{"id":6240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6213,"mutability":"mutable","name":"id","nameLocation":"377:2:17","nodeType":"VariableDeclaration","scope":6241,"src":"369:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6212,"name":"uint256","nodeType":"ElementaryTypeName","src":"369:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6215,"mutability":"mutable","name":"title","nameLocation":"427:5:17","nodeType":"VariableDeclaration","scope":6241,"src":"413:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6214,"name":"string","nodeType":"ElementaryTypeName","src":"413:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6217,"mutability":"mutable","name":"encryptedContent","nameLocation":"471:16:17","nodeType":"VariableDeclaration","scope":6241,"src":"457:30:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6216,"name":"string","nodeType":"ElementaryTypeName","src":"457:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6219,"mutability":"mutable","name":"summary","nameLocation":"515:7:17","nodeType":"VariableDeclaration","scope":6241,"src":"501:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6218,"name":"string","nodeType":"ElementaryTypeName","src":"501:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6221,"mutability":"mutable","name":"author","nameLocation":"553:6:17","nodeType":"VariableDeclaration","scope":6241,"src":"545:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6220,"name":"address","nodeType":"ElementaryTypeName","src":"545:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6223,"mutability":"mutable","name":"location","nameLocation":"603:8:17","nodeType":"VariableDeclaration","scope":6241,"src":"589:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6222,"name":"string","nodeType":"ElementaryTypeName","src":"589:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6225,"mutability":"mutable","name":"category","nameLocation":"647:8:17","nodeType":"VariableDeclaration","scope":6241,"src":"633:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6224,"name":"string","nodeType":"ElementaryTypeName","src":"633:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6227,"mutability":"mutable","name":"publishedAt","nameLocation":"685:11:17","nodeType":"VariableDeclaration","scope":6241,"src":"677:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6226,"name":"uint256","nodeType":"ElementaryTypeName","src":"677:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6229,"mutability":"mutable","name":"nftCount","nameLocation":"728:8:17","nodeType":"VariableDeclaration","scope":6241,"src":"720:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6228,"name":"uint256","nodeType":"ElementaryTypeName","src":"720:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6231,"mutability":"mutable","name":"nftPrice","nameLocation":"789:8:17","nodeType":"VariableDeclaration","scope":6241,"src":"781:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6230,"name":"uint256","nodeType":"ElementaryTypeName","src":"781:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6233,"mutability":"mutable","name":"journalistRetained","nameLocation":"833:18:17","nodeType":"VariableDeclaration","scope":6241,"src":"825:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6232,"name":"uint256","nodeType":"ElementaryTypeName","src":"825:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6235,"mutability":"mutable","name":"readerLicenseRatio","nameLocation":"877:18:17","nodeType":"VariableDeclaration","scope":6241,"src":"869:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6234,"name":"uint256","nodeType":"ElementaryTypeName","src":"869:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6237,"mutability":"mutable","name":"creationSource","nameLocation":"936:14:17","nodeType":"VariableDeclaration","scope":6241,"src":"930:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6236,"name":"uint8","nodeType":"ElementaryTypeName","src":"930:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6239,"mutability":"mutable","name":"proposalId","nameLocation":"982:10:17","nodeType":"VariableDeclaration","scope":6241,"src":"974:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6238,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:656:17"},"scope":6250,"src":"300:716:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9fb53fcb","id":6249,"implemented":false,"kind":"function","modifiers":[],"name":"getNFTHolders","nameLocation":"1030:13:17","nodeType":"FunctionDefinition","parameters":{"id":6244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6243,"mutability":"mutable","name":"articleId","nameLocation":"1052:9:17","nodeType":"VariableDeclaration","scope":6249,"src":"1044:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6242,"name":"uint256","nodeType":"ElementaryTypeName","src":"1044:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1043:19:17"},"returnParameters":{"id":6248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6249,"src":"1086:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6245,"name":"address","nodeType":"ElementaryTypeName","src":"1086:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6246,"nodeType":"ArrayTypeName","src":"1086:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1085:18:17"},"scope":6250,"src":"1021:83:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7354,"src":"172:934:17","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":6251,"name":"ERC1155","nameLocations":["1137:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"1137:7:17"},"id":6252,"nodeType":"InheritanceSpecifier","src":"1137:7:17"},{"baseName":{"id":6253,"name":"Ownable","nameLocations":["1146:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1146:7:17"},"id":6254,"nodeType":"InheritanceSpecifier","src":"1146:7:17"}],"canonicalName":"ReaderLicenseAMM","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7353,"linearizedBaseContracts":[7353,147,1201,284,1382,1324,2806,2818,2476],"name":"ReaderLicenseAMM","nameLocation":"1117:16:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"2d2c5565","id":6257,"mutability":"constant","name":"TREASURY","nameLocation":"1201:8:17","nodeType":"VariableDeclaration","scope":7353,"src":"1177:77:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6255,"name":"address","nodeType":"ElementaryTypeName","src":"1177:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307839343032463966323062346132376235354231634336636630313544393866373634383134666232","id":6256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1212:42:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x9402F9f20b4a27b55B1cC6cf015D98f764814fb2"},"visibility":"public"},{"constant":true,"functionSelector":"e3685397","id":6260,"mutability":"constant","name":"REGENERATION_THRESHOLD","nameLocation":"1284:22:17","nodeType":"VariableDeclaration","scope":7353,"src":"1260:51:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6258,"name":"uint256","nodeType":"ElementaryTypeName","src":"1260:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3530","id":6259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1309:2:17","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"visibility":"public"},{"constant":true,"functionSelector":"f86325ed","id":6263,"mutability":"constant","name":"BASE_PRICE","nameLocation":"1379:10:17","nodeType":"VariableDeclaration","scope":7353,"src":"1355:47:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6261,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e3031","id":6262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1392:10:17","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"value":"0.01"},"visibility":"public"},{"constant":true,"functionSelector":"01c11d96","id":6266,"mutability":"constant","name":"MAX_PRICE","nameLocation":"1445:9:17","nodeType":"VariableDeclaration","scope":7353,"src":"1421:43:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6264,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":6265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1457:7:17","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"},"visibility":"public"},{"constant":true,"functionSelector":"cb8b2522","id":6269,"mutability":"constant","name":"GAS_REIMBURSEMENT","nameLocation":"1507:17:17","nodeType":"VariableDeclaration","scope":7353,"src":"1483:55:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6267,"name":"uint256","nodeType":"ElementaryTypeName","src":"1483:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e303035","id":6268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1527:11:17","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_5000000000000000_by_1","typeString":"int_const 5000000000000000"},"value":"0.005"},"visibility":"public"},{"constant":true,"functionSelector":"72009528","id":6272,"mutability":"constant","name":"SELLER_PERCENTAGE","nameLocation":"1638:17:17","nodeType":"VariableDeclaration","scope":7353,"src":"1614:46:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6270,"name":"uint256","nodeType":"ElementaryTypeName","src":"1614:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3730","id":6271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:2:17","typeDescriptions":{"typeIdentifier":"t_rational_70_by_1","typeString":"int_const 70"},"value":"70"},"visibility":"public"},{"constant":true,"functionSelector":"ca9f19ef","id":6275,"mutability":"constant","name":"CREATOR_PERCENTAGE","nameLocation":"1690:18:17","nodeType":"VariableDeclaration","scope":7353,"src":"1666:47:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6273,"name":"uint256","nodeType":"ElementaryTypeName","src":"1666:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":6274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1711:2:17","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"public"},{"constant":true,"functionSelector":"09886c9c","id":6278,"mutability":"constant","name":"PLATFORM_PERCENTAGE","nameLocation":"1743:19:17","nodeType":"VariableDeclaration","scope":7353,"src":"1719:48:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1719:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":6277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1765:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"public"},{"constant":false,"functionSelector":"98e9d0e0","id":6281,"mutability":"immutable","name":"ENCRYPTED_ARTICLES","nameLocation":"1837:18:17","nodeType":"VariableDeclaration","scope":7353,"src":"1801:54:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEncryptedArticles_$6250","typeString":"contract IEncryptedArticles"},"typeName":{"id":6280,"nodeType":"UserDefinedTypeName","pathNode":{"id":6279,"name":"IEncryptedArticles","nameLocations":["1801:18:17"],"nodeType":"IdentifierPath","referencedDeclaration":6250,"src":"1801:18:17"},"referencedDeclaration":6250,"src":"1801:18:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEncryptedArticles_$6250","typeString":"contract IEncryptedArticles"}},"visibility":"public"},{"canonicalName":"ReaderLicenseAMM.LicenseInfo","id":6292,"members":[{"constant":false,"id":6283,"mutability":"mutable","name":"articleId","nameLocation":"1914:9:17","nodeType":"VariableDeclaration","scope":6292,"src":"1906:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6282,"name":"uint256","nodeType":"ElementaryTypeName","src":"1906:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6285,"mutability":"mutable","name":"editionNumber","nameLocation":"1941:13:17","nodeType":"VariableDeclaration","scope":6292,"src":"1933:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6284,"name":"uint256","nodeType":"ElementaryTypeName","src":"1933:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6287,"mutability":"mutable","name":"totalGenerated","nameLocation":"1972:14:17","nodeType":"VariableDeclaration","scope":6292,"src":"1964:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6286,"name":"uint256","nodeType":"ElementaryTypeName","src":"1964:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6289,"mutability":"mutable","name":"activeLicenses","nameLocation":"2004:14:17","nodeType":"VariableDeclaration","scope":6292,"src":"1996:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1996:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6291,"mutability":"mutable","name":"lastRegenerationTime","nameLocation":"2036:20:17","nodeType":"VariableDeclaration","scope":6292,"src":"2028:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6290,"name":"uint256","nodeType":"ElementaryTypeName","src":"2028:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"LicenseInfo","nameLocation":"1884:11:17","nodeType":"StructDefinition","scope":7353,"src":"1877:186:17","visibility":"public"},{"canonicalName":"ReaderLicenseAMM.AccessInfo","id":6297,"members":[{"constant":false,"id":6294,"mutability":"mutable","name":"expiryTime","nameLocation":"2105:10:17","nodeType":"VariableDeclaration","scope":6297,"src":"2097:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6293,"name":"uint256","nodeType":"ElementaryTypeName","src":"2097:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6296,"mutability":"mutable","name":"hasAccess","nameLocation":"2130:9:17","nodeType":"VariableDeclaration","scope":6297,"src":"2125:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6295,"name":"bool","nodeType":"ElementaryTypeName","src":"2125:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"AccessInfo","nameLocation":"2076:10:17","nodeType":"StructDefinition","scope":7353,"src":"2069:77:17","visibility":"public"},{"canonicalName":"ReaderLicenseAMM.PurchaseRecord","id":6306,"members":[{"constant":false,"id":6299,"mutability":"mutable","name":"timestamp","nameLocation":"2192:9:17","nodeType":"VariableDeclaration","scope":6306,"src":"2184:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6298,"name":"uint256","nodeType":"ElementaryTypeName","src":"2184:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6301,"mutability":"mutable","name":"price","nameLocation":"2219:5:17","nodeType":"VariableDeclaration","scope":6306,"src":"2211:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6300,"name":"uint256","nodeType":"ElementaryTypeName","src":"2211:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6303,"mutability":"mutable","name":"buyer","nameLocation":"2242:5:17","nodeType":"VariableDeclaration","scope":6306,"src":"2234:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6302,"name":"address","nodeType":"ElementaryTypeName","src":"2234:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6305,"mutability":"mutable","name":"seller","nameLocation":"2265:6:17","nodeType":"VariableDeclaration","scope":6306,"src":"2257:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6304,"name":"address","nodeType":"ElementaryTypeName","src":"2257:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"PurchaseRecord","nameLocation":"2159:14:17","nodeType":"StructDefinition","scope":7353,"src":"2152:126:17","visibility":"public"},{"constant":false,"id":6308,"mutability":"mutable","name":"_licenseTypeIdCounter","nameLocation":"2323:21:17","nodeType":"VariableDeclaration","scope":7353,"src":"2307:37:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6307,"name":"uint256","nodeType":"ElementaryTypeName","src":"2307:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"1e084558","id":6313,"mutability":"mutable","name":"licenseInfo","nameLocation":"2426:11:17","nodeType":"VariableDeclaration","scope":7353,"src":"2387:50:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_LicenseInfo_$6292_storage_$","typeString":"mapping(uint256 => struct ReaderLicenseAMM.LicenseInfo)"},"typeName":{"id":6312,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6309,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2387:31:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_LicenseInfo_$6292_storage_$","typeString":"mapping(uint256 => struct ReaderLicenseAMM.LicenseInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6311,"nodeType":"UserDefinedTypeName","pathNode":{"id":6310,"name":"LicenseInfo","nameLocations":["2406:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":6292,"src":"2406:11:17"},"referencedDeclaration":6292,"src":"2406:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_LicenseInfo_$6292_storage_ptr","typeString":"struct ReaderLicenseAMM.LicenseInfo"}}},"visibility":"public"},{"constant":false,"functionSelector":"1453a424","id":6319,"mutability":"mutable","name":"licenseBalances","nameLocation":"2550:15:17","nodeType":"VariableDeclaration","scope":7353,"src":"2495:70:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":6318,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6314,"name":"uint256","nodeType":"ElementaryTypeName","src":"2503:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2495:47:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6317,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6315,"name":"address","nodeType":"ElementaryTypeName","src":"2522:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2514:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6316,"name":"uint256","nodeType":"ElementaryTypeName","src":"2533:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"ab0b8b04","id":6326,"mutability":"mutable","name":"accessInfo","nameLocation":"2676:10:17","nodeType":"VariableDeclaration","scope":7353,"src":"2618:68:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_AccessInfo_$6297_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct ReaderLicenseAMM.AccessInfo))"},"typeName":{"id":6325,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6320,"name":"uint256","nodeType":"ElementaryTypeName","src":"2626:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2618:50:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_AccessInfo_$6297_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct ReaderLicenseAMM.AccessInfo))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6324,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6321,"name":"address","nodeType":"ElementaryTypeName","src":"2645:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2637:30:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccessInfo_$6297_storage_$","typeString":"mapping(address => struct ReaderLicenseAMM.AccessInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6323,"nodeType":"UserDefinedTypeName","pathNode":{"id":6322,"name":"AccessInfo","nameLocations":["2656:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":6297,"src":"2656:10:17"},"referencedDeclaration":6297,"src":"2656:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_AccessInfo_$6297_storage_ptr","typeString":"struct ReaderLicenseAMM.AccessInfo"}}}},"visibility":"public"},{"constant":false,"functionSelector":"c98d6e99","id":6332,"mutability":"mutable","name":"dailyPurchases","nameLocation":"2794:14:17","nodeType":"VariableDeclaration","scope":7353,"src":"2739:69:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"},"typeName":{"id":6331,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6327,"name":"uint256","nodeType":"ElementaryTypeName","src":"2747:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2739:47:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6330,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6328,"name":"uint256","nodeType":"ElementaryTypeName","src":"2766:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2758:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6329,"name":"uint256","nodeType":"ElementaryTypeName","src":"2777:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"95f58ab8","id":6338,"mutability":"mutable","name":"purchaseHistory","nameLocation":"2900:15:17","nodeType":"VariableDeclaration","scope":7353,"src":"2856:59:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_PurchaseRecord_$6306_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct ReaderLicenseAMM.PurchaseRecord[])"},"typeName":{"id":6337,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6333,"name":"uint256","nodeType":"ElementaryTypeName","src":"2864:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2856:36:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_PurchaseRecord_$6306_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct ReaderLicenseAMM.PurchaseRecord[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":6335,"nodeType":"UserDefinedTypeName","pathNode":{"id":6334,"name":"PurchaseRecord","nameLocations":["2875:14:17"],"nodeType":"IdentifierPath","referencedDeclaration":6306,"src":"2875:14:17"},"referencedDeclaration":6306,"src":"2875:14:17","typeDescriptions":{"typeIdentifier":"t_struct$_PurchaseRecord_$6306_storage_ptr","typeString":"struct ReaderLicenseAMM.PurchaseRecord"}},"id":6336,"nodeType":"ArrayTypeName","src":"2875:16:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PurchaseRecord_$6306_storage_$dyn_storage_ptr","typeString":"struct ReaderLicenseAMM.PurchaseRecord[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"bca59003","id":6342,"mutability":"mutable","name":"totalLicensesEverGenerated","nameLocation":"3009:26:17","nodeType":"VariableDeclaration","scope":7353,"src":"2974:61:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":6341,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6339,"name":"uint256","nodeType":"ElementaryTypeName","src":"2982:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2974:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6340,"name":"uint256","nodeType":"ElementaryTypeName","src":"2993:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"fa08b038","id":6344,"mutability":"mutable","name":"gasPool","nameLocation":"3100:7:17","nodeType":"VariableDeclaration","scope":7353,"src":"3085:22:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6343,"name":"uint256","nodeType":"ElementaryTypeName","src":"3085:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"e3726a6d4ed43d7d4677d7dffa4cf0a0d67d40db3cd11cccf053dddceaf3d7d3","id":6354,"name":"LicenseMinted","nameLocation":"3134:13:17","nodeType":"EventDefinition","parameters":{"id":6353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6346,"indexed":true,"mutability":"mutable","name":"articleId","nameLocation":"3164:9:17","nodeType":"VariableDeclaration","scope":6354,"src":"3148:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6345,"name":"uint256","nodeType":"ElementaryTypeName","src":"3148:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6348,"indexed":true,"mutability":"mutable","name":"holder","nameLocation":"3191:6:17","nodeType":"VariableDeclaration","scope":6354,"src":"3175:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6347,"name":"address","nodeType":"ElementaryTypeName","src":"3175:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6350,"indexed":false,"mutability":"mutable","name":"count","nameLocation":"3207:5:17","nodeType":"VariableDeclaration","scope":6354,"src":"3199:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6349,"name":"uint256","nodeType":"ElementaryTypeName","src":"3199:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6352,"indexed":false,"mutability":"mutable","name":"editionNumber","nameLocation":"3222:13:17","nodeType":"VariableDeclaration","scope":6354,"src":"3214:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6351,"name":"uint256","nodeType":"ElementaryTypeName","src":"3214:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3147:89:17"},"src":"3128:109:17"},{"anonymous":false,"eventSelector":"3846a81a03c71d25212027d222553680c4fc1bd52b8dfb1f1fbbbcd74c8fec79","id":6364,"name":"LicensePurchased","nameLocation":"3248:16:17","nodeType":"EventDefinition","parameters":{"id":6363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6356,"indexed":true,"mutability":"mutable","name":"articleId","nameLocation":"3281:9:17","nodeType":"VariableDeclaration","scope":6364,"src":"3265:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6355,"name":"uint256","nodeType":"ElementaryTypeName","src":"3265:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6358,"indexed":true,"mutability":"mutable","name":"buyer","nameLocation":"3308:5:17","nodeType":"VariableDeclaration","scope":6364,"src":"3292:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6357,"name":"address","nodeType":"ElementaryTypeName","src":"3292:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6360,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"3331:6:17","nodeType":"VariableDeclaration","scope":6364,"src":"3315:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6359,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6362,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"3347:5:17","nodeType":"VariableDeclaration","scope":6364,"src":"3339:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6361,"name":"uint256","nodeType":"ElementaryTypeName","src":"3339:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3264:89:17"},"src":"3242:112:17"},{"anonymous":false,"eventSelector":"8f4d6f0c7458447e5095acea28045c0cd637aa3b49812761a7ac022e6d643bf6","id":6372,"name":"LicenseBurned","nameLocation":"3365:13:17","nodeType":"EventDefinition","parameters":{"id":6371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6366,"indexed":true,"mutability":"mutable","name":"articleId","nameLocation":"3395:9:17","nodeType":"VariableDeclaration","scope":6372,"src":"3379:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6365,"name":"uint256","nodeType":"ElementaryTypeName","src":"3379:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6368,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3422:4:17","nodeType":"VariableDeclaration","scope":6372,"src":"3406:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6367,"name":"address","nodeType":"ElementaryTypeName","src":"3406:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6370,"indexed":false,"mutability":"mutable","name":"expiryTime","nameLocation":"3436:10:17","nodeType":"VariableDeclaration","scope":6372,"src":"3428:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6369,"name":"uint256","nodeType":"ElementaryTypeName","src":"3428:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3378:69:17"},"src":"3359:89:17"},{"anonymous":false,"eventSelector":"00b4ea54fb8c538cd9c23515e23d54351acc66c4539507193ceae7d70e65d30d","id":6380,"name":"LicenseRegenerated","nameLocation":"3459:18:17","nodeType":"EventDefinition","parameters":{"id":6379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6374,"indexed":true,"mutability":"mutable","name":"articleId","nameLocation":"3494:9:17","nodeType":"VariableDeclaration","scope":6380,"src":"3478:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6373,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6376,"indexed":false,"mutability":"mutable","name":"count","nameLocation":"3513:5:17","nodeType":"VariableDeclaration","scope":6380,"src":"3505:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6375,"name":"uint256","nodeType":"ElementaryTypeName","src":"3505:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6378,"indexed":false,"mutability":"mutable","name":"totalActive","nameLocation":"3528:11:17","nodeType":"VariableDeclaration","scope":6380,"src":"3520:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6377,"name":"uint256","nodeType":"ElementaryTypeName","src":"3520:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:63:17"},"src":"3453:88:17"},{"anonymous":false,"eventSelector":"c56e8aa8e9f4284830fd4657bc77d60640af2ec679f2099faf320ee4202ff422","id":6388,"name":"AccessGranted","nameLocation":"3552:13:17","nodeType":"EventDefinition","parameters":{"id":6387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6382,"indexed":true,"mutability":"mutable","name":"articleId","nameLocation":"3582:9:17","nodeType":"VariableDeclaration","scope":6388,"src":"3566:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6381,"name":"uint256","nodeType":"ElementaryTypeName","src":"3566:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6384,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3609:4:17","nodeType":"VariableDeclaration","scope":6388,"src":"3593:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6383,"name":"address","nodeType":"ElementaryTypeName","src":"3593:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6386,"indexed":false,"mutability":"mutable","name":"expiryTime","nameLocation":"3623:10:17","nodeType":"VariableDeclaration","scope":6388,"src":"3615:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6385,"name":"uint256","nodeType":"ElementaryTypeName","src":"3615:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3565:69:17"},"src":"3546:89:17"},{"body":{"id":6406,"nodeType":"Block","src":"3713:76:17","statements":[{"expression":{"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6400,"name":"ENCRYPTED_ARTICLES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"3723:18:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEncryptedArticles_$6250","typeString":"contract IEncryptedArticles"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6402,"name":"_encryptedArticles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"3763:18:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6401,"name":"IEncryptedArticles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6250,"src":"3744:18:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IEncryptedArticles_$6250_$","typeString":"type(contract IEncryptedArticles)"}},"id":6403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3744:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEncryptedArticles_$6250","typeString":"contract IEncryptedArticles"}},"src":"3723:59:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEncryptedArticles_$6250","typeString":"contract IEncryptedArticles"}},"id":6405,"nodeType":"ExpressionStatement","src":"3723:59:17"}]},"id":6407,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"","id":6393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3689:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"id":6394,"kind":"baseConstructorSpecifier","modifierName":{"id":6392,"name":"ERC1155","nameLocations":["3681:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"3681:7:17"},"nodeType":"ModifierInvocation","src":"3681:11:17"},{"arguments":[{"expression":{"id":6396,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3701:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3705:6:17","memberName":"sender","nodeType":"MemberAccess","src":"3701:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6398,"kind":"baseConstructorSpecifier","modifierName":{"id":6395,"name":"Ownable","nameLocations":["3693:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"3693:7:17"},"nodeType":"ModifierInvocation","src":"3693:19:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6390,"mutability":"mutable","name":"_encryptedArticles","nameLocation":"3661:18:17","nodeType":"VariableDeclaration","scope":6407,"src":"3653:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6389,"name":"address","nodeType":"ElementaryTypeName","src":"3653:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3652:28:17"},"returnParameters":{"id":6399,"nodeType":"ParameterList","parameters":[],"src":"3713:0:17"},"scope":7353,"src":"3641:148:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6478,"nodeType":"Block","src":"4034:659:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6419,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4052:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4056:6:17","memberName":"sender","nodeType":"MemberAccess","src":"4052:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":6423,"name":"ENCRYPTED_ARTICLES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"4074:18:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEncryptedArticles_$6250","typeString":"contract IEncryptedArticles"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEncryptedArticles_$6250","typeString":"contract IEncryptedArticles"}],"id":6422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4066:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6421,"name":"address","nodeType":"ElementaryTypeName","src":"4066:7:17","typeDescriptions":{}}},"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4066:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4052:41:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920456e6372797074656441727469636c657320636f6e74726163742063616e206d696e74","id":6426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4095:42:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_23a4d5b9471f2f0426c24b390ef8918f13ac4f2ca59cfdf2ba15badffcff90ab","typeString":"literal_string \"Only EncryptedArticles contract can mint\""},"value":"Only EncryptedArticles contract can mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_23a4d5b9471f2f0426c24b390ef8918f13ac4f2ca59cfdf2ba15badffcff90ab","typeString":"literal_string \"Only EncryptedArticles contract can mint\""}],"id":6418,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4044:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4044:94:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6428,"nodeType":"ExpressionStatement","src":"4044:94:17"},{"expression":{"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6429,"name":"licenseInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"4188:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_LicenseInfo_$6292_storage_$","typeString":"mapping(uint256 => struct ReaderLicenseAMM.LicenseInfo storage ref)"}},"id":6431,"indexExpression":{"id":6430,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"4200:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4188:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_LicenseInfo_$6292_storage","typeString":"struct ReaderLicenseAMM.LicenseInfo storage ref"}},"id":6432,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4212:9:17","memberName":"articleId","nodeType":"MemberAccess","referencedDeclaration":6283,"src":"4188:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6433,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"4224:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4188:46:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6435,"nodeType":"ExpressionStatement","src":"4188:46:17"},{"expression":{"id":6441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6436,"name":"licenseInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"4244:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_LicenseInfo_$6292_storage_$","typeString":"mapping(uint256 => struct ReaderLicenseAMM.LicenseInfo storage ref)"}},"id":6438,"indexExpression":{"id":6437,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"4256:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4244:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_LicenseInfo_$6292_storage","typeString":"struct ReaderLicenseAMM.LicenseInfo storage ref"}},"id":6439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4268:14:17","memberName":"totalGenerated","nodeType":"MemberAccess","referencedDeclaration":6287,"src":"4244:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6440,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"4286:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4244:48:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6442,"nodeType":"ExpressionStatement","src":"4244:48:17"},{"expression":{"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6443,"name":"licenseInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"4302:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_LicenseInfo_$6292_storage_$","typeString":"mapping(uint256 => struct ReaderLicenseAMM.LicenseInfo storage ref)"}},"id":6445,"indexExpression":{"id":6444,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"4314:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4302:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_LicenseInfo_$6292_storage","typeString":"struct ReaderLicenseAMM.LicenseInfo storage ref"}},"id":6446,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4326:14:17","memberName":"activeLicenses","nodeType":"MemberAccess","referencedDeclaration":6289,"src":"4302:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6447,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"4344:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4302:48:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6449,"nodeType":"ExpressionStatement","src":"4302:48:17"},{"expression":{"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6450,"name":"totalLicensesEverGenerated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"4408:26:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6452,"indexExpression":{"id":6451,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"4435:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4408:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6453,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"4450:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4408:48:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6455,"nodeType":"ExpressionStatement","src":"4408:48:17"},{"expression":{"id":6462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":6456,"name":"licenseBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"4510:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":6459,"indexExpression":{"id":6457,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"4526:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4510:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6460,"indexExpression":{"id":6458,"name":"_holder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"4538:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4510:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6461,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"4550:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4510:46:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6463,"nodeType":"ExpressionStatement","src":"4510:46:17"},{"expression":{"arguments":[{"id":6465,"name":"_holder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"4572:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6466,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"4581:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6467,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"4593:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":6468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4601:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":6464,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"4566:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4566:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6470,"nodeType":"ExpressionStatement","src":"4566:38:17"},{"eventCall":{"arguments":[{"id":6472,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"4642:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6473,"name":"_holder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"4654:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6474,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"4663:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6475,"name":"_editionNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6415,"src":"4671:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6471,"name":"LicenseMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6354,"src":"4628:13:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4628:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6477,"nodeType":"EmitStatement","src":"4623:63:17"}]},"functionSelector":"df81a823","id":6479,"implemented":true,"kind":"function","modifiers":[],"name":"mintLicensesToHolder","nameLocation":"3886:20:17","nodeType":"FunctionDefinition","parameters":{"id":6416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6409,"mutability":"mutable","name":"_articleId","nameLocation":"3924:10:17","nodeType":"VariableDeclaration","scope":6479,"src":"3916:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6408,"name":"uint256","nodeType":"ElementaryTypeName","src":"3916:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6411,"mutability":"mutable","name":"_holder","nameLocation":"3953:7:17","nodeType":"VariableDeclaration","scope":6479,"src":"3945:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6410,"name":"address","nodeType":"ElementaryTypeName","src":"3945:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6413,"mutability":"mutable","name":"_count","nameLocation":"3979:6:17","nodeType":"VariableDeclaration","scope":6479,"src":"3971:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6412,"name":"uint256","nodeType":"ElementaryTypeName","src":"3971:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6415,"mutability":"mutable","name":"_editionNumber","nameLocation":"4004:14:17","nodeType":"VariableDeclaration","scope":6479,"src":"3996:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6414,"name":"uint256","nodeType":"ElementaryTypeName","src":"3996:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3906:118:17"},"returnParameters":{"id":6417,"nodeType":"ParameterList","parameters":[],"src":"4034:0:17"},"scope":7353,"src":"3877:816:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6567,"nodeType":"Block","src":"4869:1092:17","statements":[{"assignments":[6487],"declarations":[{"constant":false,"id":6487,"mutability":"mutable","name":"totalSupply","nameLocation":"4887:11:17","nodeType":"VariableDeclaration","scope":6567,"src":"4879:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6486,"name":"uint256","nodeType":"ElementaryTypeName","src":"4879:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6491,"initialValue":{"baseExpression":{"id":6488,"name":"totalLicensesEverGenerated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"4901:26:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6490,"indexExpression":{"id":6489,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"4928:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4901:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4879:60:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6493,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6487,"src":"4957:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4971:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4957:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206c6963656e73657320657869737420666f7220746869732061727469636c65","id":6496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4974:36:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_023b4ca704d217f3cd6b8f9af05571b5f6af8fae309b7e35d2424956bf47a464","typeString":"literal_string \"No licenses exist for this article\""},"value":"No licenses exist for this article"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_023b4ca704d217f3cd6b8f9af05571b5f6af8fae309b7e35d2424956bf47a464","typeString":"literal_string \"No licenses exist for this article\""}],"id":6492,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4949:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4949:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6498,"nodeType":"ExpressionStatement","src":"4949:62:17"},{"assignments":[null,null,null,null,null,null,null,null,6500,null,null,6502,null,null],"declarations":[null,null,null,null,null,null,null,null,{"constant":false,"id":6500,"mutability":"mutable","name":"nftCount","nameLocation":"5130:8:17","nodeType":"VariableDeclaration","scope":6567,"src":"5122:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6499,"name":"uint256","nodeType":"ElementaryTypeName","src":"5122:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null,null,{"constant":false,"id":6502,"mutability":"mutable","name":"readerLicenseRatio","nameLocation":"5152:18:17","nodeType":"VariableDeclaration","scope":6567,"src":"5144:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6501,"name":"uint256","nodeType":"ElementaryTypeName","src":"5144:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null,null],"id":6507,"initialValue":{"arguments":[{"id":6505,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"5205:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6503,"name":"ENCRYPTED_ARTICLES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"5177:18:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEncryptedArticles_$6250","typeString":"contract IEncryptedArticles"}},"id":6504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5196:8:17","memberName":"articles","nodeType":"MemberAccess","referencedDeclaration":6241,"src":"5177:27:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint256_$","typeString":"function (uint256) view external returns (uint256,string memory,string memory,string memory,address,string memory,string memory,uint256,uint256,uint256,uint256,uint256,uint8,uint256)"}},"id":6506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5177:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint256_$","typeString":"tuple(uint256,string memory,string memory,string memory,address,string memory,string memory,uint256,uint256,uint256,uint256,uint256,uint8,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5105:111:17"},{"assignments":[6509],"declarations":[{"constant":false,"id":6509,"mutability":"mutable","name":"maxTotalLicenses","nameLocation":"5327:16:17","nodeType":"VariableDeclaration","scope":6567,"src":"5319:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6508,"name":"uint256","nodeType":"ElementaryTypeName","src":"5319:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6513,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6510,"name":"nftCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"5346:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6511,"name":"readerLicenseRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"5357:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5346:29:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5319:56:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6515,"name":"maxTotalLicenses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6509,"src":"5393:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5412:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5393:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206c6963656e736520636f6e66696775726174696f6e","id":6518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5415:31:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_1fa39831dc6b5a16092dd01ca64203b3426258b60db1f75465344045e7e57570","typeString":"literal_string \"Invalid license configuration\""},"value":"Invalid license configuration"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1fa39831dc6b5a16092dd01ca64203b3426258b60db1f75465344045e7e57570","typeString":"literal_string \"Invalid license configuration\""}],"id":6514,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5385:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5385:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6520,"nodeType":"ExpressionStatement","src":"5385:62:17"},{"assignments":[6522],"declarations":[{"constant":false,"id":6522,"mutability":"mutable","name":"priceRange","nameLocation":"5540:10:17","nodeType":"VariableDeclaration","scope":6567,"src":"5532:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6521,"name":"uint256","nodeType":"ElementaryTypeName","src":"5532:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6526,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":6523,"name":"MAX_PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"5553:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6524,"name":"BASE_PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"5565:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5553:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5532:43:17"},{"assignments":[6528],"declarations":[{"constant":false,"id":6528,"mutability":"mutable","name":"priceIncrement","nameLocation":"5606:14:17","nodeType":"VariableDeclaration","scope":6567,"src":"5598:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6527,"name":"uint256","nodeType":"ElementaryTypeName","src":"5598:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6540,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6529,"name":"maxTotalLicenses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6509,"src":"5623:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":6530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5642:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5623:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":6538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5684:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":6539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5623:62:17","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6532,"name":"priceRange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"5646:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6533,"name":"maxTotalLicenses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6509,"src":"5660:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5679:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5660:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6536,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5659:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5646:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5598:87:17"},{"assignments":[6542],"declarations":[{"constant":false,"id":6542,"mutability":"mutable","name":"bondingPrice","nameLocation":"5703:12:17","nodeType":"VariableDeclaration","scope":6567,"src":"5695:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6541,"name":"uint256","nodeType":"ElementaryTypeName","src":"5695:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6552,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6543,"name":"BASE_PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"5718:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6544,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6487,"src":"5733:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5747:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5733:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5732:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6548,"name":"priceIncrement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"5752:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5732:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6550,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5731:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5718:49:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5695:72:17"},{"assignments":[6554],"declarations":[{"constant":false,"id":6554,"mutability":"mutable","name":"decayedPrice","nameLocation":"5822:12:17","nodeType":"VariableDeclaration","scope":6567,"src":"5814:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6553,"name":"uint256","nodeType":"ElementaryTypeName","src":"5814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6559,"initialValue":{"arguments":[{"id":6556,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"5852:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6557,"name":"bondingPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"5864:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6555,"name":"applyTimeDecay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"5837:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":6558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5837:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5814:63:17"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6560,"name":"decayedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"5903:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6561,"name":"MAX_PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"5918:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5903:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6564,"name":"decayedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"5942:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5903:51:17","trueExpression":{"id":6563,"name":"MAX_PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"5930:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6485,"id":6566,"nodeType":"Return","src":"5896:58:17"}]},"functionSelector":"c55d0f56","id":6568,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentPrice","nameLocation":"4803:15:17","nodeType":"FunctionDefinition","parameters":{"id":6482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6481,"mutability":"mutable","name":"_articleId","nameLocation":"4827:10:17","nodeType":"VariableDeclaration","scope":6568,"src":"4819:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6480,"name":"uint256","nodeType":"ElementaryTypeName","src":"4819:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4818:20:17"},"returnParameters":{"id":6485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6568,"src":"4860:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6483,"name":"uint256","nodeType":"ElementaryTypeName","src":"4860:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:9:17"},"scope":7353,"src":"4794:1167:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6664,"nodeType":"Block","src":"6125:1100:17","statements":[{"assignments":[null,null,null,null,null,null,null,6578,null,null,null,null,null,null],"declarations":[null,null,null,null,null,null,null,{"constant":false,"id":6578,"mutability":"mutable","name":"publishedAt","nameLocation":"6237:11:17","nodeType":"VariableDeclaration","scope":6664,"src":"6229:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6577,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null,null,null,null,null,null],"id":6583,"initialValue":{"arguments":[{"id":6581,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"6291:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6579,"name":"ENCRYPTED_ARTICLES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"6263:18:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEncryptedArticles_$6250","typeString":"contract IEncryptedArticles"}},"id":6580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6282:8:17","memberName":"articles","nodeType":"MemberAccess","referencedDeclaration":6241,"src":"6263:27:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint256_$","typeString":"function (uint256) view external returns (uint256,string memory,string memory,string memory,address,string memory,string memory,uint256,uint256,uint256,uint256,uint256,uint8,uint256)"}},"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6263:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint256_$","typeString":"tuple(uint256,string memory,string memory,string memory,address,string memory,string memory,uint256,uint256,uint256,uint256,uint256,uint8,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"6214:88:17"},{"assignments":[6585],"declarations":[{"constant":false,"id":6585,"mutability":"mutable","name":"daysSincePublish","nameLocation":"6399:16:17","nodeType":"VariableDeclaration","scope":6664,"src":"6391:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6584,"name":"uint256","nodeType":"ElementaryTypeName","src":"6391:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6593,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6586,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6419:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6425:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"6419:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6588,"name":"publishedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6578,"src":"6437:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6419:29:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6590,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6418:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3836343030","id":6591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6452:5:17","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"86400"},"src":"6418:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6391:66:17"},{"assignments":[6595],"declarations":[{"constant":false,"id":6595,"mutability":"mutable","name":"zeroSaleDays","nameLocation":"6475:12:17","nodeType":"VariableDeclaration","scope":6664,"src":"6467:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6594,"name":"uint256","nodeType":"ElementaryTypeName","src":"6467:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6597,"initialValue":{"hexValue":"30","id":6596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6490:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6467:24:17"},{"assignments":[6599],"declarations":[{"constant":false,"id":6599,"mutability":"mutable","name":"currentDay","nameLocation":"6596:10:17","nodeType":"VariableDeclaration","scope":6664,"src":"6588:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6598,"name":"uint256","nodeType":"ElementaryTypeName","src":"6588:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6604,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6600,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6609:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6615:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"6609:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3836343030","id":6602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6627:5:17","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"86400"},"src":"6609:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6588:44:17"},{"body":{"id":6635,"nodeType":"Block","src":"6699:200:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":6619,"name":"dailyPurchases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"6717:14:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":6621,"indexExpression":{"id":6620,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"6732:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6717:26:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6625,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6622,"name":"currentDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6599,"src":"6744:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6623,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"6757:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6744:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6717:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6763:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6717:47:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6633,"nodeType":"Block","src":"6819:70:17","statements":[{"id":6632,"nodeType":"Break","src":"6837:5:17"}]},"id":6634,"nodeType":"IfStatement","src":"6713:176:17","trueBody":{"id":6631,"nodeType":"Block","src":"6766:47:17","statements":[{"expression":{"id":6629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6784:14:17","subExpression":{"id":6628,"name":"zeroSaleDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6595,"src":"6784:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6630,"nodeType":"ExpressionStatement","src":"6784:14:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6609,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"6662:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6610,"name":"daysSincePublish","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"6666:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6662:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6612,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"6686:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3330","id":6613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6690:2:17","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"src":"6686:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6662:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6636,"initializationExpression":{"assignments":[6606],"declarations":[{"constant":false,"id":6606,"mutability":"mutable","name":"i","nameLocation":"6655:1:17","nodeType":"VariableDeclaration","scope":6636,"src":"6647:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6605,"name":"uint256","nodeType":"ElementaryTypeName","src":"6647:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6608,"initialValue":{"hexValue":"30","id":6607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6659:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6647:13:17"},"loopExpression":{"expression":{"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6694:3:17","subExpression":{"id":6616,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"6694:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6618,"nodeType":"ExpressionStatement","src":"6694:3:17"},"nodeType":"ForStatement","src":"6642:257:17"},{"assignments":[6638],"declarations":[{"constant":false,"id":6638,"mutability":"mutable","name":"decayPercent","nameLocation":"6978:12:17","nodeType":"VariableDeclaration","scope":6664,"src":"6970:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6637,"name":"uint256","nodeType":"ElementaryTypeName","src":"6970:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6645,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6639,"name":"zeroSaleDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6595,"src":"6993:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3330","id":6640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7008:2:17","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"src":"6993:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6643,"name":"zeroSaleDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6595,"src":"7018:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6993:37:17","trueExpression":{"hexValue":"3330","id":6642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7013:2:17","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6970:60:17"},{"assignments":[6647],"declarations":[{"constant":false,"id":6647,"mutability":"mutable","name":"decayAmount","nameLocation":"7048:11:17","nodeType":"VariableDeclaration","scope":6664,"src":"7040:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6646,"name":"uint256","nodeType":"ElementaryTypeName","src":"7040:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6654,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6648,"name":"_currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"7063:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6649,"name":"decayPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"7079:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7063:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6651,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7062:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":6652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7095:3:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"7062:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7040:58:17"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6655,"name":"_currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"7124:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6656,"name":"decayAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"7140:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7124:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"302e303031","id":6661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7184:11:17","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000_by_1","typeString":"int_const 1000000000000000"},"value":"0.001"},"id":6662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7124:71:17","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6658,"name":"_currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"7154:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6659,"name":"decayAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"7170:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7154:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6576,"id":6663,"nodeType":"Return","src":"7117:78:17"}]},"id":6665,"implemented":true,"kind":"function","modifiers":[],"name":"applyTimeDecay","nameLocation":"6035:14:17","nodeType":"FunctionDefinition","parameters":{"id":6573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6570,"mutability":"mutable","name":"_articleId","nameLocation":"6058:10:17","nodeType":"VariableDeclaration","scope":6665,"src":"6050:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6569,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6572,"mutability":"mutable","name":"_currentPrice","nameLocation":"6078:13:17","nodeType":"VariableDeclaration","scope":6665,"src":"6070:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6571,"name":"uint256","nodeType":"ElementaryTypeName","src":"6070:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6049:43:17"},"returnParameters":{"id":6576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6665,"src":"6116:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6574,"name":"uint256","nodeType":"ElementaryTypeName","src":"6116:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6115:9:17"},"scope":7353,"src":"6026:1199:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6855,"nodeType":"Block","src":"7349:2071:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":6673,"name":"licenseBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"7367:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":6675,"indexExpression":{"id":6674,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"7383:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7367:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6677,"indexExpression":{"id":6676,"name":"_seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"7395:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7367:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7406:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7367:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656c6c657220686173206e6f206c6963656e736573","id":6680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7409:24:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec49abdcf869cfe58749ec591c74e0961c91153ff05546cdae2c7e1936dae30c","typeString":"literal_string \"Seller has no licenses\""},"value":"Seller has no licenses"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ec49abdcf869cfe58749ec591c74e0961c91153ff05546cdae2c7e1936dae30c","typeString":"literal_string \"Seller has no licenses\""}],"id":6672,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7359:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7359:75:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6682,"nodeType":"ExpressionStatement","src":"7359:75:17"},{"assignments":[6684],"declarations":[{"constant":false,"id":6684,"mutability":"mutable","name":"currentPrice","nameLocation":"7461:12:17","nodeType":"VariableDeclaration","scope":6855,"src":"7453:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6683,"name":"uint256","nodeType":"ElementaryTypeName","src":"7453:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6688,"initialValue":{"arguments":[{"id":6686,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"7492:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6685,"name":"getCurrentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"7476:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7476:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7453:50:17"},{"assignments":[6690],"declarations":[{"constant":false,"id":6690,"mutability":"mutable","name":"estimatedGas","nameLocation":"7521:12:17","nodeType":"VariableDeclaration","scope":6855,"src":"7513:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6689,"name":"uint256","nodeType":"ElementaryTypeName","src":"7513:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6692,"initialValue":{"id":6691,"name":"GAS_REIMBURSEMENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6269,"src":"7536:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7513:40:17"},{"assignments":[6694],"declarations":[{"constant":false,"id":6694,"mutability":"mutable","name":"totalCost","nameLocation":"7571:9:17","nodeType":"VariableDeclaration","scope":6855,"src":"7563:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6693,"name":"uint256","nodeType":"ElementaryTypeName","src":"7563:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6698,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6695,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"7583:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6696,"name":"estimatedGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"7598:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7583:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7563:47:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6700,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7637:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7641:5:17","memberName":"value","nodeType":"MemberAccess","src":"7637:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6702,"name":"totalCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6694,"src":"7650:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7637:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207061796d656e74","id":6704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7661:22:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""},"value":"Insufficient payment"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""}],"id":6699,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7629:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7629:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6706,"nodeType":"ExpressionStatement","src":"7629:55:17"},{"assignments":[6708],"declarations":[{"constant":false,"id":6708,"mutability":"mutable","name":"sellerAmount","nameLocation":"7771:12:17","nodeType":"VariableDeclaration","scope":6855,"src":"7763:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6707,"name":"uint256","nodeType":"ElementaryTypeName","src":"7763:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6715,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6709,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"7787:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6710,"name":"SELLER_PERCENTAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6272,"src":"7802:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6712,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":6713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7823:3:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"7786:40:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7763:63:17"},{"assignments":[6717],"declarations":[{"constant":false,"id":6717,"mutability":"mutable","name":"creatorAmount","nameLocation":"7844:13:17","nodeType":"VariableDeclaration","scope":6855,"src":"7836:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6716,"name":"uint256","nodeType":"ElementaryTypeName","src":"7836:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6724,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6718,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"7861:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6719,"name":"CREATOR_PERCENTAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"7876:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7861:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6721,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7860:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":6722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7898:3:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"7860:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7836:65:17"},{"assignments":[6726],"declarations":[{"constant":false,"id":6726,"mutability":"mutable","name":"platformAmount","nameLocation":"7919:14:17","nodeType":"VariableDeclaration","scope":6855,"src":"7911:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6725,"name":"uint256","nodeType":"ElementaryTypeName","src":"7911:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6732,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6727,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"7936:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6728,"name":"sellerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"7951:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7936:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6730,"name":"creatorAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6717,"src":"7966:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7936:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7911:68:17"},{"assignments":[null,null,null,null,6734,null,null,null,null,null,null,null,null,null],"declarations":[null,null,null,null,{"constant":false,"id":6734,"mutability":"mutable","name":"author","nameLocation":"8089:6:17","nodeType":"VariableDeclaration","scope":6855,"src":"8081:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6733,"name":"address","nodeType":"ElementaryTypeName","src":"8081:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},null,null,null,null,null,null,null,null,null],"id":6739,"initialValue":{"arguments":[{"id":6737,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"8144:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6735,"name":"ENCRYPTED_ARTICLES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"8116:18:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEncryptedArticles_$6250","typeString":"contract IEncryptedArticles"}},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8135:8:17","memberName":"articles","nodeType":"MemberAccess","referencedDeclaration":6241,"src":"8116:27:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint256_$","typeString":"function (uint256) view external returns (uint256,string memory,string memory,string memory,address,string memory,string memory,uint256,uint256,uint256,uint256,uint256,uint8,uint256)"}},"id":6738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8116:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint256_$","typeString":"tuple(uint256,string memory,string memory,string memory,address,string memory,string memory,uint256,uint256,uint256,uint256,uint256,uint8,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8072:83:17"},{"expression":{"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"8265:38:17","subExpression":{"baseExpression":{"baseExpression":{"id":6740,"name":"licenseBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"8265:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":6743,"indexExpression":{"id":6741,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"8281:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8265:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6744,"indexExpression":{"id":6742,"name":"_seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"8293:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8265:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6746,"nodeType":"ExpressionStatement","src":"8265:38:17"},{"expression":{"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8313:41:17","subExpression":{"baseExpression":{"baseExpression":{"id":6747,"name":"licenseBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"8313:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":6751,"indexExpression":{"id":6748,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"8329:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8313:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6752,"indexExpression":{"expression":{"id":6749,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8341:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8345:6:17","memberName":"sender","nodeType":"MemberAccess","src":"8341:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8313:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6754,"nodeType":"ExpressionStatement","src":"8313:41:17"},{"expression":{"arguments":[{"id":6756,"name":"_seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"8382:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6757,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8391:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8395:6:17","memberName":"sender","nodeType":"MemberAccess","src":"8391:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6759,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"8403:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":6760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8415:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"","id":6761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8418:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":6755,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"8364:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8364:57:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6763,"nodeType":"ExpressionStatement","src":"8364:57:17"},{"expression":{"arguments":[{"id":6769,"name":"sellerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"8494:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":6766,"name":"_seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"8476:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8468:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":6764,"name":"address","nodeType":"ElementaryTypeName","src":"8468:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":6767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8468:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8485:8:17","memberName":"transfer","nodeType":"MemberAccess","src":"8468:25:17","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8468:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6771,"nodeType":"ExpressionStatement","src":"8468:39:17"},{"expression":{"arguments":[{"id":6777,"name":"creatorAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6717,"src":"8542:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":6774,"name":"author","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6734,"src":"8525:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8517:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":6772,"name":"address","nodeType":"ElementaryTypeName","src":"8517:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":6775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8517:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":6776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8533:8:17","memberName":"transfer","nodeType":"MemberAccess","src":"8517:24:17","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8517:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6779,"nodeType":"ExpressionStatement","src":"8517:39:17"},{"expression":{"arguments":[{"id":6785,"name":"platformAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6726,"src":"8593:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":6782,"name":"TREASURY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6257,"src":"8574:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8566:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":6780,"name":"address","nodeType":"ElementaryTypeName","src":"8566:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":6783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8566:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8584:8:17","memberName":"transfer","nodeType":"MemberAccess","src":"8566:26:17","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8566:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6787,"nodeType":"ExpressionStatement","src":"8566:42:17"},{"expression":{"id":6790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6788,"name":"gasPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"8667:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6789,"name":"estimatedGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"8678:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8667:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6791,"nodeType":"ExpressionStatement","src":"8667:23:17"},{"assignments":[6793],"declarations":[{"constant":false,"id":6793,"mutability":"mutable","name":"today","nameLocation":"8753:5:17","nodeType":"VariableDeclaration","scope":6855,"src":"8745:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6792,"name":"uint256","nodeType":"ElementaryTypeName","src":"8745:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6798,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6794,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8761:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8767:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"8761:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3836343030","id":6796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8779:5:17","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"86400"},"src":"8761:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8745:39:17"},{"expression":{"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8794:35:17","subExpression":{"baseExpression":{"baseExpression":{"id":6799,"name":"dailyPurchases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"8794:14:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":6802,"indexExpression":{"id":6800,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"8809:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8794:26:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6803,"indexExpression":{"id":6801,"name":"today","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6793,"src":"8821:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8794:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6805,"nodeType":"ExpressionStatement","src":"8794:35:17"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":6811,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8912:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8918:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"8912:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6813,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"8948:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6814,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8981:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8985:6:17","memberName":"sender","nodeType":"MemberAccess","src":"8981:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6816,"name":"_seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"9013:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6810,"name":"PurchaseRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"8872:14:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PurchaseRecord_$6306_storage_ptr_$","typeString":"type(struct ReaderLicenseAMM.PurchaseRecord storage pointer)"}},"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8901:9:17","8941:5:17","8974:5:17","9005:6:17"],"names":["timestamp","price","buyer","seller"],"nodeType":"FunctionCall","src":"8872:159:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PurchaseRecord_$6306_memory_ptr","typeString":"struct ReaderLicenseAMM.PurchaseRecord memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PurchaseRecord_$6306_memory_ptr","typeString":"struct ReaderLicenseAMM.PurchaseRecord memory"}],"expression":{"baseExpression":{"id":6806,"name":"purchaseHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"8839:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_PurchaseRecord_$6306_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct ReaderLicenseAMM.PurchaseRecord storage ref[] storage ref)"}},"id":6808,"indexExpression":{"id":6807,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"8855:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8839:27:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PurchaseRecord_$6306_storage_$dyn_storage","typeString":"struct ReaderLicenseAMM.PurchaseRecord storage ref[] storage ref"}},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8867:4:17","memberName":"push","nodeType":"MemberAccess","src":"8839:32:17","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_PurchaseRecord_$6306_storage_$dyn_storage_ptr_$_t_struct$_PurchaseRecord_$6306_storage_$returns$__$attached_to$_t_array$_t_struct$_PurchaseRecord_$6306_storage_$dyn_storage_ptr_$","typeString":"function (struct ReaderLicenseAMM.PurchaseRecord storage ref[] storage pointer,struct ReaderLicenseAMM.PurchaseRecord storage ref)"}},"id":6818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8839:193:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6819,"nodeType":"ExpressionStatement","src":"8839:193:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6820,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9080:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9084:5:17","memberName":"value","nodeType":"MemberAccess","src":"9080:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6822,"name":"totalCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6694,"src":"9092:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9080:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6837,"nodeType":"IfStatement","src":"9076:103:17","trueBody":{"id":6836,"nodeType":"Block","src":"9103:76:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6830,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9146:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9150:5:17","memberName":"value","nodeType":"MemberAccess","src":"9146:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6832,"name":"totalCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6694,"src":"9158:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":6826,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9125:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9129:6:17","memberName":"sender","nodeType":"MemberAccess","src":"9125:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9117:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":6824,"name":"address","nodeType":"ElementaryTypeName","src":"9117:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":6828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9117:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9137:8:17","memberName":"transfer","nodeType":"MemberAccess","src":"9117:28:17","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9117:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6835,"nodeType":"ExpressionStatement","src":"9117:51:17"}]}},{"eventCall":{"arguments":[{"id":6839,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"9219:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6840,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9231:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9235:6:17","memberName":"sender","nodeType":"MemberAccess","src":"9231:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6842,"name":"_seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"9243:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6843,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"9252:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6838,"name":"LicensePurchased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"9202:16:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256)"}},"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9202:63:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6845,"nodeType":"EmitStatement","src":"9197:68:17"},{"condition":{"arguments":[{"id":6847,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"9345:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6846,"name":"shouldRegenerate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"9328:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9328:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6854,"nodeType":"IfStatement","src":"9324:90:17","trueBody":{"id":6853,"nodeType":"Block","src":"9358:56:17","statements":[{"expression":{"arguments":[{"id":6850,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"9392:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6849,"name":"_regenerateLicenses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"9372:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9372:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6852,"nodeType":"ExpressionStatement","src":"9372:31:17"}]}}]},"functionSelector":"996cb745","id":6856,"implemented":true,"kind":"function","modifiers":[],"name":"buyLicense","nameLocation":"7284:10:17","nodeType":"FunctionDefinition","parameters":{"id":6670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6667,"mutability":"mutable","name":"_articleId","nameLocation":"7303:10:17","nodeType":"VariableDeclaration","scope":6856,"src":"7295:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6666,"name":"uint256","nodeType":"ElementaryTypeName","src":"7295:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6669,"mutability":"mutable","name":"_seller","nameLocation":"7323:7:17","nodeType":"VariableDeclaration","scope":6856,"src":"7315:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6668,"name":"address","nodeType":"ElementaryTypeName","src":"7315:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7294:37:17"},"returnParameters":{"id":6671,"nodeType":"ParameterList","parameters":[],"src":"7349:0:17"},"scope":7353,"src":"7275:2145:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":6946,"nodeType":"Block","src":"9530:872:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":6862,"name":"licenseBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"9548:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":6864,"indexExpression":{"id":6863,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"9564:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9548:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6867,"indexExpression":{"expression":{"id":6865,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9576:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9580:6:17","memberName":"sender","nodeType":"MemberAccess","src":"9576:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9548:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9590:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9548:43:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206c6963656e736520746f206275726e","id":6870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9593:20:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_2163c06c8014216dc37fca61a07ae1c8cacc86cc8e5417ab895a4d3bf179cb80","typeString":"literal_string \"No license to burn\""},"value":"No license to burn"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2163c06c8014216dc37fca61a07ae1c8cacc86cc8e5417ab895a4d3bf179cb80","typeString":"literal_string \"No license to burn\""}],"id":6861,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9540:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9540:74:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6872,"nodeType":"ExpressionStatement","src":"9540:74:17"},{"expression":{"arguments":[{"id":6879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9632:40:17","subExpression":{"arguments":[{"id":6875,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"9649:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6876,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9661:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9665:6:17","memberName":"sender","nodeType":"MemberAccess","src":"9661:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6874,"name":"hasActiveAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"9633:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address) view returns (bool)"}},"id":6878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9633:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479206861732061637469766520616363657373","id":6880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9674:27:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_03cc6df1077ac8bac51ffe8488a969392b7a6cf962504a5b2df5d1a188475e17","typeString":"literal_string \"Already has active access\""},"value":"Already has active access"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_03cc6df1077ac8bac51ffe8488a969392b7a6cf962504a5b2df5d1a188475e17","typeString":"literal_string \"Already has active access\""}],"id":6873,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9624:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9624:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6882,"nodeType":"ExpressionStatement","src":"9624:78:17"},{"expression":{"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"9749:41:17","subExpression":{"baseExpression":{"baseExpression":{"id":6883,"name":"licenseBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"9749:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":6887,"indexExpression":{"id":6884,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"9765:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9749:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6888,"indexExpression":{"expression":{"id":6885,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9777:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9781:6:17","memberName":"sender","nodeType":"MemberAccess","src":"9777:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9749:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6890,"nodeType":"ExpressionStatement","src":"9749:41:17"},{"expression":{"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"9800:40:17","subExpression":{"expression":{"baseExpression":{"id":6891,"name":"licenseInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"9800:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_LicenseInfo_$6292_storage_$","typeString":"mapping(uint256 => struct ReaderLicenseAMM.LicenseInfo storage ref)"}},"id":6893,"indexExpression":{"id":6892,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"9812:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9800:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_LicenseInfo_$6292_storage","typeString":"struct ReaderLicenseAMM.LicenseInfo storage ref"}},"id":6894,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9824:14:17","memberName":"activeLicenses","nodeType":"MemberAccess","referencedDeclaration":6289,"src":"9800:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6896,"nodeType":"ExpressionStatement","src":"9800:40:17"},{"expression":{"arguments":[{"expression":{"id":6898,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9856:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9860:6:17","memberName":"sender","nodeType":"MemberAccess","src":"9856:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6900,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"9868:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":6901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9880:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":6897,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"9850:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":6902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9850:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6903,"nodeType":"ExpressionStatement","src":"9850:32:17"},{"assignments":[6905],"declarations":[{"constant":false,"id":6905,"mutability":"mutable","name":"expiryTime","nameLocation":"9939:10:17","nodeType":"VariableDeclaration","scope":6946,"src":"9931:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6904,"name":"uint256","nodeType":"ElementaryTypeName","src":"9931:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6910,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6906,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9952:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9958:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"9952:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"37","id":6908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9970:6:17","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"src":"9952:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9931:45:17"},{"expression":{"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":6911,"name":"accessInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"9986:10:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_AccessInfo_$6297_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct ReaderLicenseAMM.AccessInfo storage ref))"}},"id":6915,"indexExpression":{"id":6912,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"9997:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9986:22:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccessInfo_$6297_storage_$","typeString":"mapping(address => struct ReaderLicenseAMM.AccessInfo storage ref)"}},"id":6916,"indexExpression":{"expression":{"id":6913,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10009:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10013:6:17","memberName":"sender","nodeType":"MemberAccess","src":"10009:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9986:34:17","typeDescriptions":{"typeIdentifier":"t_struct$_AccessInfo_$6297_storage","typeString":"struct ReaderLicenseAMM.AccessInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6918,"name":"expiryTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"10060:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":6919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10095:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6917,"name":"AccessInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"10023:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AccessInfo_$6297_storage_ptr_$","typeString":"type(struct ReaderLicenseAMM.AccessInfo storage pointer)"}},"id":6920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["10048:10:17","10084:9:17"],"names":["expiryTime","hasAccess"],"nodeType":"FunctionCall","src":"10023:87:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessInfo_$6297_memory_ptr","typeString":"struct ReaderLicenseAMM.AccessInfo memory"}},"src":"9986:124:17","typeDescriptions":{"typeIdentifier":"t_struct$_AccessInfo_$6297_storage","typeString":"struct ReaderLicenseAMM.AccessInfo storage ref"}},"id":6922,"nodeType":"ExpressionStatement","src":"9986:124:17"},{"eventCall":{"arguments":[{"id":6924,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"10148:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6925,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10160:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10164:6:17","memberName":"sender","nodeType":"MemberAccess","src":"10160:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6927,"name":"expiryTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"10172:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6923,"name":"LicenseBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"10134:13:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10134:49:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6929,"nodeType":"EmitStatement","src":"10129:54:17"},{"eventCall":{"arguments":[{"id":6931,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"10212:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6932,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10224:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10228:6:17","memberName":"sender","nodeType":"MemberAccess","src":"10224:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6934,"name":"expiryTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"10236:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6930,"name":"AccessGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6388,"src":"10198:13:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":6935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10198:49:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6936,"nodeType":"EmitStatement","src":"10193:54:17"},{"condition":{"arguments":[{"id":6938,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"10327:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6937,"name":"shouldRegenerate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"10310:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10310:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6945,"nodeType":"IfStatement","src":"10306:90:17","trueBody":{"id":6944,"nodeType":"Block","src":"10340:56:17","statements":[{"expression":{"arguments":[{"id":6941,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"10374:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6940,"name":"_regenerateLicenses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"10354:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10354:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6943,"nodeType":"ExpressionStatement","src":"10354:31:17"}]}}]},"functionSelector":"f24c4eac","id":6947,"implemented":true,"kind":"function","modifiers":[],"name":"burnLicenseForAccess","nameLocation":"9480:20:17","nodeType":"FunctionDefinition","parameters":{"id":6859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6858,"mutability":"mutable","name":"_articleId","nameLocation":"9509:10:17","nodeType":"VariableDeclaration","scope":6947,"src":"9501:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6857,"name":"uint256","nodeType":"ElementaryTypeName","src":"9501:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9500:20:17"},"returnParameters":{"id":6860,"nodeType":"ParameterList","parameters":[],"src":"9530:0:17"},"scope":7353,"src":"9471:931:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6990,"nodeType":"Block","src":"10536:376:17","statements":[{"assignments":[6955],"declarations":[{"constant":false,"id":6955,"mutability":"mutable","name":"totalGenerated","nameLocation":"10554:14:17","nodeType":"VariableDeclaration","scope":6990,"src":"10546:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6954,"name":"uint256","nodeType":"ElementaryTypeName","src":"10546:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6960,"initialValue":{"expression":{"baseExpression":{"id":6956,"name":"licenseInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"10571:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_LicenseInfo_$6292_storage_$","typeString":"mapping(uint256 => struct ReaderLicenseAMM.LicenseInfo storage ref)"}},"id":6958,"indexExpression":{"id":6957,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"10583:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10571:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_LicenseInfo_$6292_storage","typeString":"struct ReaderLicenseAMM.LicenseInfo storage ref"}},"id":6959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10595:14:17","memberName":"totalGenerated","nodeType":"MemberAccess","referencedDeclaration":6287,"src":"10571:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10546:63:17"},{"assignments":[6962],"declarations":[{"constant":false,"id":6962,"mutability":"mutable","name":"activeLicenses","nameLocation":"10627:14:17","nodeType":"VariableDeclaration","scope":6990,"src":"10619:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6961,"name":"uint256","nodeType":"ElementaryTypeName","src":"10619:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6967,"initialValue":{"expression":{"baseExpression":{"id":6963,"name":"licenseInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"10644:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_LicenseInfo_$6292_storage_$","typeString":"mapping(uint256 => struct ReaderLicenseAMM.LicenseInfo storage ref)"}},"id":6965,"indexExpression":{"id":6964,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"10656:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10644:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_LicenseInfo_$6292_storage","typeString":"struct ReaderLicenseAMM.LicenseInfo storage ref"}},"id":6966,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10668:14:17","memberName":"activeLicenses","nodeType":"MemberAccess","referencedDeclaration":6289,"src":"10644:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10619:63:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6968,"name":"totalGenerated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"10705:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10723:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10705:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6973,"nodeType":"IfStatement","src":"10701:37:17","trueBody":{"expression":{"hexValue":"66616c7365","id":6971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10733:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6953,"id":6972,"nodeType":"Return","src":"10726:12:17"}},{"assignments":[6975],"declarations":[{"constant":false,"id":6975,"mutability":"mutable","name":"consumedPercentage","nameLocation":"10765:18:17","nodeType":"VariableDeclaration","scope":6990,"src":"10757:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6974,"name":"uint256","nodeType":"ElementaryTypeName","src":"10757:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6985,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6976,"name":"totalGenerated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"10788:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6977,"name":"activeLicenses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"10805:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10788:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6979,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10787:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":6980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10823:3:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"10787:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6982,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10786:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6983,"name":"totalGenerated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"10830:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10786:58:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10757:87:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6986,"name":"consumedPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6975,"src":"10861:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6987,"name":"REGENERATION_THRESHOLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6260,"src":"10883:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10861:44:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6953,"id":6989,"nodeType":"Return","src":"10854:51:17"}]},"functionSelector":"43c7580e","id":6991,"implemented":true,"kind":"function","modifiers":[],"name":"shouldRegenerate","nameLocation":"10472:16:17","nodeType":"FunctionDefinition","parameters":{"id":6950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6949,"mutability":"mutable","name":"_articleId","nameLocation":"10497:10:17","nodeType":"VariableDeclaration","scope":6991,"src":"10489:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6948,"name":"uint256","nodeType":"ElementaryTypeName","src":"10489:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10488:20:17"},"returnParameters":{"id":6953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6991,"src":"10530:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6951,"name":"bool","nodeType":"ElementaryTypeName","src":"10530:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10529:6:17"},"scope":7353,"src":"10463:449:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7027,"nodeType":"Block","src":"11036:343:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":6998,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"11071:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6997,"name":"shouldRegenerate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"11054:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":6999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11054:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526567656e65726174696f6e206e6f74206e6565646564","id":7000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11084:25:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_505b3c03a2d1242a4d3c292f38cf504cc88a090689b7882f619570cb2c58f44d","typeString":"literal_string \"Regeneration not needed\""},"value":"Regeneration not needed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_505b3c03a2d1242a4d3c292f38cf504cc88a090689b7882f619570cb2c58f44d","typeString":"literal_string \"Regeneration not needed\""}],"id":6996,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11046:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11046:64:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7002,"nodeType":"ExpressionStatement","src":"11046:64:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7004,"name":"gasPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"11128:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7005,"name":"GAS_REIMBURSEMENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6269,"src":"11139:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11128:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742067617320706f6f6c","id":7007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11158:23:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7b65f7d0ddecda7e09a00b852135c4f68c3bb0372a2d1133e0a407a6fbdbc383","typeString":"literal_string \"Insufficient gas pool\""},"value":"Insufficient gas pool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7b65f7d0ddecda7e09a00b852135c4f68c3bb0372a2d1133e0a407a6fbdbc383","typeString":"literal_string \"Insufficient gas pool\""}],"id":7003,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11120:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11120:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7009,"nodeType":"ExpressionStatement","src":"11120:62:17"},{"expression":{"arguments":[{"id":7011,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"11221:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7010,"name":"_regenerateLicenses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"11201:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11201:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7013,"nodeType":"ExpressionStatement","src":"11201:31:17"},{"expression":{"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7014,"name":"gasPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"11287:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7015,"name":"GAS_REIMBURSEMENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6269,"src":"11298:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11287:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7017,"nodeType":"ExpressionStatement","src":"11287:28:17"},{"expression":{"arguments":[{"id":7024,"name":"GAS_REIMBURSEMENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6269,"src":"11354:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":7020,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11333:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11337:6:17","memberName":"sender","nodeType":"MemberAccess","src":"11333:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11325:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7018,"name":"address","nodeType":"ElementaryTypeName","src":"11325:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":7022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11325:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11345:8:17","memberName":"transfer","nodeType":"MemberAccess","src":"11325:28:17","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11325:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7026,"nodeType":"ExpressionStatement","src":"11325:47:17"}]},"functionSelector":"75315716","id":7028,"implemented":true,"kind":"function","modifiers":[],"name":"regenerateLicenses","nameLocation":"10988:18:17","nodeType":"FunctionDefinition","parameters":{"id":6994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6993,"mutability":"mutable","name":"_articleId","nameLocation":"11015:10:17","nodeType":"VariableDeclaration","scope":7028,"src":"11007:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6992,"name":"uint256","nodeType":"ElementaryTypeName","src":"11007:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11006:20:17"},"returnParameters":{"id":6995,"nodeType":"ParameterList","parameters":[],"src":"11036:0:17"},"scope":7353,"src":"10979:400:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7141,"nodeType":"Block","src":"11478:1135:17","statements":[{"assignments":[7034],"declarations":[{"constant":false,"id":7034,"mutability":"mutable","name":"totalGenerated","nameLocation":"11496:14:17","nodeType":"VariableDeclaration","scope":7141,"src":"11488:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7033,"name":"uint256","nodeType":"ElementaryTypeName","src":"11488:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7039,"initialValue":{"expression":{"baseExpression":{"id":7035,"name":"licenseInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"11513:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_LicenseInfo_$6292_storage_$","typeString":"mapping(uint256 => struct ReaderLicenseAMM.LicenseInfo storage ref)"}},"id":7037,"indexExpression":{"id":7036,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7030,"src":"11525:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11513:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_LicenseInfo_$6292_storage","typeString":"struct ReaderLicenseAMM.LicenseInfo storage ref"}},"id":7038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11537:14:17","memberName":"totalGenerated","nodeType":"MemberAccess","referencedDeclaration":6287,"src":"11513:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11488:63:17"},{"assignments":[7041],"declarations":[{"constant":false,"id":7041,"mutability":"mutable","name":"activeLicenses","nameLocation":"11569:14:17","nodeType":"VariableDeclaration","scope":7141,"src":"11561:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7040,"name":"uint256","nodeType":"ElementaryTypeName","src":"11561:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7046,"initialValue":{"expression":{"baseExpression":{"id":7042,"name":"licenseInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"11586:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_LicenseInfo_$6292_storage_$","typeString":"mapping(uint256 => struct ReaderLicenseAMM.LicenseInfo storage ref)"}},"id":7044,"indexExpression":{"id":7043,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7030,"src":"11598:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11586:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_LicenseInfo_$6292_storage","typeString":"struct ReaderLicenseAMM.LicenseInfo storage ref"}},"id":7045,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11610:14:17","memberName":"activeLicenses","nodeType":"MemberAccess","referencedDeclaration":6289,"src":"11586:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11561:63:17"},{"assignments":[7048],"declarations":[{"constant":false,"id":7048,"mutability":"mutable","name":"deltaToRegenerate","nameLocation":"11642:17:17","nodeType":"VariableDeclaration","scope":7141,"src":"11634:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7047,"name":"uint256","nodeType":"ElementaryTypeName","src":"11634:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7052,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7049,"name":"totalGenerated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"11662:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7050,"name":"activeLicenses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7041,"src":"11679:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11662:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11634:59:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7053,"name":"deltaToRegenerate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"11716:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11737:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11716:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7057,"nodeType":"IfStatement","src":"11712:35:17","trueBody":{"functionReturnParameters":7032,"id":7056,"nodeType":"Return","src":"11740:7:17"}},{"assignments":[7062],"declarations":[{"constant":false,"id":7062,"mutability":"mutable","name":"nftHolders","nameLocation":"11838:10:17","nodeType":"VariableDeclaration","scope":7141,"src":"11821:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7060,"name":"address","nodeType":"ElementaryTypeName","src":"11821:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7061,"nodeType":"ArrayTypeName","src":"11821:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":7067,"initialValue":{"arguments":[{"id":7065,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7030,"src":"11884:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7063,"name":"ENCRYPTED_ARTICLES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"11851:18:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEncryptedArticles_$6250","typeString":"contract IEncryptedArticles"}},"id":7064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11870:13:17","memberName":"getNFTHolders","nodeType":"MemberAccess","referencedDeclaration":6249,"src":"11851:32:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) view external returns (address[] memory)"}},"id":7066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11851:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11821:74:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7069,"name":"nftHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"11913:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":7070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11924:6:17","memberName":"length","nodeType":"MemberAccess","src":"11913:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11933:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11913:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f204e465420686f6c64657273","id":7073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11936:16:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_4ef9b88a54a265c48fb3629094312f1184fe2b68ec62520dd26469ef0113617c","typeString":"literal_string \"No NFT holders\""},"value":"No NFT holders"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4ef9b88a54a265c48fb3629094312f1184fe2b68ec62520dd26469ef0113617c","typeString":"literal_string \"No NFT holders\""}],"id":7068,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11905:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11905:48:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7075,"nodeType":"ExpressionStatement","src":"11905:48:17"},{"body":{"id":7109,"nodeType":"Block","src":"12063:181:17","statements":[{"assignments":[7087],"declarations":[{"constant":false,"id":7087,"mutability":"mutable","name":"recipient","nameLocation":"12085:9:17","nodeType":"VariableDeclaration","scope":7109,"src":"12077:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7086,"name":"address","nodeType":"ElementaryTypeName","src":"12077:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7094,"initialValue":{"baseExpression":{"id":7088,"name":"nftHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"12097:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":7093,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7089,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7077,"src":"12108:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":7090,"name":"nftHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"12112:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":7091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12123:6:17","memberName":"length","nodeType":"MemberAccess","src":"12112:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12108:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12097:33:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12077:53:17"},{"expression":{"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12144:40:17","subExpression":{"baseExpression":{"baseExpression":{"id":7095,"name":"licenseBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"12144:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":7098,"indexExpression":{"id":7096,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7030,"src":"12160:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12144:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7099,"indexExpression":{"id":7097,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"12172:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12144:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7101,"nodeType":"ExpressionStatement","src":"12144:40:17"},{"expression":{"arguments":[{"id":7103,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"12204:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7104,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7030,"src":"12215:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":7105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12227:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"","id":7106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12230:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":7102,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"12198:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":7107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12198:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7108,"nodeType":"ExpressionStatement","src":"12198:35:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7080,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7077,"src":"12035:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7081,"name":"deltaToRegenerate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"12039:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12035:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7110,"initializationExpression":{"assignments":[7077],"declarations":[{"constant":false,"id":7077,"mutability":"mutable","name":"i","nameLocation":"12028:1:17","nodeType":"VariableDeclaration","scope":7110,"src":"12020:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7076,"name":"uint256","nodeType":"ElementaryTypeName","src":"12020:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7079,"initialValue":{"hexValue":"30","id":7078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12032:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12020:13:17"},"loopExpression":{"expression":{"id":7084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12058:3:17","subExpression":{"id":7083,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7077,"src":"12058:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7085,"nodeType":"ExpressionStatement","src":"12058:3:17"},"nodeType":"ForStatement","src":"12015:229:17"},{"expression":{"id":7116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7111,"name":"licenseInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"12293:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_LicenseInfo_$6292_storage_$","typeString":"mapping(uint256 => struct ReaderLicenseAMM.LicenseInfo storage ref)"}},"id":7113,"indexExpression":{"id":7112,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7030,"src":"12305:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12293:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_LicenseInfo_$6292_storage","typeString":"struct ReaderLicenseAMM.LicenseInfo storage ref"}},"id":7114,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12317:14:17","memberName":"activeLicenses","nodeType":"MemberAccess","referencedDeclaration":6289,"src":"12293:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7115,"name":"deltaToRegenerate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"12335:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12293:59:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7117,"nodeType":"ExpressionStatement","src":"12293:59:17"},{"expression":{"id":7124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7118,"name":"licenseInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"12362:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_LicenseInfo_$6292_storage_$","typeString":"mapping(uint256 => struct ReaderLicenseAMM.LicenseInfo storage ref)"}},"id":7120,"indexExpression":{"id":7119,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7030,"src":"12374:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12362:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_LicenseInfo_$6292_storage","typeString":"struct ReaderLicenseAMM.LicenseInfo storage ref"}},"id":7121,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12386:20:17","memberName":"lastRegenerationTime","nodeType":"MemberAccess","referencedDeclaration":6291,"src":"12362:44:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7122,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12409:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12415:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"12409:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12362:62:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7125,"nodeType":"ExpressionStatement","src":"12362:62:17"},{"expression":{"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7126,"name":"totalLicensesEverGenerated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"12434:26:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":7128,"indexExpression":{"id":7127,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7030,"src":"12461:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12434:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7129,"name":"deltaToRegenerate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"12476:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12434:59:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7131,"nodeType":"ExpressionStatement","src":"12434:59:17"},{"eventCall":{"arguments":[{"id":7133,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7030,"src":"12536:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7134,"name":"deltaToRegenerate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"12548:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":7135,"name":"licenseInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"12567:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_LicenseInfo_$6292_storage_$","typeString":"mapping(uint256 => struct ReaderLicenseAMM.LicenseInfo storage ref)"}},"id":7137,"indexExpression":{"id":7136,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7030,"src":"12579:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12567:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_LicenseInfo_$6292_storage","typeString":"struct ReaderLicenseAMM.LicenseInfo storage ref"}},"id":7138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12591:14:17","memberName":"activeLicenses","nodeType":"MemberAccess","referencedDeclaration":6289,"src":"12567:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7132,"name":"LicenseRegenerated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"12517:18:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12517:89:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7140,"nodeType":"EmitStatement","src":"12512:94:17"}]},"id":7142,"implemented":true,"kind":"function","modifiers":[],"name":"_regenerateLicenses","nameLocation":"11429:19:17","nodeType":"FunctionDefinition","parameters":{"id":7031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7030,"mutability":"mutable","name":"_articleId","nameLocation":"11457:10:17","nodeType":"VariableDeclaration","scope":7142,"src":"11449:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7029,"name":"uint256","nodeType":"ElementaryTypeName","src":"11449:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11448:20:17"},"returnParameters":{"id":7032,"nodeType":"ParameterList","parameters":[],"src":"11478:0:17"},"scope":7353,"src":"11420:1193:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7169,"nodeType":"Block","src":"12756:145:17","statements":[{"assignments":[7153],"declarations":[{"constant":false,"id":7153,"mutability":"mutable","name":"access","nameLocation":"12784:6:17","nodeType":"VariableDeclaration","scope":7169,"src":"12766:24:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AccessInfo_$6297_memory_ptr","typeString":"struct ReaderLicenseAMM.AccessInfo"},"typeName":{"id":7152,"nodeType":"UserDefinedTypeName","pathNode":{"id":7151,"name":"AccessInfo","nameLocations":["12766:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":6297,"src":"12766:10:17"},"referencedDeclaration":6297,"src":"12766:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_AccessInfo_$6297_storage_ptr","typeString":"struct ReaderLicenseAMM.AccessInfo"}},"visibility":"internal"}],"id":7159,"initialValue":{"baseExpression":{"baseExpression":{"id":7154,"name":"accessInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"12793:10:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_AccessInfo_$6297_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct ReaderLicenseAMM.AccessInfo storage ref))"}},"id":7156,"indexExpression":{"id":7155,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7144,"src":"12804:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12793:22:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccessInfo_$6297_storage_$","typeString":"mapping(address => struct ReaderLicenseAMM.AccessInfo storage ref)"}},"id":7158,"indexExpression":{"id":7157,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"12816:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12793:29:17","typeDescriptions":{"typeIdentifier":"t_struct$_AccessInfo_$6297_storage","typeString":"struct ReaderLicenseAMM.AccessInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12766:56:17"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7160,"name":"access","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7153,"src":"12839:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_AccessInfo_$6297_memory_ptr","typeString":"struct ReaderLicenseAMM.AccessInfo memory"}},"id":7161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12846:9:17","memberName":"hasAccess","nodeType":"MemberAccess","referencedDeclaration":6296,"src":"12839:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7162,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12859:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12865:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"12859:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7164,"name":"access","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7153,"src":"12877:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_AccessInfo_$6297_memory_ptr","typeString":"struct ReaderLicenseAMM.AccessInfo memory"}},"id":7165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12884:10:17","memberName":"expiryTime","nodeType":"MemberAccess","referencedDeclaration":6294,"src":"12877:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12859:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12839:55:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7150,"id":7168,"nodeType":"Return","src":"12832:62:17"}]},"functionSelector":"f499924b","id":7170,"implemented":true,"kind":"function","modifiers":[],"name":"hasActiveAccess","nameLocation":"12678:15:17","nodeType":"FunctionDefinition","parameters":{"id":7147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7144,"mutability":"mutable","name":"_articleId","nameLocation":"12702:10:17","nodeType":"VariableDeclaration","scope":7170,"src":"12694:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7143,"name":"uint256","nodeType":"ElementaryTypeName","src":"12694:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7146,"mutability":"mutable","name":"_user","nameLocation":"12722:5:17","nodeType":"VariableDeclaration","scope":7170,"src":"12714:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7145,"name":"address","nodeType":"ElementaryTypeName","src":"12714:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12693:35:17"},"returnParameters":{"id":7150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7170,"src":"12750:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7148,"name":"bool","nodeType":"ElementaryTypeName","src":"12750:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12749:6:17"},"scope":7353,"src":"12669:232:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7195,"nodeType":"Block","src":"13067:416:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":7179,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7172,"src":"13101:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7180,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13113:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13117:6:17","memberName":"sender","nodeType":"MemberAccess","src":"13113:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7178,"name":"hasActiveAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"13085:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address) view returns (bool)"}},"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13085:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206163746976652061636365737320746f20746869732061727469636c65","id":7183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13126:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89dbada10e4a7d1f0ddf6382a5942288e39b6c153a1413ba3a5675f79cd482a","typeString":"literal_string \"No active access to this article\""},"value":"No active access to this article"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c89dbada10e4a7d1f0ddf6382a5942288e39b6c153a1413ba3a5675f79cd482a","typeString":"literal_string \"No active access to this article\""}],"id":7177,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13077:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13077:84:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7185,"nodeType":"ExpressionStatement","src":"13077:84:17"},{"assignments":[null,null,7187,null,null,null,null,null,null,null,null,null,null,null],"declarations":[null,null,{"constant":false,"id":7187,"mutability":"mutable","name":"encryptedContent","nameLocation":"13283:16:17","nodeType":"VariableDeclaration","scope":7195,"src":"13269:30:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7186,"name":"string","nodeType":"ElementaryTypeName","src":"13269:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},null,null,null,null,null,null,null,null,null,null,null],"id":7192,"initialValue":{"arguments":[{"id":7190,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7172,"src":"13352:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7188,"name":"ENCRYPTED_ARTICLES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"13324:18:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEncryptedArticles_$6250","typeString":"contract IEncryptedArticles"}},"id":7189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13343:8:17","memberName":"articles","nodeType":"MemberAccess","referencedDeclaration":6241,"src":"13324:27:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint256_$","typeString":"function (uint256) view external returns (uint256,string memory,string memory,string memory,address,string memory,string memory,uint256,uint256,uint256,uint256,uint256,uint8,uint256)"}},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13324:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint256_$","typeString":"tuple(uint256,string memory,string memory,string memory,address,string memory,string memory,uint256,uint256,uint256,uint256,uint256,uint8,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13264:99:17"},{"expression":{"id":7193,"name":"encryptedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"13460:16:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7176,"id":7194,"nodeType":"Return","src":"13453:23:17"}]},"functionSelector":"8d40e0cd","id":7196,"implemented":true,"kind":"function","modifiers":[],"name":"getEncryptedContent","nameLocation":"12989:19:17","nodeType":"FunctionDefinition","parameters":{"id":7173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7172,"mutability":"mutable","name":"_articleId","nameLocation":"13017:10:17","nodeType":"VariableDeclaration","scope":7196,"src":"13009:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7171,"name":"uint256","nodeType":"ElementaryTypeName","src":"13009:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13008:20:17"},"returnParameters":{"id":7176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7196,"src":"13052:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7174,"name":"string","nodeType":"ElementaryTypeName","src":"13052:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13051:15:17"},"scope":7353,"src":"12980:503:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7212,"nodeType":"Block","src":"13610:276:17","statements":[{"assignments":[null,null,null,7204,null,null,null,null,null,null,null,null,null,null],"declarations":[null,null,null,{"constant":false,"id":7204,"mutability":"mutable","name":"summary","nameLocation":"13716:7:17","nodeType":"VariableDeclaration","scope":7212,"src":"13702:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7203,"name":"string","nodeType":"ElementaryTypeName","src":"13702:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},null,null,null,null,null,null,null,null,null,null],"id":7209,"initialValue":{"arguments":[{"id":7207,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7198,"src":"13774:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7205,"name":"ENCRYPTED_ARTICLES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"13746:18:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEncryptedArticles_$6250","typeString":"contract IEncryptedArticles"}},"id":7206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13765:8:17","memberName":"articles","nodeType":"MemberAccess","referencedDeclaration":6241,"src":"13746:27:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint256_$","typeString":"function (uint256) view external returns (uint256,string memory,string memory,string memory,address,string memory,string memory,uint256,uint256,uint256,uint256,uint256,uint8,uint256)"}},"id":7208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13746:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint256_$","typeString":"tuple(uint256,string memory,string memory,string memory,address,string memory,string memory,uint256,uint256,uint256,uint256,uint256,uint8,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13695:90:17"},{"expression":{"id":7210,"name":"summary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"13872:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7202,"id":7211,"nodeType":"Return","src":"13865:14:17"}]},"functionSelector":"607ea36d","id":7213,"implemented":true,"kind":"function","modifiers":[],"name":"getArticleSummary","nameLocation":"13534:17:17","nodeType":"FunctionDefinition","parameters":{"id":7199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7198,"mutability":"mutable","name":"_articleId","nameLocation":"13560:10:17","nodeType":"VariableDeclaration","scope":7213,"src":"13552:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7197,"name":"uint256","nodeType":"ElementaryTypeName","src":"13552:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13551:20:17"},"returnParameters":{"id":7202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7213,"src":"13595:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7200,"name":"string","nodeType":"ElementaryTypeName","src":"13595:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13594:15:17"},"scope":7353,"src":"13525:361:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7275,"nodeType":"Block","src":"14040:356:17","statements":[{"assignments":[7228],"declarations":[{"constant":false,"id":7228,"mutability":"mutable","name":"nftHolders","nameLocation":"14067:10:17","nodeType":"VariableDeclaration","scope":7275,"src":"14050:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7226,"name":"address","nodeType":"ElementaryTypeName","src":"14050:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7227,"nodeType":"ArrayTypeName","src":"14050:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":7233,"initialValue":{"arguments":[{"id":7231,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"14113:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7229,"name":"ENCRYPTED_ARTICLES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"14080:18:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEncryptedArticles_$6250","typeString":"contract IEncryptedArticles"}},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14099:13:17","memberName":"getNFTHolders","nodeType":"MemberAccess","referencedDeclaration":6249,"src":"14080:32:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) view external returns (address[] memory)"}},"id":7232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14080:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14050:74:17"},{"assignments":[7238],"declarations":[{"constant":false,"id":7238,"mutability":"mutable","name":"balances","nameLocation":"14151:8:17","nodeType":"VariableDeclaration","scope":7275,"src":"14134:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7236,"name":"uint256","nodeType":"ElementaryTypeName","src":"14134:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7237,"nodeType":"ArrayTypeName","src":"14134:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":7245,"initialValue":{"arguments":[{"expression":{"id":7242,"name":"nftHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"14176:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":7243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14187:6:17","memberName":"length","nodeType":"MemberAccess","src":"14176:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14162:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":7239,"name":"uint256","nodeType":"ElementaryTypeName","src":"14166:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7240,"nodeType":"ArrayTypeName","src":"14166:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":7244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14162:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14134:60:17"},{"body":{"id":7269,"nodeType":"Block","src":"14261:81:17","statements":[{"expression":{"id":7267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7257,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7238,"src":"14275:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7259,"indexExpression":{"id":7258,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7247,"src":"14284:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14275:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":7260,"name":"licenseBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"14289:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":7262,"indexExpression":{"id":7261,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"14305:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14289:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7266,"indexExpression":{"baseExpression":{"id":7263,"name":"nftHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"14317:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":7265,"indexExpression":{"id":7264,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7247,"src":"14328:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14317:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14289:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14275:56:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7268,"nodeType":"ExpressionStatement","src":"14275:56:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7250,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7247,"src":"14233:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7251,"name":"nftHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"14237:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":7252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14248:6:17","memberName":"length","nodeType":"MemberAccess","src":"14237:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14233:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7270,"initializationExpression":{"assignments":[7247],"declarations":[{"constant":false,"id":7247,"mutability":"mutable","name":"i","nameLocation":"14226:1:17","nodeType":"VariableDeclaration","scope":7270,"src":"14218:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7246,"name":"uint256","nodeType":"ElementaryTypeName","src":"14218:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7249,"initialValue":{"hexValue":"30","id":7248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14230:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14218:13:17"},"loopExpression":{"expression":{"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14256:3:17","subExpression":{"id":7254,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7247,"src":"14256:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7256,"nodeType":"ExpressionStatement","src":"14256:3:17"},"nodeType":"ForStatement","src":"14213:129:17"},{"expression":{"components":[{"id":7271,"name":"nftHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"14368:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":7272,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7238,"src":"14380:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":7273,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14367:22:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":7223,"id":7274,"nodeType":"Return","src":"14360:29:17"}]},"functionSelector":"b3c655c0","id":7276,"implemented":true,"kind":"function","modifiers":[],"name":"getLicenseHolders","nameLocation":"13943:17:17","nodeType":"FunctionDefinition","parameters":{"id":7216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7215,"mutability":"mutable","name":"_articleId","nameLocation":"13969:10:17","nodeType":"VariableDeclaration","scope":7276,"src":"13961:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7214,"name":"uint256","nodeType":"ElementaryTypeName","src":"13961:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13960:20:17"},"returnParameters":{"id":7223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7276,"src":"14004:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7217,"name":"address","nodeType":"ElementaryTypeName","src":"14004:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7218,"nodeType":"ArrayTypeName","src":"14004:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":7222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7276,"src":"14022:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7220,"name":"uint256","nodeType":"ElementaryTypeName","src":"14022:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7221,"nodeType":"ArrayTypeName","src":"14022:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14003:36:17"},"scope":7353,"src":"13934:462:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7289,"nodeType":"Block","src":"14541:51:17","statements":[{"expression":{"baseExpression":{"id":7285,"name":"purchaseHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"14558:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_PurchaseRecord_$6306_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct ReaderLicenseAMM.PurchaseRecord storage ref[] storage ref)"}},"id":7287,"indexExpression":{"id":7286,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7278,"src":"14574:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14558:27:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PurchaseRecord_$6306_storage_$dyn_storage","typeString":"struct ReaderLicenseAMM.PurchaseRecord storage ref[] storage ref"}},"functionReturnParameters":7284,"id":7288,"nodeType":"Return","src":"14551:34:17"}]},"functionSelector":"f4bf28a0","id":7290,"implemented":true,"kind":"function","modifiers":[],"name":"getPurchaseHistory","nameLocation":"14454:18:17","nodeType":"FunctionDefinition","parameters":{"id":7279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7278,"mutability":"mutable","name":"_articleId","nameLocation":"14481:10:17","nodeType":"VariableDeclaration","scope":7290,"src":"14473:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7277,"name":"uint256","nodeType":"ElementaryTypeName","src":"14473:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14472:20:17"},"returnParameters":{"id":7284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7290,"src":"14516:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PurchaseRecord_$6306_memory_ptr_$dyn_memory_ptr","typeString":"struct ReaderLicenseAMM.PurchaseRecord[]"},"typeName":{"baseType":{"id":7281,"nodeType":"UserDefinedTypeName","pathNode":{"id":7280,"name":"PurchaseRecord","nameLocations":["14516:14:17"],"nodeType":"IdentifierPath","referencedDeclaration":6306,"src":"14516:14:17"},"referencedDeclaration":6306,"src":"14516:14:17","typeDescriptions":{"typeIdentifier":"t_struct$_PurchaseRecord_$6306_storage_ptr","typeString":"struct ReaderLicenseAMM.PurchaseRecord"}},"id":7282,"nodeType":"ArrayTypeName","src":"14516:16:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PurchaseRecord_$6306_storage_$dyn_storage_ptr","typeString":"struct ReaderLicenseAMM.PurchaseRecord[]"}},"visibility":"internal"}],"src":"14515:25:17"},"scope":7353,"src":"14445:147:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7312,"nodeType":"Block","src":"14680:105:17","statements":[{"assignments":[7296],"declarations":[{"constant":false,"id":7296,"mutability":"mutable","name":"amount","nameLocation":"14698:6:17","nodeType":"VariableDeclaration","scope":7312,"src":"14690:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7295,"name":"uint256","nodeType":"ElementaryTypeName","src":"14690:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7298,"initialValue":{"id":7297,"name":"gasPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"14707:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14690:24:17"},{"expression":{"id":7301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7299,"name":"gasPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"14724:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14734:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14724:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7302,"nodeType":"ExpressionStatement","src":"14724:11:17"},{"expression":{"arguments":[{"id":7309,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"14771:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":7305,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"14753:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14753:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14745:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7303,"name":"address","nodeType":"ElementaryTypeName","src":"14745:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14745:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14762:8:17","memberName":"transfer","nodeType":"MemberAccess","src":"14745:25:17","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14745:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7311,"nodeType":"ExpressionStatement","src":"14745:33:17"}]},"functionSelector":"0813d3f6","id":7313,"implemented":true,"kind":"function","modifiers":[{"id":7293,"kind":"modifierInvocation","modifierName":{"id":7292,"name":"onlyOwner","nameLocations":["14670:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"14670:9:17"},"nodeType":"ModifierInvocation","src":"14670:9:17"}],"name":"emergencyWithdrawGasPool","nameLocation":"14634:24:17","nodeType":"FunctionDefinition","parameters":{"id":7291,"nodeType":"ParameterList","parameters":[],"src":"14658:2:17"},"returnParameters":{"id":7294,"nodeType":"ParameterList","parameters":[],"src":"14680:0:17"},"scope":7353,"src":"14625:160:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[387],"body":{"id":7351,"nodeType":"Block","src":"14900:710:17","statements":[{"assignments":[null,7322,null,7324,null,7326,null,null,null,null,null,null,null,null],"declarations":[null,{"constant":false,"id":7322,"mutability":"mutable","name":"title","nameLocation":"15026:5:17","nodeType":"VariableDeclaration","scope":7351,"src":"15012:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7321,"name":"string","nodeType":"ElementaryTypeName","src":"15012:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},null,{"constant":false,"id":7324,"mutability":"mutable","name":"summary","nameLocation":"15049:7:17","nodeType":"VariableDeclaration","scope":7351,"src":"15035:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7323,"name":"string","nodeType":"ElementaryTypeName","src":"15035:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},null,{"constant":false,"id":7326,"mutability":"mutable","name":"location","nameLocation":"15074:8:17","nodeType":"VariableDeclaration","scope":7351,"src":"15060:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7325,"name":"string","nodeType":"ElementaryTypeName","src":"15060:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},null,null,null,null,null,null,null,null],"id":7331,"initialValue":{"arguments":[{"id":7329,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7315,"src":"15129:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7327,"name":"ENCRYPTED_ARTICLES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"15101:18:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEncryptedArticles_$6250","typeString":"contract IEncryptedArticles"}},"id":7328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15120:8:17","memberName":"articles","nodeType":"MemberAccess","referencedDeclaration":6241,"src":"15101:27:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint256_$","typeString":"function (uint256) view external returns (uint256,string memory,string memory,string memory,address,string memory,string memory,uint256,uint256,uint256,uint256,uint256,uint8,uint256)"}},"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint256_$","typeString":"tuple(uint256,string memory,string memory,string memory,address,string memory,string memory,uint256,uint256,uint256,uint256,uint256,uint8,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15009:128:17"},{"expression":{"arguments":[{"arguments":[{"hexValue":"7b226e616d65223a2022526561646572204c6963656e7365202d20","id":7336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15304:29:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5635b9926f146dbda1fbe0e066ad6a400e8c00de373b06b8d895513acb144500","typeString":"literal_string \"{\"name\": \"Reader License - \""},"value":"{\"name\": \"Reader License - "},{"id":7337,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7322,"src":"15335:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":7338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15342:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"226465736372697074696f6e223a2022","id":7339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15360:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_63efc49e26c2a0691fbd118ad4ace9a69fa64a27d6ecfb0468e1c404f7b79c0a","typeString":"literal_string \"\"description\": \"\""},"value":"\"description\": \""},{"id":7340,"name":"summary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7324,"src":"15380:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":7341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15389:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"2261747472696275746573223a205b","id":7342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15407:17:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c","typeString":"literal_string \"\"attributes\": [\""},"value":"\"attributes\": ["},{"hexValue":"7b2274726169745f74797065223a20224c6f636174696f6e222c202276616c7565223a2022","id":7343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15442:39:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c83c0435c0916415403fd6cd70201187faef53e91ab542a79c4c6ddbe393ac24","typeString":"literal_string \"{\"trait_type\": \"Location\", \"value\": \"\""},"value":"{\"trait_type\": \"Location\", \"value\": \""},{"id":7344,"name":"location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7326,"src":"15483:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"227d2c","id":7345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15493:5:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e7f42fdd49259e0595590a474a25222fd39a13615f6ea5ab69ecfc85ad8702f","typeString":"literal_string \"\"},\""},"value":"\"},"},{"hexValue":"7b2274726169745f74797065223a20224c6963656e73652054797065222c202276616c7565223a202252656164657220416363657373227d","id":7346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15516:58:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_f47743abf3c975c9340d9c89d9c8aaf1b5436af8b53fd9a1716850a6d5478625","typeString":"literal_string \"{\"trait_type\": \"License Type\", \"value\": \"Reader Access\"}\""},"value":"{\"trait_type\": \"License Type\", \"value\": \"Reader Access\"}"},{"hexValue":"5d7d","id":7347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15588:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ab149d31dbf8c3ed1cc7ba15c88205185e426c492b6b350058945b7266ec7e76","typeString":"literal_string \"]}\""},"value":"]}"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_5635b9926f146dbda1fbe0e066ad6a400e8c00de373b06b8d895513acb144500","typeString":"literal_string \"{\"name\": \"Reader License - \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_63efc49e26c2a0691fbd118ad4ace9a69fa64a27d6ecfb0468e1c404f7b79c0a","typeString":"literal_string \"\"description\": \"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c","typeString":"literal_string \"\"attributes\": [\""},{"typeIdentifier":"t_stringliteral_c83c0435c0916415403fd6cd70201187faef53e91ab542a79c4c6ddbe393ac24","typeString":"literal_string \"{\"trait_type\": \"Location\", \"value\": \"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_3e7f42fdd49259e0595590a474a25222fd39a13615f6ea5ab69ecfc85ad8702f","typeString":"literal_string \"\"},\""},{"typeIdentifier":"t_stringliteral_f47743abf3c975c9340d9c89d9c8aaf1b5436af8b53fd9a1716850a6d5478625","typeString":"literal_string \"{\"trait_type\": \"License Type\", \"value\": \"Reader Access\"}\""},{"typeIdentifier":"t_stringliteral_ab149d31dbf8c3ed1cc7ba15c88205185e426c492b6b350058945b7266ec7e76","typeString":"literal_string \"]}\""}],"expression":{"id":7334,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15274:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15278:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"15274:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15274:328:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15267:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7332,"name":"string","nodeType":"ElementaryTypeName","src":"15267:6:17","typeDescriptions":{}}},"id":7349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15267:336:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7320,"id":7350,"nodeType":"Return","src":"15260:343:17"}]},"functionSelector":"0e89341c","id":7352,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"14834:3:17","nodeType":"FunctionDefinition","overrides":{"id":7317,"nodeType":"OverrideSpecifier","overrides":[],"src":"14867:8:17"},"parameters":{"id":7316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7315,"mutability":"mutable","name":"tokenId","nameLocation":"14846:7:17","nodeType":"VariableDeclaration","scope":7352,"src":"14838:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7314,"name":"uint256","nodeType":"ElementaryTypeName","src":"14838:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14837:17:17"},"returnParameters":{"id":7320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7352,"src":"14885:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7318,"name":"string","nodeType":"ElementaryTypeName","src":"14885:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14884:15:17"},"scope":7353,"src":"14825:785:17","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":7354,"src":"1108:14504:17","usedErrors":[13,18,249,254,259,266,271,276,283],"usedEvents":[24,1221,1236,1245,1252,6354,6364,6372,6380,6388]}],"src":"32:15581:17"},"id":17}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x22f099c02c252dd1f6ddc464916ce683294a63b23b3c6ee3d290b77398e2474b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d2ba4b77ecc4f70211e0de1a920e3ea29eb86c3e16ef8f2a7d746c72a97f1e\",\"dweb:/ipfs/QmYBqATARQEnxd33jW6iYCuEPaL6KdYyYSoQrjFXZka3of\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ERC1155Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220629c12e4f6053c5ef78c8b5f964045e7328c6a6da48e0533c3bd8ecba871117c64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x9C12E4 0xF6 SDIV EXTCODECOPY 0x5E 0xF7 DUP13 DUP12 PUSH0 SWAP7 BLOCKHASH GASLIMIT 0xE7 ORIGIN DUP13 PUSH11 0x6DA48E0533C3BD8ECBA871 GT PUSH29 0x64736F6C63430008140033000000000000000000000000000000000000 ","sourceMap":"439:3110:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220629c12e4f6053c5ef78c8b5f964045e7328c6a6da48e0533c3bd8ecba871117c64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x9C12E4 0xF6 SDIV EXTCODECOPY 0x5E 0xF7 DUP13 DUP12 PUSH0 SWAP7 BLOCKHASH GASLIMIT 0xE7 ORIGIN DUP13 PUSH11 0x6DA48E0533C3BD8ECBA871 GT PUSH29 0x64736F6C63430008140033000000000000000000000000000000000000 ","sourceMap":"439:3110:6:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x22f099c02c252dd1f6ddc464916ce683294a63b23b3c6ee3d290b77398e2474b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d2ba4b77ecc4f70211e0de1a920e3ea29eb86c3e16ef8f2a7d746c72a97f1e\",\"dweb:/ipfs/QmYBqATARQEnxd33jW6iYCuEPaL6KdYyYSoQrjFXZka3of\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122055280296780d6f8df40e9b3d4f0469a6b6655101668503663e4d178dba83c05d64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0x28 MUL SWAP7 PUSH25 0xD6F8DF40E9B3D4F0469A6B6655101668503663E4D178DBA83 0xC0 0x5D PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"459:17878:7:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122055280296780d6f8df40e9b3d4f0469a6b6655101668503663e4d178dba83c05d64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0x28 MUL SWAP7 PUSH25 0xD6F8DF40E9B3D4F0469A6B6655101668503663E4D178DBA83 0xC0 0x5D PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"459:17878:7:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212206a1ede170aa015de89e766da23bd0521b7aab0b438bbcfccc9e9af15166161ff64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x1EDE170AA015DE89E766DA 0x23 0xBD SDIV 0x21 0xB7 0xAA 0xB0 0xB4 CODESIZE 0xBB 0xCF 0xCC 0xC9 0xE9 0xAF ISZERO AND PUSH2 0x61FF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"224:218:8:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212206a1ede170aa015de89e766da23bd0521b7aab0b438bbcfccc9e9af15166161ff64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x1EDE170AA015DE89E766DA 0x23 0xBD SDIV 0x21 0xB7 0xAA 0xB0 0xB4 CODESIZE 0xBB 0xCF 0xCC 0xC9 0xE9 0xAF ISZERO AND PUSH2 0x61FF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"224:218:8:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:10:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:10:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220a5213f433903448268aca091d8e104e49bef6d65b8c9874a4552d73eab099afe64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0x21 EXTCODEHASH NUMBER CODECOPY SUB PREVRANDAO DUP3 PUSH9 0xACA091D8E104E49BEF PUSH14 0x65B8C9874A4552D73EAB099AFE64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"1599:3723:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220a5213f433903448268aca091d8e104e49bef6d65b8c9874a4552d73eab099afe64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0x21 EXTCODEHASH NUMBER CODECOPY SUB PREVRANDAO DUP3 PUSH9 0xACA091D8E104E49BEF PUSH14 0x65B8C9874A4552D73EAB099AFE64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"1599:3723:11:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\"; // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ae25a39ead407bec927c6b9123beab38814d0e8e606e6b51ab70c388ccb21b8f64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0x25 LOG3 SWAP15 0xAD BLOCKHASH PUSH28 0xEC927C6B9123BEAB38814D0E8E606E6B51AB70C388CCB21B8F64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1407:2774:12:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220ae25a39ead407bec927c6b9123beab38814d0e8e606e6b51ab70c388ccb21b8f64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0x25 LOG3 SWAP15 0xAD BLOCKHASH PUSH28 0xEC927C6B9123BEAB38814D0E8E606E6B51AB70C388CCB21B8F64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1407:2774:12:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220079cd2c71475848145681b815221685650cc081e23cc8b888477ca686a1c397264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xD2 0xC7 EQ PUSH22 0x848145681B815221685650CC081E23CC8B888477CA68 PUSH11 0x1C397264736F6C63430008 EQ STOP CALLER ","sourceMap":"281:31863:15:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220079cd2c71475848145681b815221685650cc081e23cc8b888477ca686a1c397264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xD2 0xC7 EQ PUSH22 0x848145681B815221685650CC081E23CC8B888477CA68 PUSH11 0x1C397264736F6C63430008 EQ STOP CALLER ","sourceMap":"281:31863:15:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:16:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:16:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"contracts/content/ReaderLicenseAMM.sol":{"IEncryptedArticles":{"abi":[{"inputs":[{"internalType":"uint256","name":"articleId","type":"uint256"}],"name":"articles","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"encryptedContent","type":"string"},{"internalType":"string","name":"summary","type":"string"},{"internalType":"address","name":"author","type":"address"},{"internalType":"string","name":"location","type":"string"},{"internalType":"string","name":"category","type":"string"},{"internalType":"uint256","name":"publishedAt","type":"uint256"},{"internalType":"uint256","name":"nftCount","type":"uint256"},{"internalType":"uint256","name":"nftPrice","type":"uint256"},{"internalType":"uint256","name":"journalistRetained","type":"uint256"},{"internalType":"uint256","name":"readerLicenseRatio","type":"uint256"},{"internalType":"uint8","name":"creationSource","type":"uint8"},{"internalType":"uint256","name":"proposalId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"articleId","type":"uint256"}],"name":"getNFTHolders","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"articles(uint256)":"edcfafe6","getNFTHolders(uint256)":"9fb53fcb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"articleId\",\"type\":\"uint256\"}],\"name\":\"articles\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encryptedContent\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"summary\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"publishedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"journalistRetained\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"readerLicenseRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"creationSource\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"articleId\",\"type\":\"uint256\"}],\"name\":\"getNFTHolders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/content/ReaderLicenseAMM.sol\":\"IEncryptedArticles\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x22f099c02c252dd1f6ddc464916ce683294a63b23b3c6ee3d290b77398e2474b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d2ba4b77ecc4f70211e0de1a920e3ea29eb86c3e16ef8f2a7d746c72a97f1e\",\"dweb:/ipfs/QmYBqATARQEnxd33jW6iYCuEPaL6KdYyYSoQrjFXZka3of\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/content/ReaderLicenseAMM.sol\":{\"keccak256\":\"0xbaa523c1e4466d51dd16d533efbae413ab432ce1c2f7dc23c62977f5145eeea6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c38b8d54acef5bf0b55408f6a1f7fb997b2b7d795f514195df43c58b3655f9b5\",\"dweb:/ipfs/QmRWAQh5ckYnTMNEq9DRWiPvsA8RoB5T4CMYLKX9GRBpaH\"]}},\"version\":1}"},"ReaderLicenseAMM":{"abi":[{"inputs":[{"internalType":"address","name":"_encryptedArticles","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"articleId","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"expiryTime","type":"uint256"}],"name":"AccessGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"articleId","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"expiryTime","type":"uint256"}],"name":"LicenseBurned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"articleId","type":"uint256"},{"indexed":true,"internalType":"address","name":"holder","type":"address"},{"indexed":false,"internalType":"uint256","name":"count","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"editionNumber","type":"uint256"}],"name":"LicenseMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"articleId","type":"uint256"},{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"LicensePurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"articleId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"count","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalActive","type":"uint256"}],"name":"LicenseRegenerated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[],"name":"BASE_PRICE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CREATOR_PERCENTAGE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ENCRYPTED_ARTICLES","outputs":[{"internalType":"contract IEncryptedArticles","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GAS_REIMBURSEMENT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_PRICE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PLATFORM_PERCENTAGE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REGENERATION_THRESHOLD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SELLER_PERCENTAGE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TREASURY","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"accessInfo","outputs":[{"internalType":"uint256","name":"expiryTime","type":"uint256"},{"internalType":"bool","name":"hasAccess","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_articleId","type":"uint256"}],"name":"burnLicenseForAccess","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_articleId","type":"uint256"},{"internalType":"address","name":"_seller","type":"address"}],"name":"buyLicense","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"dailyPurchases","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"emergencyWithdrawGasPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"gasPool","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_articleId","type":"uint256"}],"name":"getArticleSummary","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_articleId","type":"uint256"}],"name":"getCurrentPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_articleId","type":"uint256"}],"name":"getEncryptedContent","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_articleId","type":"uint256"}],"name":"getLicenseHolders","outputs":[{"internalType":"address[]","name":"","type":"address[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_articleId","type":"uint256"}],"name":"getPurchaseHistory","outputs":[{"components":[{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"address","name":"buyer","type":"address"},{"internalType":"address","name":"seller","type":"address"}],"internalType":"struct ReaderLicenseAMM.PurchaseRecord[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_articleId","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"hasActiveAccess","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"licenseBalances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"licenseInfo","outputs":[{"internalType":"uint256","name":"articleId","type":"uint256"},{"internalType":"uint256","name":"editionNumber","type":"uint256"},{"internalType":"uint256","name":"totalGenerated","type":"uint256"},{"internalType":"uint256","name":"activeLicenses","type":"uint256"},{"internalType":"uint256","name":"lastRegenerationTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_articleId","type":"uint256"},{"internalType":"address","name":"_holder","type":"address"},{"internalType":"uint256","name":"_count","type":"uint256"},{"internalType":"uint256","name":"_editionNumber","type":"uint256"}],"name":"mintLicensesToHolder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"purchaseHistory","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"address","name":"buyer","type":"address"},{"internalType":"address","name":"seller","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_articleId","type":"uint256"}],"name":"regenerateLicenses","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_articleId","type":"uint256"}],"name":"shouldRegenerate","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"totalLicensesEverGenerated","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a034620001d8576001600160401b0390601f6200334c38819003918201601f191683019184831184841017620001c257808492602094604052833981010312620001d857516001600160a01b039182821691829003620001d857604051906020820190811182821017620001c25760405260008091526002546001908181811c91168015620001b7575b6020821014620001a357601f811162000159575b50508060025533156200014157600354903360018060a01b03198316176003557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0604051943393169180a360805261316e9081620001de823960805181818161049501528181610b1d01528181610d0201528181610e9301528181610f920152818161139901528181611594015281816127e0015281816128de0152612f480152f35b60249060405190631e4fbdf760e01b82526004820152fd5b60028352601f0160051c7f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace908101905b8181106200019857506200009e565b838155820162000189565b634e487b7160e01b83526022600452602483fd5b90607f16906200008a565b634e487b7160e01b600052604160045260246000fd5b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8062fdd58e1461028657806301c11d961461028157806301ffc9a71461027c5780630813d3f61461027757806309886c9c146102725780630e89341c1461026d5780631453a424146102685780631e084558146102635780632d2c55651461025e5780632eb2c2d61461025957806343c7580e146102545780634e1273f41461024f578063607ea36d1461024a578063715018a6146102455780637200952814610240578063753157161461023b5780638d40e0cd146102365780638da5cb5b1461023157806395f58ab81461022c57806398e9d0e014610227578063996cb74514610222578063a22cb4651461021d578063ab0b8b0414610218578063b3c655c014610213578063bca590031461020e578063c55d0f5614610209578063c98d6e9914610204578063ca9f19ef146101ff578063cb8b2522146101fa578063df81a823146101f5578063e3685397146101f0578063e985e9c5146101eb578063f242432a146101e6578063f24c4eac146101e1578063f2fde38b146101dc578063f499924b146101d7578063f4bf28a0146101d2578063f86325ed146101cd5763fa08b038146101c857600080fd5b611b1a565b611af8565b611a50565b6119bb565b611929565b6117cd565b61170b565b6116a3565b611687565b61153f565b61151d565b611501565b6114c7565b6114a1565b611475565b611361565b6112ab565b6111eb565b610ec2565b610e7d565b610e0e565b610dae565b610cba565b610c0f565b610bf3565b610b95565b610aef565b610a33565b6109c6565b610898565b6106ec565b610694565b61064c565b61045f565b6103e7565b610395565b610327565b6102f2565b6102a1565b6001600160a01b0381160361029c57565b600080fd5b3461029c57604036600319011261029c5760206102e96004356102c38161028b565b6024356000526000835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b3461029c57600036600319011261029c576020604051670de0b6b3a76400008152f35b6001600160e01b031981160361029c57565b3461029c57602036600319011261029c57602060043561034681610315565b63ffffffff60e01b16636cdb3d1360e11b8114908115610384575b8115610373575b506040519015158152f35b6301ffc9a760e01b14905038610368565b6303a24d0760e21b81149150610361565b3461029c576000806003193601126103e4576103af611b38565b80808080600b5481600b5560018060a01b03600354168282156103db575bf1156103d65780f35b612177565b506108fc6103cd565b80fd5b3461029c57600036600319011261029c576020604051600a8152f35b60005b8381106104165750506000910152565b8181015183820152602001610406565b9060209161043f81518092818552858086019101610403565b601f01601f1916010190565b90602061045c928181520190610426565b90565b3461029c57602036600319011261029c576040516376e7d7f360e11b815260048035908201526000816024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa80156103d65760009081928291610617575b506040517f7b226e616d65223a2022526561646572204c6963656e7365202d2000000000006020820152928392603b840161050391613121565b61088b60f21b81526002016f113232b9b1b934b83a34b7b7111d101160811b815260100161053091613121565b61088b60f21b81526002016e2261747472696275746573223a205b60881b8152600f017f7b2274726169745f74797065223a20224c6f636174696f6e222c202276616c7581526432911d101160d91b602082015260250161059091613121565b62089f4b60ea1b81526003017f7b2274726169745f74797065223a20224c6963656e73652054797065222c202281527f76616c7565223a202252656164657220416363657373227d00000000000000006020820152603801615d7d60f01b815260020103601f1981018252610605908261076e565b60405161061381928261044b565b0390f35b91905061063692503d8091833e61062e818361076e565b8101906125d6565b50505050505050509450509190509091386104c9565b3461029c57604036600319011261029c5760206102e960243561066e8161028b565b6004356000526006835260406000209060018060a01b0316600052602052604060002090565b3461029c57602036600319011261029c57600435600052600560205260a06040600020805490600181015490600281015460046003830154920154926040519485526020850152604084015260608301526080820152f35b3461029c57600036600319011261029c576020604051739402f9f20b4a27b55b1cc6cf015d98f764814fb28152f35b634e487b7160e01b600052604160045260246000fd5b6080810190811067ffffffffffffffff82111761074d57604052565b61071b565b6020810190811067ffffffffffffffff82111761074d57604052565b90601f8019910116810190811067ffffffffffffffff82111761074d57604052565b6040519061079d82610731565b565b604051906040820182811067ffffffffffffffff82111761074d57604052565b67ffffffffffffffff811161074d5760051b60200190565b81601f8201121561029c578035916107ee836107bf565b926107fc604051948561076e565b808452602092838086019260051b82010192831161029c578301905b828210610826575050505090565b81358152908301908301610818565b67ffffffffffffffff811161074d57601f01601f191660200190565b81601f8201121561029c5780359061086882610835565b92610876604051948561076e565b8284526020838301011161029c57816000926020809301838601378301015290565b3461029c5760a036600319011261029c57600480356108b68161028b565b6024356108c28161028b565b67ffffffffffffffff9060443582811161029c576108e390369086016107d7565b9060643583811161029c576108fb90369087016107d7565b9260843590811161029c576109139036908701610851565b936001600160a01b038082169033821415806109a2575b6109755783161561095d5715610946576109449550611e95565b005b604051626a0d4560e21b8152600081880152602490fd5b604051632bfa23e760e11b8152600081890152602490fd5b6040805163711bec9160e11b815233818b019081526001600160a01b038616602082015290918291010390fd5b50600082815260016020908152604080832033845290915290205460ff161561092a565b3461029c57602036600319011261029c5760206109e4600435612d87565b6040519015158152f35b90815180825260208080930193019160005b828110610a0e575050505090565b835185529381019392810192600101610a00565b90602061045c9281815201906109ee565b3461029c57604036600319011261029c5760043567ffffffffffffffff80821161029c573660238301121561029c578160040135610a70816107bf565b92610a7e604051948561076e565b81845260209160248386019160051b8301019136831161029c57602401905b828210610ad6578560243586811161029c5761061391610ac4610aca9236906004016107d7565b90611bd4565b60405191829182610a22565b8380918335610ae48161028b565b815201910190610a9d565b3461029c57602036600319011261029c576040516376e7d7f360e11b815260048035908201526000816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa80156103d65761061391600091610b6e575b50604051918291602083526020830190610426565b610b81913d8091833e61062e818361076e565b505050505050505050509250505038610b59565b3461029c576000806003193601126103e457610baf611b38565b600380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b3461029c57600036600319011261029c57602060405160468152f35b3461029c57602036600319011261029c57600435610c2c81612d87565b15610c7557610c506611c37937e0800091610c4b83600b541015612dd3565b612ee2565b610c63610c5e600b5461273a565b600b55565b600080808080943382f1156103d65780f35b60405162461bcd60e51b815260206004820152601760248201527f526567656e65726174696f6e206e6f74206e65656465640000000000000000006044820152606490fd5b3461029c57602036600319011261029c57600435610cd833826130b9565b15610d6a576040516376e7d7f360e11b815260048101919091526000816024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa80156103d65761061391600091610d43575b506040519182918261044b565b610d56913d8091833e61062e818361076e565b505050505050505050505091505038610d36565b606460405162461bcd60e51b815260206004820152602060248201527f4e6f206163746976652061636365737320746f20746869732061727469636c656044820152fd5b3461029c57600036600319011261029c576003546040516001600160a01b039091168152602090f35b634e487b7160e01b600052603260045260246000fd5b8054821015610e095760005260206000209060021b0190600090565b610dd7565b3461029c57604036600319011261029c5760243560043560005260096020526040600020805482101561029c57608091610e4791610ded565b5080549060018101549060018060a01b036003816002840154169201541691604051938452602084015260408301526060820152f35b3461029c57600036600319011261029c576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b604036600319011261029c57602435600435610edd8261028b565b610f17610f0f83610ef8846000526006602052604060002090565b9060018060a01b0316600052602052604060002090565b541515612a1a565b610f2081612799565b91610f2a83612093565b92610f3784341015612a5f565b610f4a610f43826126af565b6064900490565b91610f57610f43836126c5565b94610f6b86610f66868661275e565b61275e565b6040516376e7d7f360e11b8152600481018790526000976001600160a01b039189816024817f000000000000000000000000000000000000000000000000000000000000000087165afa9081156103d6578a916111c3575b50610fdc86610ef88b6000526006602052604060002090565b610fe68154612aa2565b9055611012610fff8a6000526006602052604060002090565b3360009081526020919091526040902090565b61101c8154611bac565b9055611031611029612183565b8a3389611c64565b89808080868a169b8c8282156111ba575bf1156103d6578992839283928392839183156111b0575b1690f1156103d65786808080938181156111a7575b739402f9f20b4a27b55b1cc6cf015d98f764814fb290f1156103d65761111a869261109d610c5e600b54612093565b6110c96201518042046110ba896000526008602052604060002090565b90600052602052604060002090565b6110d38154611bac565b90556110e9876000526009602052604060002090565b6111156110f4610790565b42815260208101889052336040820152926001600160a01b03166060840152565b612aaf565b80341161117a575b5050827f3846a81a03c71d25212027d222553680c4fc1bd52b8dfb1f1fbbbcd74c8fec796040518061115a3395829190602083019252565b0390a461116681612d87565b61116e575080f35b61117790612ee2565b80f35b818061118781933461275e565b81811561119e575b3390f1156103d6578338611122565b506108fc61118f565b506108fc61106e565b6108fc9250611059565b506108fc611042565b6111d791503d808c833e61062e818361076e565b505050505050505050935050505038610fc3565b3461029c57604036600319011261029c576004356112088161028b565b602435908115159081830361029c576001600160a01b038116928315611293576112546112659233600052600160205260406000209060018060a01b0316600052602052604060002090565b9060ff801983541691151516179055565b6040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b60405162ced3e160e81b815260006004820152602490fd5b3461029c57604036600319011261029c5760406112f36024356112cd8161028b565b6004356000526007602052826000209060018060a01b0316600052602052604060002090565b60ff6001825492015416825191825215156020820152f35b9092916040820191604081528451809352606081019260208096019060005b8181106113445750505061045c93948184039101526109ee565b82516001600160a01b03168652948701949187019160010161132a565b3461029c57602036600319011261029c57604051639fb53fcb60e01b8152600480359082018190526000826024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9182156103d657600092611452575b506113d58251611b64565b9160005b81518110156114435761143e9061142d6113fd856000526006602052604060002090565b61141761140a8487611bc0565b516001600160a01b031690565b60018060a01b0316600052602052604060002090565b546114388287611bc0565b52611bac565b6113d9565b6040518061061386858361130b565b61146e91923d8091833e611466818361076e565b810190612e17565b90386113ca565b3461029c57602036600319011261029c57600435600052600a6020526020604060002054604051908152f35b3461029c57602036600319011261029c5760206114bf600435612799565b604051908152f35b3461029c57604036600319011261029c57600435600052600860205260406000206024356000526020526020604060002054604051908152f35b3461029c57600036600319011261029c57602060405160148152f35b3461029c57600036600319011261029c5760206040516611c37937e080008152f35b3461029c57608036600319011261029c5760243560043561155f8261028b565b604435917fe3726a6d4ed43d7d4677d7dffa4cf0a0d67d40db3cd11cccf053dddceaf3d7d3906001600160a01b03906115bb337f0000000000000000000000000000000000000000000000000000000000000000841614612443565b836115d0816000526005602052604060002090565b5560026115e7856000526005602052604060002090565b016115f38682546120cc565b9055600361160b856000526005602052604060002090565b016116178682546120cc565b905561162d84600052600a602052604060002090565b6116388682546120cc565b905561165281610ef8866000526006602052604060002090565b61165d8682546120cc565b905561167261166a612183565b8686846124e6565b604080519586526064356020870152911693a3005b3461029c57600036600319011261029c57602060405160328152f35b3461029c57604036600319011261029c57602060ff6116ff6004356116c78161028b565b602435906116d48261028b565b60018060a01b03166000526001845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b3461029c5760a036600319011261029c576004356117288161028b565b6024356117348161028b565b60843567ffffffffffffffff811161029c57611754903690600401610851565b906001600160a01b0383163381141590816117a7575b5061178057610944926064359160443591611ce5565b60405163711bec9160e11b81523360048201526001600160a01b0384166024820152604490fd5b6000908152600160209081526040808320338452909152902060ff91505416153861176a565b3461029c57602036600319011261029c576004356118036117fb610fff836000526006602052604060002090565b541515612b36565b61181c61181761181333846130b9565b1590565b612b77565b61183433610ef8836000526006602052604060002090565b61183e8154612aa2565b90556003611856826000526005602052604060002090565b016118618154612aa2565b905561186d8133612be6565b611876426120a7565b6118a861188161079f565b828152600160208201526118a333610ef8866000526007602052604060002090565b612bc3565b604051818152339083907f8f4d6f0c7458447e5095acea28045c0cd637aa3b49812761a7ac022e6d643bf690602090a3817fc56e8aa8e9f4284830fd4657bc77d60640af2ec679f2099faf320ee4202ff4226040518061190e3395829190602083019252565b0390a361191a81612d87565b61192057005b61094490612ee2565b3461029c57602036600319011261029c576004356119468161028b565b61194e611b38565b6001600160a01b039081169081156119a257600354826bffffffffffffffffffffffff60a01b821617600355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b3461029c57604036600319011261029c5760206109e46024356119dd8161028b565b6004356130b9565b60208082019080835283518092528060408094019401926000905b838210611a0f57505050505090565b8451805187528084015187850152808201516001600160a01b0390811688840152606091820151169087015260809095019493820193600190910190611a00565b3461029c5760208060031936011261029c576004908135600052600981526040918260002090815491611a82836107bf565b93611a8f8651958661076e565b83855260009182528082208186015b858410611ab25787518061061389826119e5565b84836001928a51611ac281610731565b855481528486015483820152848060a01b03806002880154168d8301526003870154166060820152815201920193019290611a9e565b3461029c57600036600319011261029c576020604051662386f26fc100008152f35b3461029c57600036600319011261029c576020600b54604051908152f35b6003546001600160a01b03163303611b4c57565b60405163118cdaa760e01b8152336004820152602490fd5b90611b6e826107bf565b611b7b604051918261076e565b8281528092611b8c601f19916107bf565b0190602036910137565b634e487b7160e01b600052601160045260246000fd5b6000198114611bbb5760010190565b611b96565b8051821015610e095760209160051b010190565b91909180518351808203611c42575050611bee8151611b64565b90600090815b8151811015611c3a578061142d611c359260051b85602080808489010151938c010151825252604086209060018060a01b0316600052602052604060002090565b611bf4565b509193505050565b604051635b05999160e01b815260048101919091526024810191909152604490fd5b9192916001600160a01b0382811615611ccc57811615611cb457611cac61079d9490604051916001835260208301526040820190600182526001606084015260808301604052565b929091611e95565b604051626a0d4560e21b815260006004820152602490fd5b604051632bfa23e760e11b815260006004820152602490fd5b92939290916001600160a01b0380841615611ccc57821615611cb45761079d94611cac60405192600184526020840152604083019160018352606084015260808301604052565b908051835190818103611c4257505060005b8151811015611daa57600581901b8281016020908101519186010151611d78929185906001600160a01b038216611d7d575b505050611bac565b611d3e565b611da091610ef8611d98926000526000602052604060002090565b9182546120cc565b9055388481611d70565b50805191939291600103611e4c576020818101518382015160408051928352928201526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b6001600160a01b038416611e16575b50505050565b8051600103611e3d5790602080611e349593015191015191336121c6565b38808080611e10565b611e4793336123d7565b611e34565b6040516001600160a01b0385169060009033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb9080611e8d8888836120d9565b0390a4611e01565b949190918151845190818103611c4257505060005b8251811015611f9d57600581901b83810160209081015191870101516001600160a01b03929186908a8516611f16575b611eec948216611ef157505050611bac565b611eaa565b611f0c91610ef8611d98926000526000602052604060002090565b9055388581611d70565b9192939050611f338a610ef8846000526000602052604060002090565b54838110611f665791879184611eec96959403611f5e8d610ef8856000526000602052604060002090565b559450611eda565b6040516303dee4c560e01b81526001600160a01b038c16600482015260248101919091526044810184905260648101839052608490fd5b509491939290936001855114600014612048576020858101518382015160408051928352928201526001600160a01b03838116929086169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b6001600160a01b038116612011575b5050505050565b84516001036120375760208061202d96015192015192336122c0565b388080808061200a565b6120439491923361240c565b61202d565b6040516001600160a01b03828116919085169033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb908061208b888c836120d9565b0390a4611ffb565b906611c37937e080008201809211611bbb57565b9062093a808201809211611bbb57565b90662386f26fc10000918201809211611bbb57565b91908201809211611bbb57565b90916120f061045c936040845260408401906109ee565b9160208184039101526109ee565b9081602091031261029c575161045c81610315565b909260a09261045c9594600180861b0316835260006020840152604083015260608201528160808201520190610426565b919261045c95949160a094600180871b038092168552166020840152604083015260608201528160808201520190610426565b6040513d6000823e3d90fd5b6040519061219082610752565b60008252565b3d156121c1573d906121a782610835565b916121b5604051938461076e565b82523d6000602084013e565b606090565b9293919093843b6121d8575050505050565b6020916121fb604051948593849363f23a6e6160e01b9889865260048601612113565b038160006001600160a01b0388165af160009181612290575b506122535782612222612196565b805191908261224c57604051632bfa23e760e11b81526001600160a01b0383166004820152602490fd5b9050602001fd5b6001600160e01b0319160361226d5750388080808061200a565b604051632bfa23e760e11b81526001600160a01b03919091166004820152602490fd5b6122b291925060203d81116122b9575b6122aa818361076e565b8101906120fe565b9038612214565b503d6122a0565b939290949194853b6122d5575b505050505050565b6122f8602093604051958694859463f23a6e6160e01b998a875260048701612144565b038160006001600160a01b0388165af16000918161233a575b5061231f5782612222612196565b6001600160e01b0319160361226d57503880808080806122cd565b61235391925060203d81116122b9576122aa818361076e565b9038612311565b9261238961045c95936123979360018060a01b031686526000602087015260a0604087015260a08601906109ee565b9084820360608601526109ee565b916080818403910152610426565b939061045c9593612389916123979460018060a01b03809216885216602087015260a0604087015260a08601906109ee565b9293919093843b6123e9575050505050565b6020916121fb604051948593849363bc197c8160e01b988986526004860161235a565b939290949194853b61242057505050505050565b6122f8602093604051958694859463bc197c8160e01b998a8752600487016123a5565b1561244a57565b60405162461bcd60e51b815260206004820152602860248201527f4f6e6c7920456e6372797074656441727469636c657320636f6e74726163742060448201526718d85b881b5a5b9d60c21b6064820152608490fd5b9091906001600160a01b03811615611ccc576124e061079d9390604051916001835260208301526040820190600182526001606084015260808301604052565b91611d2c565b919291906001600160a01b03821615611ccc5761079d936124e060405192600184526020840152604083019160018352606084015260808301604052565b1561252b57565b60405162461bcd60e51b815260206004820152602260248201527f4e6f206c6963656e73657320657869737420666f7220746869732061727469636044820152616c6560f01b6064820152608490fd5b81601f8201121561029c57805161259181610835565b9261259f604051948561076e565b8184526020828401011161029c5761045c9160208085019101610403565b519061079d8261028b565b519060ff8216820361029c57565b6101c08183031261029c57805192602082015167ffffffffffffffff9081811161029c578461260691850161257b565b93604084015182811161029c578161261f91860161257b565b93606081015183811161029c578261263891830161257b565b93612645608083016125bd565b9360a083015181811161029c578461265e91850161257b565b9360c084015191821161029c5761267691840161257b565b9160e081015191610100820151916101208101519161014082015191610160810151916101a06126a961018084016125c8565b92015190565b90604682029180830460461490151715611bbb57565b90601482029180830460141490151715611bbb57565b81810292918115918404141715611bbb57565b156126f557565b60405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964206c6963656e736520636f6e66696775726174696f6e0000006044820152606490fd5b6611c37937e07fff19810191908211611bbb57565b600019810191908211611bbb57565b91908203918211611bbb57565b634e487b7160e01b600052601260045260246000fd5b801561279457670dbd2fc137a300000490565b61276b565b6127ad81600052600a602052604060002090565b546127b9811515612524565b6040516376e7d7f360e11b8152600481018390526000929083816024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa80156103d657612864936128266128599261285e948890899261288b575b506126db565b6128318115156126ee565b60018111156128805761284e6128496128549261274f565b612781565b9161274f565b6126db565b6120b7565b906128b5565b670de0b6b3a764000091508181111561287b575090565b905090565b50612854869161274f565b90506128a191503d808a833e61062e818361076e565b50509a505050965050505050505038612820565b6040516376e7d7f360e11b81526004810182905260009391929084816024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156103d6576129269161291d9187916129f2575b504261275e565b62015180900490565b9380936201518042049082955b878710806129e8575b156129db57612970612958836000526008602052604060002090565b612962898661275e565b600052602052604060002090565b5461298d5761298161298791611bac565b96611bac565b95612933565b93955050509193505b601e8111156129cf57506129af610f43601e5b846126db565b9050808211156129c25761045c9161275e565b505066038d7ea4c6800090565b610f436129af916129a9565b9395505050919350612996565b50601e871061293c565b612a0691503d8089833e61062e818361076e565b505050505050965050505050505038612916565b15612a2157565b60405162461bcd60e51b815260206004820152601660248201527553656c6c657220686173206e6f206c6963656e73657360501b6044820152606490fd5b15612a6657565b60405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152606490fd5b8015611bbb576000190190565b80546801000000000000000081101561074d57612ad191600182018155610ded565b612b2057815181556020820151600182015560408201516002820180546001600160a01b039283166001600160a01b031991821617909155606090930151600390920180549093169116179055565b634e487b7160e01b600052600060045260246000fd5b15612b3d57565b60405162461bcd60e51b81526020600482015260126024820152712737903634b1b2b739b2903a3790313ab93760711b6044820152606490fd5b15612b7e57565b60405162461bcd60e51b815260206004820152601960248201527f416c7265616479206861732061637469766520616363657373000000000000006044820152606490fd5b6001602061079d93805184550151151591019060ff801983541691151516179055565b6001600160a01b038116918215611cb457612c20604051916001835260208301526040820190600182526001606084015260808301604052565b919060409460008651612c3281610752565b528151845190818103612d6657505060005b8251811015612cdf578060051b60208082860101519187010151612c7686610ef8846000526000602052604060002090565b54818110612ca95786610ef8612ca4959493612c9e9303936000526000602052604060002090565b55611bac565b612c44565b89516303dee4c560e01b81526001600160a01b038816600482015260248101919091526044810182905260648101839052608490fd5b50949060009493925060018151148514612d345760209081015192810151915192835282015233907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629080604081015b0390a4565b905133927f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb928291612d2f91836120d9565b8751635b05999160e01b815260048101919091526024810191909152604490fd5b6000526005602052604060002060036002820154910154908015612dcc5781810391818311611bbb57606483029283046064149082141715611bbb5760329104101590565b5050600090565b15612dda57565b60405162461bcd60e51b8152602060048201526015602482015274125b9cdd59999a58da595b9d0819d85cc81c1bdbdb605a1b6044820152606490fd5b602090818184031261029c5780519067ffffffffffffffff821161029c57019180601f8401121561029c578251612e4d816107bf565b93612e5b604051958661076e565b818552838086019260051b82010192831161029c578301905b828210612e82575050505090565b8380918351612e908161028b565b815201910190612e74565b15612ea257565b60405162461bcd60e51b815260206004820152600e60248201526d4e6f204e465420686f6c6465727360901b6044820152606490fd5b8115612794570690565b90612f1c6002612efc846000526005602052604060002090565b01546003612f14856000526005602052604060002090565b01549061275e565b9182156130b457604051639fb53fcb60e01b815260048101829052926000846024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9384156103d657600094613099575b50612f8684511515612e9b565b60005b81811061303e5750819293506003612fcb7eb4ea54fb8c538cd9c23515e23d54351acc66c4539507193ceae7d70e65d30d936000526005602052604060002090565b01612fd78282546120cc565b9055426004612ff0856000526005602052604060002090565b015561300683600052600a602052604060002090565b6130118282546120cc565b90556003613029846000526005602052604060002090565b015460408051928352602083019190915290a2565b6130949061308f61305c61140a613056895185612ed8565b89611bc0565b61307481610ef8886000526006602052604060002090565b61307e8154611bac565b905585613089612183565b916124a0565b611bac565b612f89565b6130ad91943d8091833e611466818361076e565b9238612f79565b509050565b60009081526007602090815260408083206001600160a01b0390941683529290522060405190604082019180831067ffffffffffffffff84111761074d5760209260405260ff6001835493848452015416151592839101528161311a575090565b9050421090565b9061313460209282815194859201610403565b019056fea2646970667358221220b1909d321a4c0b53c78dfefd6f2029d54ebfec0974cc8909a4ea00f62112975864736f6c63430008140033","opcodes":"PUSH1 0xA0 CALLVALUE PUSH3 0x1D8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 PUSH1 0x1F PUSH3 0x334C CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 DUP5 DUP4 GT DUP5 DUP5 LT OR PUSH3 0x1C2 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x1D8 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP3 AND SWAP2 DUP3 SWAP1 SUB PUSH3 0x1D8 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 DUP2 GT DUP3 DUP3 LT OR PUSH3 0x1C2 JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SWAP2 MSTORE PUSH1 0x2 SLOAD PUSH1 0x1 SWAP1 DUP2 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x1B7 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x1A3 JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x159 JUMPI JUMPDEST POP POP DUP1 PUSH1 0x2 SSTORE CALLER ISZERO PUSH3 0x141 JUMPI PUSH1 0x3 SLOAD SWAP1 CALLER PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT DUP4 AND OR PUSH1 0x3 SSTORE PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD SWAP5 CALLER SWAP4 AND SWAP2 DUP1 LOG3 PUSH1 0x80 MSTORE PUSH2 0x316E SWAP1 DUP2 PUSH3 0x1DE DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x495 ADD MSTORE DUP2 DUP2 PUSH2 0xB1D ADD MSTORE DUP2 DUP2 PUSH2 0xD02 ADD MSTORE DUP2 DUP2 PUSH2 0xE93 ADD MSTORE DUP2 DUP2 PUSH2 0xF92 ADD MSTORE DUP2 DUP2 PUSH2 0x1399 ADD MSTORE DUP2 DUP2 PUSH2 0x1594 ADD MSTORE DUP2 DUP2 PUSH2 0x27E0 ADD MSTORE DUP2 DUP2 PUSH2 0x28DE ADD MSTORE PUSH2 0x2F48 ADD MSTORE RETURN JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x2 DUP4 MSTORE PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 DUP2 ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x198 JUMPI POP PUSH3 0x9E JUMP JUMPDEST DUP4 DUP2 SSTORE DUP3 ADD PUSH3 0x189 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x8A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x1C11D96 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x813D3F6 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x9886C9C EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x1453A424 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x1E084558 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x2D2C5565 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x43C7580E EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x607EA36D EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x72009528 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x75315716 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x8D40E0CD EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x95F58AB8 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x98E9D0E0 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x996CB745 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xAB0B8B04 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0xB3C655C0 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xBCA59003 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0xC55D0F56 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xC98D6E99 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xCA9F19EF EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xCB8B2522 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xDF81A823 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0xE3685397 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xF24C4EAC EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xF499924B EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xF4BF28A0 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xF86325ED EQ PUSH2 0x1CD JUMPI PUSH4 0xFA08B038 EQ PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x1AF8 JUMP JUMPDEST PUSH2 0x1A50 JUMP JUMPDEST PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x1929 JUMP JUMPDEST PUSH2 0x17CD JUMP JUMPDEST PUSH2 0x170B JUMP JUMPDEST PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x1687 JUMP JUMPDEST PUSH2 0x153F JUMP JUMPDEST PUSH2 0x151D JUMP JUMPDEST PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x14C7 JUMP JUMPDEST PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x1475 JUMP JUMPDEST PUSH2 0x1361 JUMP JUMPDEST PUSH2 0x12AB JUMP JUMPDEST PUSH2 0x11EB JUMP JUMPDEST PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0xE7D JUMP JUMPDEST PUSH2 0xE0E JUMP JUMPDEST PUSH2 0xDAE JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST PUSH2 0xC0F JUMP JUMPDEST PUSH2 0xBF3 JUMP JUMPDEST PUSH2 0xB95 JUMP JUMPDEST PUSH2 0xAEF JUMP JUMPDEST PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x9C6 JUMP JUMPDEST PUSH2 0x898 JUMP JUMPDEST PUSH2 0x6EC JUMP JUMPDEST PUSH2 0x694 JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST PUSH2 0x45F JUMP JUMPDEST PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0x395 JUMP JUMPDEST PUSH2 0x327 JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x29C JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH2 0x2E9 PUSH1 0x4 CALLDATALOAD PUSH2 0x2C3 DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0x29C JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x346 DUP2 PUSH2 0x315 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x384 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x373 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x368 JUMP JUMPDEST PUSH4 0x3A24D07 PUSH1 0xE2 SHL DUP2 EQ SWAP2 POP PUSH2 0x361 JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3E4 JUMPI PUSH2 0x3AF PUSH2 0x1B38 JUMP JUMPDEST DUP1 DUP1 DUP1 DUP1 PUSH1 0xB SLOAD DUP2 PUSH1 0xB SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND DUP3 DUP3 ISZERO PUSH2 0x3DB JUMPI JUMPDEST CALL ISZERO PUSH2 0x3D6 JUMPI DUP1 RETURN JUMPDEST PUSH2 0x2177 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x3CD JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x416 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x406 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x43F DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x403 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x45C SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x426 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x40 MLOAD PUSH4 0x76E7D7F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x0 DUP2 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 SWAP1 DUP2 SWAP3 DUP3 SWAP2 PUSH2 0x617 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x7B226E616D65223A2022526561646572204C6963656E7365202D200000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x3B DUP5 ADD PUSH2 0x503 SWAP2 PUSH2 0x3121 JUMP JUMPDEST PUSH2 0x88B PUSH1 0xF2 SHL DUP2 MSTORE PUSH1 0x2 ADD PUSH16 0x113232B9B1B934B83A34B7B7111D1011 PUSH1 0x81 SHL DUP2 MSTORE PUSH1 0x10 ADD PUSH2 0x530 SWAP2 PUSH2 0x3121 JUMP JUMPDEST PUSH2 0x88B PUSH1 0xF2 SHL DUP2 MSTORE PUSH1 0x2 ADD PUSH15 0x2261747472696275746573223A205B PUSH1 0x88 SHL DUP2 MSTORE PUSH1 0xF ADD PUSH32 0x7B2274726169745F74797065223A20224C6F636174696F6E222C202276616C75 DUP2 MSTORE PUSH5 0x32911D1011 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x25 ADD PUSH2 0x590 SWAP2 PUSH2 0x3121 JUMP JUMPDEST PUSH3 0x89F4B PUSH1 0xEA SHL DUP2 MSTORE PUSH1 0x3 ADD PUSH32 0x7B2274726169745F74797065223A20224C6963656E73652054797065222C2022 DUP2 MSTORE PUSH32 0x76616C7565223A202252656164657220416363657373227D0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x38 ADD PUSH2 0x5D7D PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SUB PUSH1 0x1F NOT DUP2 ADD DUP3 MSTORE PUSH2 0x605 SWAP1 DUP3 PUSH2 0x76E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x613 DUP2 SWAP3 DUP3 PUSH2 0x44B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP1 POP PUSH2 0x636 SWAP3 POP RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x62E DUP2 DUP4 PUSH2 0x76E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x25D6 JUMP JUMPDEST POP POP POP POP POP POP POP POP SWAP5 POP POP SWAP2 SWAP1 POP SWAP1 SWAP2 CODESIZE PUSH2 0x4C9 JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH2 0x2E9 PUSH1 0x24 CALLDATALOAD PUSH2 0x66E DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x4 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0x9402F9F20B4A27B55B1CC6CF015D98F764814FB2 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x74D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x71B JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x74D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x74D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x79D DUP3 PUSH2 0x731 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x74D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x74D JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x29C JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x7EE DUP4 PUSH2 0x7BF JUMP JUMPDEST SWAP3 PUSH2 0x7FC PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x76E JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x29C JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x826 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x818 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x74D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x29C JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x868 DUP3 PUSH2 0x835 JUMP JUMPDEST SWAP3 PUSH2 0x876 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x76E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x29C JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 DUP1 CALLDATALOAD PUSH2 0x8B6 DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x8C2 DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x29C JUMPI PUSH2 0x8E3 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x7D7 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x29C JUMPI PUSH2 0x8FB SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x7D7 JUMP JUMPDEST SWAP3 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x29C JUMPI PUSH2 0x913 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x851 JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 CALLER DUP3 EQ ISZERO DUP1 PUSH2 0x9A2 JUMPI JUMPDEST PUSH2 0x975 JUMPI DUP4 AND ISZERO PUSH2 0x95D JUMPI ISZERO PUSH2 0x946 JUMPI PUSH2 0x944 SWAP6 POP PUSH2 0x1E95 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP9 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP10 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP2 DUP12 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP2 DUP3 SWAP2 ADD SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x92A JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH2 0x9E4 PUSH1 0x4 CALLDATALOAD PUSH2 0x2D87 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xA0E JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xA00 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x45C SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x9EE JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x29C JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x29C JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0xA70 DUP2 PUSH2 0x7BF JUMP JUMPDEST SWAP3 PUSH2 0xA7E PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x76E JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x24 DUP4 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x29C JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xAD6 JUMPI DUP6 PUSH1 0x24 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x29C JUMPI PUSH2 0x613 SWAP2 PUSH2 0xAC4 PUSH2 0xACA SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x7D7 JUMP JUMPDEST SWAP1 PUSH2 0x1BD4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xA22 JUMP JUMPDEST DUP4 DUP1 SWAP2 DUP4 CALLDATALOAD PUSH2 0xAE4 DUP2 PUSH2 0x28B JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xA9D JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x40 MLOAD PUSH4 0x76E7D7F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x0 DUP2 PUSH1 0x24 DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH2 0x613 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xB6E JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x426 JUMP JUMPDEST PUSH2 0xB81 SWAP2 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x62E DUP2 DUP4 PUSH2 0x76E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP SWAP3 POP POP POP CODESIZE PUSH2 0xB59 JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3E4 JUMPI PUSH2 0xBAF PUSH2 0x1B38 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x46 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xC2C DUP2 PUSH2 0x2D87 JUMP JUMPDEST ISZERO PUSH2 0xC75 JUMPI PUSH2 0xC50 PUSH7 0x11C37937E08000 SWAP2 PUSH2 0xC4B DUP4 PUSH1 0xB SLOAD LT ISZERO PUSH2 0x2DD3 JUMP JUMPDEST PUSH2 0x2EE2 JUMP JUMPDEST PUSH2 0xC63 PUSH2 0xC5E PUSH1 0xB SLOAD PUSH2 0x273A JUMP JUMPDEST PUSH1 0xB SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 SWAP5 CALLER DUP3 CALL ISZERO PUSH2 0x3D6 JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567656E65726174696F6E206E6F74206E6565646564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xCD8 CALLER DUP3 PUSH2 0x30B9 JUMP JUMPDEST ISZERO PUSH2 0xD6A JUMPI PUSH1 0x40 MLOAD PUSH4 0x76E7D7F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH2 0x613 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xD43 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x44B JUMP JUMPDEST PUSH2 0xD56 SWAP2 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x62E DUP2 DUP4 PUSH2 0x76E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP SWAP2 POP POP CODESIZE PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206163746976652061636365737320746F20746869732061727469636C65 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xE09 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xDD7 JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x29C JUMPI PUSH1 0x80 SWAP2 PUSH2 0xE47 SWAP2 PUSH2 0xDED JUMP JUMPDEST POP DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 DUP2 PUSH1 0x2 DUP5 ADD SLOAD AND SWAP3 ADD SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0xEDD DUP3 PUSH2 0x28B JUMP JUMPDEST PUSH2 0xF17 PUSH2 0xF0F DUP4 PUSH2 0xEF8 DUP5 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO ISZERO PUSH2 0x2A1A JUMP JUMPDEST PUSH2 0xF20 DUP2 PUSH2 0x2799 JUMP JUMPDEST SWAP2 PUSH2 0xF2A DUP4 PUSH2 0x2093 JUMP JUMPDEST SWAP3 PUSH2 0xF37 DUP5 CALLVALUE LT ISZERO PUSH2 0x2A5F JUMP JUMPDEST PUSH2 0xF4A PUSH2 0xF43 DUP3 PUSH2 0x26AF JUMP JUMPDEST PUSH1 0x64 SWAP1 DIV SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0xF57 PUSH2 0xF43 DUP4 PUSH2 0x26C5 JUMP JUMPDEST SWAP5 PUSH2 0xF6B DUP7 PUSH2 0xF66 DUP7 DUP7 PUSH2 0x275E JUMP JUMPDEST PUSH2 0x275E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x76E7D7F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP10 DUP2 PUSH1 0x24 DUP2 PUSH32 0x0 DUP8 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3D6 JUMPI DUP11 SWAP2 PUSH2 0x11C3 JUMPI JUMPDEST POP PUSH2 0xFDC DUP7 PUSH2 0xEF8 DUP12 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xFE6 DUP2 SLOAD PUSH2 0x2AA2 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1012 PUSH2 0xFFF DUP11 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x101C DUP2 SLOAD PUSH2 0x1BAC JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1031 PUSH2 0x1029 PUSH2 0x2183 JUMP JUMPDEST DUP11 CALLER DUP10 PUSH2 0x1C64 JUMP JUMPDEST DUP10 DUP1 DUP1 DUP1 DUP7 DUP11 AND SWAP12 DUP13 DUP3 DUP3 ISZERO PUSH2 0x11BA JUMPI JUMPDEST CALL ISZERO PUSH2 0x3D6 JUMPI DUP10 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP2 DUP4 ISZERO PUSH2 0x11B0 JUMPI JUMPDEST AND SWAP1 CALL ISZERO PUSH2 0x3D6 JUMPI DUP7 DUP1 DUP1 DUP1 SWAP4 DUP2 DUP2 ISZERO PUSH2 0x11A7 JUMPI JUMPDEST PUSH20 0x9402F9F20B4A27B55B1CC6CF015D98F764814FB2 SWAP1 CALL ISZERO PUSH2 0x3D6 JUMPI PUSH2 0x111A DUP7 SWAP3 PUSH2 0x109D PUSH2 0xC5E PUSH1 0xB SLOAD PUSH2 0x2093 JUMP JUMPDEST PUSH2 0x10C9 PUSH3 0x15180 TIMESTAMP DIV PUSH2 0x10BA DUP10 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x10D3 DUP2 SLOAD PUSH2 0x1BAC JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x10E9 DUP8 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1115 PUSH2 0x10F4 PUSH2 0x790 JUMP JUMPDEST TIMESTAMP DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE CALLER PUSH1 0x40 DUP3 ADD MSTORE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x2AAF JUMP JUMPDEST DUP1 CALLVALUE GT PUSH2 0x117A JUMPI JUMPDEST POP POP DUP3 PUSH32 0x3846A81A03C71D25212027D222553680C4FC1BD52B8DFB1F1FBBBCD74C8FEC79 PUSH1 0x40 MLOAD DUP1 PUSH2 0x115A CALLER SWAP6 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP3 MSTORE JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1166 DUP2 PUSH2 0x2D87 JUMP JUMPDEST PUSH2 0x116E JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x1177 SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP2 DUP1 PUSH2 0x1187 DUP2 SWAP4 CALLVALUE PUSH2 0x275E JUMP JUMPDEST DUP2 DUP2 ISZERO PUSH2 0x119E JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x3D6 JUMPI DUP4 CODESIZE PUSH2 0x1122 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x118F JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x106E JUMP JUMPDEST PUSH2 0x8FC SWAP3 POP PUSH2 0x1059 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x1042 JUMP JUMPDEST PUSH2 0x11D7 SWAP2 POP RETURNDATASIZE DUP1 DUP13 DUP4 RETURNDATACOPY PUSH2 0x62E DUP2 DUP4 PUSH2 0x76E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP SWAP4 POP POP POP POP CODESIZE PUSH2 0xFC3 JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1208 DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 DUP4 SUB PUSH2 0x29C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 DUP4 ISZERO PUSH2 0x1293 JUMPI PUSH2 0x1254 PUSH2 0x1265 SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x40 PUSH2 0x12F3 PUSH1 0x24 CALLDATALOAD PUSH2 0x12CD DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 DUP3 SLOAD SWAP3 ADD SLOAD AND DUP3 MLOAD SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x40 DUP3 ADD SWAP2 PUSH1 0x40 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP4 MSTORE PUSH1 0x60 DUP2 ADD SWAP3 PUSH1 0x20 DUP1 SWAP7 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1344 JUMPI POP POP POP PUSH2 0x45C SWAP4 SWAP5 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x9EE JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE SWAP5 DUP8 ADD SWAP5 SWAP2 DUP8 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x132A JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x40 MLOAD PUSH4 0x9FB53FCB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 DUP3 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1452 JUMPI JUMPDEST POP PUSH2 0x13D5 DUP3 MLOAD PUSH2 0x1B64 JUMP JUMPDEST SWAP2 PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1443 JUMPI PUSH2 0x143E SWAP1 PUSH2 0x142D PUSH2 0x13FD DUP6 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1417 PUSH2 0x140A DUP5 DUP8 PUSH2 0x1BC0 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH2 0x1438 DUP3 DUP8 PUSH2 0x1BC0 JUMP JUMPDEST MSTORE PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x13D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x613 DUP7 DUP6 DUP4 PUSH2 0x130B JUMP JUMPDEST PUSH2 0x146E SWAP2 SWAP3 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x1466 DUP2 DUP4 PUSH2 0x76E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2E17 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x13CA JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH2 0x14BF PUSH1 0x4 CALLDATALOAD PUSH2 0x2799 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x14 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH7 0x11C37937E08000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x155F DUP3 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH32 0xE3726A6D4ED43D7D4677D7DFFA4CF0A0D67D40DB3CD11CCCF053DDDCEAF3D7D3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x15BB CALLER PUSH32 0x0 DUP5 AND EQ PUSH2 0x2443 JUMP JUMPDEST DUP4 PUSH2 0x15D0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x2 PUSH2 0x15E7 DUP6 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0x15F3 DUP7 DUP3 SLOAD PUSH2 0x20CC JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x3 PUSH2 0x160B DUP6 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0x1617 DUP7 DUP3 SLOAD PUSH2 0x20CC JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x162D DUP5 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1638 DUP7 DUP3 SLOAD PUSH2 0x20CC JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1652 DUP2 PUSH2 0xEF8 DUP7 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x165D DUP7 DUP3 SLOAD PUSH2 0x20CC JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1672 PUSH2 0x166A PUSH2 0x2183 JUMP JUMPDEST DUP7 DUP7 DUP5 PUSH2 0x24E6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x20 DUP8 ADD MSTORE SWAP2 AND SWAP4 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x32 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x16FF PUSH1 0x4 CALLDATALOAD PUSH2 0x16C7 DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x16D4 DUP3 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1728 DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x1734 DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x29C JUMPI PUSH2 0x1754 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x851 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP2 EQ ISZERO SWAP1 DUP2 PUSH2 0x17A7 JUMPI JUMPDEST POP PUSH2 0x1780 JUMPI PUSH2 0x944 SWAP3 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0xFF SWAP2 POP SLOAD AND ISZERO CODESIZE PUSH2 0x176A JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1803 PUSH2 0x17FB PUSH2 0xFFF DUP4 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO ISZERO PUSH2 0x2B36 JUMP JUMPDEST PUSH2 0x181C PUSH2 0x1817 PUSH2 0x1813 CALLER DUP5 PUSH2 0x30B9 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2B77 JUMP JUMPDEST PUSH2 0x1834 CALLER PUSH2 0xEF8 DUP4 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x183E DUP2 SLOAD PUSH2 0x2AA2 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x3 PUSH2 0x1856 DUP3 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0x1861 DUP2 SLOAD PUSH2 0x2AA2 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x186D DUP2 CALLER PUSH2 0x2BE6 JUMP JUMPDEST PUSH2 0x1876 TIMESTAMP PUSH2 0x20A7 JUMP JUMPDEST PUSH2 0x18A8 PUSH2 0x1881 PUSH2 0x79F JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x18A3 CALLER PUSH2 0xEF8 DUP7 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 DUP4 SWAP1 PUSH32 0x8F4D6F0C7458447E5095ACEA28045C0CD637AA3B49812761A7AC022E6D643BF6 SWAP1 PUSH1 0x20 SWAP1 LOG3 DUP2 PUSH32 0xC56E8AA8E9F4284830FD4657BC77D60640AF2EC679F2099FAF320EE4202FF422 PUSH1 0x40 MLOAD DUP1 PUSH2 0x190E CALLER SWAP6 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP3 MSTORE JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x191A DUP2 PUSH2 0x2D87 JUMP JUMPDEST PUSH2 0x1920 JUMPI STOP JUMPDEST PUSH2 0x944 SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1946 DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH2 0x194E PUSH2 0x1B38 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x19A2 JUMPI PUSH1 0x3 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x3 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH2 0x9E4 PUSH1 0x24 CALLDATALOAD PUSH2 0x19DD DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x30B9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE DUP1 PUSH1 0x40 DUP1 SWAP5 ADD SWAP5 ADD SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x1A0F JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 MLOAD DUP1 MLOAD DUP8 MSTORE DUP1 DUP5 ADD MLOAD DUP8 DUP6 ADD MSTORE DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP9 DUP5 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD AND SWAP1 DUP8 ADD MSTORE PUSH1 0x80 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP3 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1A00 JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 SWAP1 DUP2 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH2 0x1A82 DUP4 PUSH2 0x7BF JUMP JUMPDEST SWAP4 PUSH2 0x1A8F DUP7 MLOAD SWAP6 DUP7 PUSH2 0x76E JUMP JUMPDEST DUP4 DUP6 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE DUP1 DUP3 KECCAK256 DUP2 DUP7 ADD JUMPDEST DUP6 DUP5 LT PUSH2 0x1AB2 JUMPI DUP8 MLOAD DUP1 PUSH2 0x613 DUP10 DUP3 PUSH2 0x19E5 JUMP JUMPDEST DUP5 DUP4 PUSH1 0x1 SWAP3 DUP11 MLOAD PUSH2 0x1AC2 DUP2 PUSH2 0x731 JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE DUP5 DUP7 ADD SLOAD DUP4 DUP3 ADD MSTORE DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0x2 DUP9 ADD SLOAD AND DUP14 DUP4 ADD MSTORE PUSH1 0x3 DUP8 ADD SLOAD AND PUSH1 0x60 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP4 ADD SWAP3 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH7 0x2386F26FC10000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1B4C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1B6E DUP3 PUSH2 0x7BF JUMP JUMPDEST PUSH2 0x1B7B PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x76E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1B8C PUSH1 0x1F NOT SWAP2 PUSH2 0x7BF JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1BBB JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1B96 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xE09 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 MLOAD DUP4 MLOAD DUP1 DUP3 SUB PUSH2 0x1C42 JUMPI POP POP PUSH2 0x1BEE DUP2 MLOAD PUSH2 0x1B64 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1C3A JUMPI DUP1 PUSH2 0x142D PUSH2 0x1C35 SWAP3 PUSH1 0x5 SHL DUP6 PUSH1 0x20 DUP1 DUP1 DUP5 DUP10 ADD ADD MLOAD SWAP4 DUP13 ADD ADD MLOAD DUP3 MSTORE MSTORE PUSH1 0x40 DUP7 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1BF4 JUMP JUMPDEST POP SWAP2 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND ISZERO PUSH2 0x1CCC JUMPI DUP2 AND ISZERO PUSH2 0x1CB4 JUMPI PUSH2 0x1CAC PUSH2 0x79D SWAP5 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 PUSH1 0x1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0x1E95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP3 SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND ISZERO PUSH2 0x1CCC JUMPI DUP3 AND ISZERO PUSH2 0x1CB4 JUMPI PUSH2 0x79D SWAP5 PUSH2 0x1CAC PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP1 MLOAD DUP4 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1C42 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1DAA JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP3 DUP2 ADD PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 DUP7 ADD ADD MLOAD PUSH2 0x1D78 SWAP3 SWAP2 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1D7D JUMPI JUMPDEST POP POP POP PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x1DA0 SWAP2 PUSH2 0xEF8 PUSH2 0x1D98 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD PUSH2 0x20CC JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP5 DUP2 PUSH2 0x1D70 JUMP JUMPDEST POP DUP1 MLOAD SWAP2 SWAP4 SWAP3 SWAP2 PUSH1 0x1 SUB PUSH2 0x1E4C JUMPI PUSH1 0x20 DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH1 0x0 SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 LOG4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1E16 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 SUB PUSH2 0x1E3D JUMPI SWAP1 PUSH1 0x20 DUP1 PUSH2 0x1E34 SWAP6 SWAP4 ADD MLOAD SWAP2 ADD MLOAD SWAP2 CALLER PUSH2 0x21C6 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1E10 JUMP JUMPDEST PUSH2 0x1E47 SWAP4 CALLER PUSH2 0x23D7 JUMP JUMPDEST PUSH2 0x1E34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP1 DUP1 PUSH2 0x1E8D DUP9 DUP9 DUP4 PUSH2 0x20D9 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1E01 JUMP JUMPDEST SWAP5 SWAP2 SWAP1 SWAP2 DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1C42 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1F9D JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP4 DUP2 ADD PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 DUP8 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP2 DUP7 SWAP1 DUP11 DUP6 AND PUSH2 0x1F16 JUMPI JUMPDEST PUSH2 0x1EEC SWAP5 DUP3 AND PUSH2 0x1EF1 JUMPI POP POP POP PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x1EAA JUMP JUMPDEST PUSH2 0x1F0C SWAP2 PUSH2 0xEF8 PUSH2 0x1D98 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP6 DUP2 PUSH2 0x1D70 JUMP JUMPDEST SWAP2 SWAP3 SWAP4 SWAP1 POP PUSH2 0x1F33 DUP11 PUSH2 0xEF8 DUP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP4 DUP2 LT PUSH2 0x1F66 JUMPI SWAP2 DUP8 SWAP2 DUP5 PUSH2 0x1EEC SWAP7 SWAP6 SWAP5 SUB PUSH2 0x1F5E DUP14 PUSH2 0xEF8 DUP6 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE SWAP5 POP PUSH2 0x1EDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP5 SWAP2 SWAP4 SWAP3 SWAP1 SWAP4 PUSH1 0x1 DUP6 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x2048 JUMPI PUSH1 0x20 DUP6 DUP2 ADD MLOAD DUP4 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP3 SWAP1 DUP7 AND SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 LOG4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2011 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP5 MLOAD PUSH1 0x1 SUB PUSH2 0x2037 JUMPI PUSH1 0x20 DUP1 PUSH2 0x202D SWAP7 ADD MLOAD SWAP3 ADD MLOAD SWAP3 CALLER PUSH2 0x22C0 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x200A JUMP JUMPDEST PUSH2 0x2043 SWAP5 SWAP2 SWAP3 CALLER PUSH2 0x240C JUMP JUMPDEST PUSH2 0x202D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 SWAP1 DUP6 AND SWAP1 CALLER SWAP1 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP1 DUP1 PUSH2 0x208B DUP9 DUP13 DUP4 PUSH2 0x20D9 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1FFB JUMP JUMPDEST SWAP1 PUSH7 0x11C37937E08000 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1BBB JUMPI JUMP JUMPDEST SWAP1 PUSH3 0x93A80 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1BBB JUMPI JUMP JUMPDEST SWAP1 PUSH7 0x2386F26FC10000 SWAP2 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1BBB JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1BBB JUMPI JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x20F0 PUSH2 0x45C SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x9EE JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x9EE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x29C JUMPI MLOAD PUSH2 0x45C DUP2 PUSH2 0x315 JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0xA0 SWAP3 PUSH2 0x45C SWAP6 SWAP5 PUSH1 0x1 DUP1 DUP7 SHL SUB AND DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x426 JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0x45C SWAP6 SWAP5 SWAP2 PUSH1 0xA0 SWAP5 PUSH1 0x1 DUP1 DUP8 SHL SUB DUP1 SWAP3 AND DUP6 MSTORE AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2190 DUP3 PUSH2 0x752 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x21C1 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x21A7 DUP3 PUSH2 0x835 JUMP JUMPDEST SWAP2 PUSH2 0x21B5 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x76E JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP3 SWAP4 SWAP2 SWAP1 SWAP4 DUP5 EXTCODESIZE PUSH2 0x21D8 JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH2 0x21FB PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x2113 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x2290 JUMPI JUMPDEST POP PUSH2 0x2253 JUMPI DUP3 PUSH2 0x2222 PUSH2 0x2196 JUMP JUMPDEST DUP1 MLOAD SWAP2 SWAP1 DUP3 PUSH2 0x224C JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x226D JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x200A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x22B2 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x22B9 JUMPI JUMPDEST PUSH2 0x22AA DUP2 DUP4 PUSH2 0x76E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x20FE JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x2214 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x22A0 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP5 SWAP2 SWAP5 DUP6 EXTCODESIZE PUSH2 0x22D5 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x22F8 PUSH1 0x20 SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP10 DUP11 DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x2144 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x233A JUMPI JUMPDEST POP PUSH2 0x231F JUMPI DUP3 PUSH2 0x2222 PUSH2 0x2196 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x226D JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x22CD JUMP JUMPDEST PUSH2 0x2353 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x22B9 JUMPI PUSH2 0x22AA DUP2 DUP4 PUSH2 0x76E JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x2311 JUMP JUMPDEST SWAP3 PUSH2 0x2389 PUSH2 0x45C SWAP6 SWAP4 PUSH2 0x2397 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x0 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x9EE JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x9EE JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x426 JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x45C SWAP6 SWAP4 PUSH2 0x2389 SWAP2 PUSH2 0x2397 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP9 MSTORE AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x9EE JUMP JUMPDEST SWAP3 SWAP4 SWAP2 SWAP1 SWAP4 DUP5 EXTCODESIZE PUSH2 0x23E9 JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH2 0x21FB PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x235A JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP5 SWAP2 SWAP5 DUP6 EXTCODESIZE PUSH2 0x2420 JUMPI POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x22F8 PUSH1 0x20 SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP10 DUP11 DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x23A5 JUMP JUMPDEST ISZERO PUSH2 0x244A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920456E6372797074656441727469636C657320636F6E747261637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x18D85B881B5A5B9D PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1CCC JUMPI PUSH2 0x24E0 PUSH2 0x79D SWAP4 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 PUSH1 0x1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 PUSH2 0x1D2C JUMP JUMPDEST SWAP2 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1CCC JUMPI PUSH2 0x79D SWAP4 PUSH2 0x24E0 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x252B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C6963656E73657320657869737420666F722074686973206172746963 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6C65 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x29C JUMPI DUP1 MLOAD PUSH2 0x2591 DUP2 PUSH2 0x835 JUMP JUMPDEST SWAP3 PUSH2 0x259F PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x76E JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x29C JUMPI PUSH2 0x45C SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x403 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x79D DUP3 PUSH2 0x28B JUMP JUMPDEST MLOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x29C JUMPI JUMP JUMPDEST PUSH2 0x1C0 DUP2 DUP4 SUB SLT PUSH2 0x29C JUMPI DUP1 MLOAD SWAP3 PUSH1 0x20 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0x29C JUMPI DUP5 PUSH2 0x2606 SWAP2 DUP6 ADD PUSH2 0x257B JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP5 ADD MLOAD DUP3 DUP2 GT PUSH2 0x29C JUMPI DUP2 PUSH2 0x261F SWAP2 DUP7 ADD PUSH2 0x257B JUMP JUMPDEST SWAP4 PUSH1 0x60 DUP2 ADD MLOAD DUP4 DUP2 GT PUSH2 0x29C JUMPI DUP3 PUSH2 0x2638 SWAP2 DUP4 ADD PUSH2 0x257B JUMP JUMPDEST SWAP4 PUSH2 0x2645 PUSH1 0x80 DUP4 ADD PUSH2 0x25BD JUMP JUMPDEST SWAP4 PUSH1 0xA0 DUP4 ADD MLOAD DUP2 DUP2 GT PUSH2 0x29C JUMPI DUP5 PUSH2 0x265E SWAP2 DUP6 ADD PUSH2 0x257B JUMP JUMPDEST SWAP4 PUSH1 0xC0 DUP5 ADD MLOAD SWAP2 DUP3 GT PUSH2 0x29C JUMPI PUSH2 0x2676 SWAP2 DUP5 ADD PUSH2 0x257B JUMP JUMPDEST SWAP2 PUSH1 0xE0 DUP2 ADD MLOAD SWAP2 PUSH2 0x100 DUP3 ADD MLOAD SWAP2 PUSH2 0x120 DUP2 ADD MLOAD SWAP2 PUSH2 0x140 DUP3 ADD MLOAD SWAP2 PUSH2 0x160 DUP2 ADD MLOAD SWAP2 PUSH2 0x1A0 PUSH2 0x26A9 PUSH2 0x180 DUP5 ADD PUSH2 0x25C8 JUMP JUMPDEST SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x46 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x46 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1BBB JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x14 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x14 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1BBB JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1BBB JUMPI JUMP JUMPDEST ISZERO PUSH2 0x26F5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206C6963656E736520636F6E66696775726174696F6E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH7 0x11C37937E07FFF NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x1BBB JUMPI JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x1BBB JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1BBB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2794 JUMPI PUSH8 0xDBD2FC137A30000 DIV SWAP1 JUMP JUMPDEST PUSH2 0x276B JUMP JUMPDEST PUSH2 0x27AD DUP2 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH2 0x27B9 DUP2 ISZERO ISZERO PUSH2 0x2524 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x76E7D7F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP3 SWAP1 DUP4 DUP2 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH2 0x2864 SWAP4 PUSH2 0x2826 PUSH2 0x2859 SWAP3 PUSH2 0x285E SWAP5 DUP9 SWAP1 DUP10 SWAP3 PUSH2 0x288B JUMPI JUMPDEST POP PUSH2 0x26DB JUMP JUMPDEST PUSH2 0x2831 DUP2 ISZERO ISZERO PUSH2 0x26EE JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2880 JUMPI PUSH2 0x284E PUSH2 0x2849 PUSH2 0x2854 SWAP3 PUSH2 0x274F JUMP JUMPDEST PUSH2 0x2781 JUMP JUMPDEST SWAP2 PUSH2 0x274F JUMP JUMPDEST PUSH2 0x26DB JUMP JUMPDEST PUSH2 0x20B7 JUMP JUMPDEST SWAP1 PUSH2 0x28B5 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP2 POP DUP2 DUP2 GT ISZERO PUSH2 0x287B JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH2 0x2854 DUP7 SWAP2 PUSH2 0x274F JUMP JUMPDEST SWAP1 POP PUSH2 0x28A1 SWAP2 POP RETURNDATASIZE DUP1 DUP11 DUP4 RETURNDATACOPY PUSH2 0x62E DUP2 DUP4 PUSH2 0x76E JUMP JUMPDEST POP POP SWAP11 POP POP POP SWAP7 POP POP POP POP POP POP POP CODESIZE PUSH2 0x2820 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x76E7D7F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP4 SWAP2 SWAP3 SWAP1 DUP5 DUP2 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3D6 JUMPI PUSH2 0x2926 SWAP2 PUSH2 0x291D SWAP2 DUP8 SWAP2 PUSH2 0x29F2 JUMPI JUMPDEST POP TIMESTAMP PUSH2 0x275E JUMP JUMPDEST PUSH3 0x15180 SWAP1 DIV SWAP1 JUMP JUMPDEST SWAP4 DUP1 SWAP4 PUSH3 0x15180 TIMESTAMP DIV SWAP1 DUP3 SWAP6 JUMPDEST DUP8 DUP8 LT DUP1 PUSH2 0x29E8 JUMPI JUMPDEST ISZERO PUSH2 0x29DB JUMPI PUSH2 0x2970 PUSH2 0x2958 DUP4 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x2962 DUP10 DUP7 PUSH2 0x275E JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH2 0x298D JUMPI PUSH2 0x2981 PUSH2 0x2987 SWAP2 PUSH2 0x1BAC JUMP JUMPDEST SWAP7 PUSH2 0x1BAC JUMP JUMPDEST SWAP6 PUSH2 0x2933 JUMP JUMPDEST SWAP4 SWAP6 POP POP POP SWAP2 SWAP4 POP JUMPDEST PUSH1 0x1E DUP2 GT ISZERO PUSH2 0x29CF JUMPI POP PUSH2 0x29AF PUSH2 0xF43 PUSH1 0x1E JUMPDEST DUP5 PUSH2 0x26DB JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x29C2 JUMPI PUSH2 0x45C SWAP2 PUSH2 0x275E JUMP JUMPDEST POP POP PUSH7 0x38D7EA4C68000 SWAP1 JUMP JUMPDEST PUSH2 0xF43 PUSH2 0x29AF SWAP2 PUSH2 0x29A9 JUMP JUMPDEST SWAP4 SWAP6 POP POP POP SWAP2 SWAP4 POP PUSH2 0x2996 JUMP JUMPDEST POP PUSH1 0x1E DUP8 LT PUSH2 0x293C JUMP JUMPDEST PUSH2 0x2A06 SWAP2 POP RETURNDATASIZE DUP1 DUP10 DUP4 RETURNDATACOPY PUSH2 0x62E DUP2 DUP4 PUSH2 0x76E JUMP JUMPDEST POP POP POP POP POP POP SWAP7 POP POP POP POP POP POP POP CODESIZE PUSH2 0x2916 JUMP JUMPDEST ISZERO PUSH2 0x2A21 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x53656C6C657220686173206E6F206C6963656E736573 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2A66 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9CDD59999A58DA595B9D081C185E5B595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x1BBB JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x74D JUMPI PUSH2 0x2AD1 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0xDED JUMP JUMPDEST PUSH2 0x2B20 JUMPI DUP2 MLOAD DUP2 SSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD PUSH1 0x3 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x2B3D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2737903634B1B2B739B2903A3790313AB937 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2B7E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920686173206163746976652061636365737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x20 PUSH2 0x79D SWAP4 DUP1 MLOAD DUP5 SSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x1CB4 JUMPI PUSH2 0x2C20 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 PUSH1 0x1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 SWAP5 PUSH1 0x0 DUP7 MLOAD PUSH2 0x2C32 DUP2 PUSH2 0x752 JUMP JUMPDEST MSTORE DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x2D66 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2CDF JUMPI DUP1 PUSH1 0x5 SHL PUSH1 0x20 DUP1 DUP3 DUP7 ADD ADD MLOAD SWAP2 DUP8 ADD ADD MLOAD PUSH2 0x2C76 DUP7 PUSH2 0xEF8 DUP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP2 DUP2 LT PUSH2 0x2CA9 JUMPI DUP7 PUSH2 0xEF8 PUSH2 0x2CA4 SWAP6 SWAP5 SWAP4 PUSH2 0x2C9E SWAP4 SUB SWAP4 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x2C44 JUMP JUMPDEST DUP10 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP5 SWAP1 PUSH1 0x0 SWAP5 SWAP4 SWAP3 POP PUSH1 0x1 DUP2 MLOAD EQ DUP6 EQ PUSH2 0x2D34 JUMPI PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP3 DUP2 ADD MLOAD SWAP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP1 DUP1 PUSH1 0x40 DUP2 ADD JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST SWAP1 MLOAD CALLER SWAP3 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP3 DUP3 SWAP2 PUSH2 0x2D2F SWAP2 DUP4 PUSH2 0x20D9 JUMP JUMPDEST DUP8 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x3 PUSH1 0x2 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 DUP1 ISZERO PUSH2 0x2DCC JUMPI DUP2 DUP2 SUB SWAP2 DUP2 DUP4 GT PUSH2 0x1BBB JUMPI PUSH1 0x64 DUP4 MUL SWAP3 DUP4 DIV PUSH1 0x64 EQ SWAP1 DUP3 EQ OR ISZERO PUSH2 0x1BBB JUMPI PUSH1 0x32 SWAP2 DIV LT ISZERO SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2DDA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9CDD59999A58DA595B9D0819D85CC81C1BDBDB PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x29C JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x29C JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x29C JUMPI DUP3 MLOAD PUSH2 0x2E4D DUP2 PUSH2 0x7BF JUMP JUMPDEST SWAP4 PUSH2 0x2E5B PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x76E JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x29C JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2E82 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 DUP1 SWAP2 DUP4 MLOAD PUSH2 0x2E90 DUP2 PUSH2 0x28B JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x2E74 JUMP JUMPDEST ISZERO PUSH2 0x2EA2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E6F204E465420686F6C64657273 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2794 JUMPI MOD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2F1C PUSH1 0x2 PUSH2 0x2EFC DUP5 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0x3 PUSH2 0x2F14 DUP6 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP1 PUSH2 0x275E JUMP JUMPDEST SWAP2 DUP3 ISZERO PUSH2 0x30B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9FB53FCB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE SWAP3 PUSH1 0x0 DUP5 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 SWAP5 PUSH2 0x3099 JUMPI JUMPDEST POP PUSH2 0x2F86 DUP5 MLOAD ISZERO ISZERO PUSH2 0x2E9B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x303E JUMPI POP DUP2 SWAP3 SWAP4 POP PUSH1 0x3 PUSH2 0x2FCB PUSH31 0xB4EA54FB8C538CD9C23515E23D54351ACC66C4539507193CEAE7D70E65D30D SWAP4 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0x2FD7 DUP3 DUP3 SLOAD PUSH2 0x20CC JUMP JUMPDEST SWAP1 SSTORE TIMESTAMP PUSH1 0x4 PUSH2 0x2FF0 DUP6 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x3006 DUP4 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x3011 DUP3 DUP3 SLOAD PUSH2 0x20CC JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x3 PUSH2 0x3029 DUP5 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x3094 SWAP1 PUSH2 0x308F PUSH2 0x305C PUSH2 0x140A PUSH2 0x3056 DUP10 MLOAD DUP6 PUSH2 0x2ED8 JUMP JUMPDEST DUP10 PUSH2 0x1BC0 JUMP JUMPDEST PUSH2 0x3074 DUP2 PUSH2 0xEF8 DUP9 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x307E DUP2 SLOAD PUSH2 0x1BAC JUMP JUMPDEST SWAP1 SSTORE DUP6 PUSH2 0x3089 PUSH2 0x2183 JUMP JUMPDEST SWAP2 PUSH2 0x24A0 JUMP JUMPDEST PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x2F89 JUMP JUMPDEST PUSH2 0x30AD SWAP2 SWAP5 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x1466 DUP2 DUP4 PUSH2 0x76E JUMP JUMPDEST SWAP3 CODESIZE PUSH2 0x2F79 JUMP JUMPDEST POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD SWAP2 DUP1 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x74D JUMPI PUSH1 0x20 SWAP3 PUSH1 0x40 MSTORE PUSH1 0xFF PUSH1 0x1 DUP4 SLOAD SWAP4 DUP5 DUP5 MSTORE ADD SLOAD AND ISZERO ISZERO SWAP3 DUP4 SWAP2 ADD MSTORE DUP2 PUSH2 0x311A JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP TIMESTAMP LT SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3134 PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x403 JUMP JUMPDEST ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 SWAP1 SWAP14 ORIGIN BYTE 0x4C SIGNEXTEND MSTORE8 0xC7 DUP14 INVALID REVERT PUSH16 0x2029D54EBFEC0974CC8909A4EA00F621 SLT SWAP8 PC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1108:14504:17:-:0;;;;-1:-1:-1;;;;;1108:14504:17;;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1108:14504:17;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1108:14504:17;;;10356:13:2;1108:14504:17;;;;;;;;;;;;;-1:-1:-1;1108:14504:17;;;;;;;;;;;-1:-1:-1;1108:14504:17;;;10356:13:2;1108:14504:17;3701:10;1273:26:0;1269:95;;3004:6;1108:14504:17;3701:10;;1108:14504;;;;;;;;;3004:6:0;1108:14504:17;3052:40:0;1108:14504:17;;3701:10;;1108:14504;;3052:40:0;;;3723:59:17;;1108:14504;;;;;;3723:59;1108:14504;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1269:95:0;1108:14504:17;;;;1322:31:0;;;;;;;;;1108:14504:17;1322:31:0;1108:14504:17;10356:13:2;1108:14504:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1108:14504:17;;;;;;;;;;;;;;;;;;;-1:-1:-1;1108:14504:17;;;;;-1:-1:-1;1108:14504:17;;-1:-1:-1;1108:14504:17;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":9661,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_address_dyn_fromMemory":{"entryPoint":11799,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":2007,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":2129,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes4_fromMemory":{"entryPoint":8446,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":9595,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_stringt_stringt_stringt_addresst_stringt_stringt_uint256t_uint256t_uint256t_uint256t_uint256t_uint8t_uint256_fromMemory":{"entryPoint":9686,"id":null,"parameterSlots":2,"returnSlots":14},"abi_decode_uint8_fromMemory":{"entryPoint":9672,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_address_array_uint256_dyn_array_uint256_dyn_bytes":{"entryPoint":9125,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_address_address_array_uint256_dyn_array_uint256_dyn_bytes_25412":{"entryPoint":9050,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_address_uint256_uint256_bytes":{"entryPoint":8516,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_address_address_uint256_uint256_bytes_25411":{"entryPoint":8467,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_array_address_dyn_array_uint256_dyn":{"entryPoint":4875,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_struct_PurchaseRecord_dyn":{"entryPoint":6629,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":2594,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_array_uint256_dyn":{"entryPoint":8409,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_uint256_dyn_memory_ptr":{"entryPoint":2542,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":1099,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":12577,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_to_string":{"entryPoint":1062,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_2482":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_3e7f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_63ef":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_a9d6":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ab14":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c83c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_f477":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":7012,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":1951,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_13680":{"entryPoint":1936,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_array_bytes":{"entryPoint":8579,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":1983,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":2101,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_struct_PurchaseRecord_to_array_struct_PurchaseRecord_storage_dyn_ptr":{"entryPoint":10927,"id":null,"parameterSlots":2,"returnSlots":0},"checked_add_uint256":{"entryPoint":8396,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256_13666":{"entryPoint":8339,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256_13704":{"entryPoint":8359,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256_13731":{"entryPoint":8375,"id":null,"parameterSlots":1,"returnSlots":1},"checked_div_uint256":{"entryPoint":10113,"id":null,"parameterSlots":1,"returnSlots":1},"checked_div_uint256_13668":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_div_uint256_13732":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256":{"entryPoint":9947,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256_13667":{"entryPoint":9903,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256_13669":{"entryPoint":9925,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_uint256":{"entryPoint":10078,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256_13659":{"entryPoint":10042,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_uint256_13729":{"entryPoint":10063,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1027,"id":null,"parameterSlots":3,"returnSlots":0},"copy_struct_to_storage_from_struct_AccessInfo_to_struct_AccessInfo":{"entryPoint":11203,"id":null,"parameterSlots":2,"returnSlots":0},"decrement_uint256":{"entryPoint":10914,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_BASE_PRICE":{"entryPoint":6904,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_CREATOR_PERCENTAGE":{"entryPoint":5377,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_ENCRYPTED_ARTICLES":{"entryPoint":3709,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_GAS_REIMBURSEMENT":{"entryPoint":5405,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_MAX_PRICE":{"entryPoint":754,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_PLATFORM_PERCENTAGE":{"entryPoint":999,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_REGENERATION_THRESHOLD":{"entryPoint":5767,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_SELLER_PERCENTAGE":{"entryPoint":3059,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_TREASURY":{"entryPoint":1772,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_accessInfo":{"entryPoint":4779,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOf":{"entryPoint":673,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOfBatch":{"entryPoint":2611,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_burnLicenseForAccess":{"entryPoint":6093,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_buyLicense":{"entryPoint":3778,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_dailyPurchases":{"entryPoint":5319,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_emergencyWithdrawGasPool":{"entryPoint":917,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_gasPool":{"entryPoint":6938,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getArticleSummary":{"entryPoint":2799,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getCurrentPrice":{"entryPoint":5281,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getEncryptedContent":{"entryPoint":3258,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getLicenseHolders":{"entryPoint":4961,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getPurchaseHistory":{"entryPoint":6736,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_hasActiveAccess":{"entryPoint":6587,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isApprovedForAll":{"entryPoint":5795,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_licenseBalances":{"entryPoint":1612,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_licenseInfo":{"entryPoint":1684,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mintLicensesToHolder":{"entryPoint":5439,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":3502,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_purchaseHistory":{"entryPoint":3598,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_regenerateLicenses":{"entryPoint":3087,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":2965,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeBatchTransferFrom":{"entryPoint":2200,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom":{"entryPoint":5899,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setApprovalForAll":{"entryPoint":4587,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_shouldRegenerate":{"entryPoint":2502,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_supportsInterface":{"entryPoint":807,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalLicensesEverGenerated":{"entryPoint":5237,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":6441,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_uri":{"entryPoint":1119,"id":null,"parameterSlots":0,"returnSlots":0},"extract_returndata":{"entryPoint":8598,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":1902,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_13710":{"entryPoint":1841,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_20914":{"entryPoint":1874,"id":null,"parameterSlots":1,"returnSlots":0},"fun_applyTimeDecay":{"entryPoint":10421,"id":6665,"parameterSlots":2,"returnSlots":1},"fun_asSingletonArrays":{"entryPoint":null,"id":1200,"parameterSlots":2,"returnSlots":2},"fun_asSingletonArrays_20911":{"entryPoint":null,"id":1200,"parameterSlots":1,"returnSlots":2},"fun_balanceOfBatch":{"entryPoint":7124,"id":474,"parameterSlots":2,"returnSlots":1},"fun_burn":{"entryPoint":11238,"id":1105,"parameterSlots":2,"returnSlots":0},"fun_checkOnERC1155BatchReceived":{"entryPoint":9228,"id":1535,"parameterSlots":6,"returnSlots":0},"fun_checkOnERC1155BatchReceived_20912":{"entryPoint":9175,"id":1535,"parameterSlots":5,"returnSlots":0},"fun_checkOnERC1155Received":{"entryPoint":8896,"id":1461,"parameterSlots":6,"returnSlots":0},"fun_checkOnERC1155Received_20913":{"entryPoint":8646,"id":1461,"parameterSlots":5,"returnSlots":0},"fun_checkOwner":{"entryPoint":6968,"id":84,"parameterSlots":0,"returnSlots":0},"fun_getCurrentPrice":{"entryPoint":10137,"id":6568,"parameterSlots":1,"returnSlots":1},"fun_hasActiveAccess":{"entryPoint":12473,"id":7170,"parameterSlots":2,"returnSlots":1},"fun_mint":{"entryPoint":9446,"id":1014,"parameterSlots":4,"returnSlots":0},"fun_mint_13768":{"entryPoint":9376,"id":1014,"parameterSlots":3,"returnSlots":0},"fun_regenerateLicenses":{"entryPoint":12002,"id":7142,"parameterSlots":1,"returnSlots":0},"fun_safeTransferFrom":{"entryPoint":7397,"id":896,"parameterSlots":5,"returnSlots":0},"fun_safeTransferFrom_13674":{"entryPoint":7268,"id":896,"parameterSlots":4,"returnSlots":0},"fun_shouldRegenerate":{"entryPoint":11655,"id":6991,"parameterSlots":1,"returnSlots":1},"fun_updateWithAcceptanceCheck":{"entryPoint":7829,"id":830,"parameterSlots":5,"returnSlots":0},"fun_updateWithAcceptanceCheck_13726":{"entryPoint":7468,"id":830,"parameterSlots":4,"returnSlots":0},"increment_uint256":{"entryPoint":7084,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_uint256_mapping_address_uint256_of_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_uint256_mapping_address_uint256_of_uint256_13665":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_mapping_address_uint256_of_uint256_13678":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_mapping_address_uint256_of_uint256_13679":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_mapping_address_uint256_of_uint256_13691":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_mapping_address_uint256_of_uint256_13694":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_mapping_address_uint256_of_uint256_13707":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_mapping_address_uint256_of_uint256_13714":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":7104,"id":null,"parameterSlots":2,"returnSlots":1},"mod_uint256":{"entryPoint":11992,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":7062,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":10091,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3543,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1819,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_memoryt_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":11062,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_023b":{"entryPoint":9508,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_03cc":{"entryPoint":11127,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_1fa3":{"entryPoint":9966,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_23a4":{"entryPoint":9283,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4ef9":{"entryPoint":11931,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7b65":{"entryPoint":11731,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_8d1b":{"entryPoint":10847,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ec49":{"entryPoint":10778,"id":null,"parameterSlots":1,"returnSlots":0},"revert_forward":{"entryPoint":8567,"id":null,"parameterSlots":0,"returnSlots":0},"storage_array_index_access_struct_PurchaseRecord_dyn":{"entryPoint":3565,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_offsett_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_address":{"entryPoint":651,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":789,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"6281":[{"length":32,"start":1173},{"length":32,"start":2845},{"length":32,"start":3330},{"length":32,"start":3731},{"length":32,"start":3986},{"length":32,"start":5017},{"length":32,"start":5524},{"length":32,"start":10208},{"length":32,"start":10462},{"length":32,"start":12104}]},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c8062fdd58e1461028657806301c11d961461028157806301ffc9a71461027c5780630813d3f61461027757806309886c9c146102725780630e89341c1461026d5780631453a424146102685780631e084558146102635780632d2c55651461025e5780632eb2c2d61461025957806343c7580e146102545780634e1273f41461024f578063607ea36d1461024a578063715018a6146102455780637200952814610240578063753157161461023b5780638d40e0cd146102365780638da5cb5b1461023157806395f58ab81461022c57806398e9d0e014610227578063996cb74514610222578063a22cb4651461021d578063ab0b8b0414610218578063b3c655c014610213578063bca590031461020e578063c55d0f5614610209578063c98d6e9914610204578063ca9f19ef146101ff578063cb8b2522146101fa578063df81a823146101f5578063e3685397146101f0578063e985e9c5146101eb578063f242432a146101e6578063f24c4eac146101e1578063f2fde38b146101dc578063f499924b146101d7578063f4bf28a0146101d2578063f86325ed146101cd5763fa08b038146101c857600080fd5b611b1a565b611af8565b611a50565b6119bb565b611929565b6117cd565b61170b565b6116a3565b611687565b61153f565b61151d565b611501565b6114c7565b6114a1565b611475565b611361565b6112ab565b6111eb565b610ec2565b610e7d565b610e0e565b610dae565b610cba565b610c0f565b610bf3565b610b95565b610aef565b610a33565b6109c6565b610898565b6106ec565b610694565b61064c565b61045f565b6103e7565b610395565b610327565b6102f2565b6102a1565b6001600160a01b0381160361029c57565b600080fd5b3461029c57604036600319011261029c5760206102e96004356102c38161028b565b6024356000526000835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b3461029c57600036600319011261029c576020604051670de0b6b3a76400008152f35b6001600160e01b031981160361029c57565b3461029c57602036600319011261029c57602060043561034681610315565b63ffffffff60e01b16636cdb3d1360e11b8114908115610384575b8115610373575b506040519015158152f35b6301ffc9a760e01b14905038610368565b6303a24d0760e21b81149150610361565b3461029c576000806003193601126103e4576103af611b38565b80808080600b5481600b5560018060a01b03600354168282156103db575bf1156103d65780f35b612177565b506108fc6103cd565b80fd5b3461029c57600036600319011261029c576020604051600a8152f35b60005b8381106104165750506000910152565b8181015183820152602001610406565b9060209161043f81518092818552858086019101610403565b601f01601f1916010190565b90602061045c928181520190610426565b90565b3461029c57602036600319011261029c576040516376e7d7f360e11b815260048035908201526000816024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa80156103d65760009081928291610617575b506040517f7b226e616d65223a2022526561646572204c6963656e7365202d2000000000006020820152928392603b840161050391613121565b61088b60f21b81526002016f113232b9b1b934b83a34b7b7111d101160811b815260100161053091613121565b61088b60f21b81526002016e2261747472696275746573223a205b60881b8152600f017f7b2274726169745f74797065223a20224c6f636174696f6e222c202276616c7581526432911d101160d91b602082015260250161059091613121565b62089f4b60ea1b81526003017f7b2274726169745f74797065223a20224c6963656e73652054797065222c202281527f76616c7565223a202252656164657220416363657373227d00000000000000006020820152603801615d7d60f01b815260020103601f1981018252610605908261076e565b60405161061381928261044b565b0390f35b91905061063692503d8091833e61062e818361076e565b8101906125d6565b50505050505050509450509190509091386104c9565b3461029c57604036600319011261029c5760206102e960243561066e8161028b565b6004356000526006835260406000209060018060a01b0316600052602052604060002090565b3461029c57602036600319011261029c57600435600052600560205260a06040600020805490600181015490600281015460046003830154920154926040519485526020850152604084015260608301526080820152f35b3461029c57600036600319011261029c576020604051739402f9f20b4a27b55b1cc6cf015d98f764814fb28152f35b634e487b7160e01b600052604160045260246000fd5b6080810190811067ffffffffffffffff82111761074d57604052565b61071b565b6020810190811067ffffffffffffffff82111761074d57604052565b90601f8019910116810190811067ffffffffffffffff82111761074d57604052565b6040519061079d82610731565b565b604051906040820182811067ffffffffffffffff82111761074d57604052565b67ffffffffffffffff811161074d5760051b60200190565b81601f8201121561029c578035916107ee836107bf565b926107fc604051948561076e565b808452602092838086019260051b82010192831161029c578301905b828210610826575050505090565b81358152908301908301610818565b67ffffffffffffffff811161074d57601f01601f191660200190565b81601f8201121561029c5780359061086882610835565b92610876604051948561076e565b8284526020838301011161029c57816000926020809301838601378301015290565b3461029c5760a036600319011261029c57600480356108b68161028b565b6024356108c28161028b565b67ffffffffffffffff9060443582811161029c576108e390369086016107d7565b9060643583811161029c576108fb90369087016107d7565b9260843590811161029c576109139036908701610851565b936001600160a01b038082169033821415806109a2575b6109755783161561095d5715610946576109449550611e95565b005b604051626a0d4560e21b8152600081880152602490fd5b604051632bfa23e760e11b8152600081890152602490fd5b6040805163711bec9160e11b815233818b019081526001600160a01b038616602082015290918291010390fd5b50600082815260016020908152604080832033845290915290205460ff161561092a565b3461029c57602036600319011261029c5760206109e4600435612d87565b6040519015158152f35b90815180825260208080930193019160005b828110610a0e575050505090565b835185529381019392810192600101610a00565b90602061045c9281815201906109ee565b3461029c57604036600319011261029c5760043567ffffffffffffffff80821161029c573660238301121561029c578160040135610a70816107bf565b92610a7e604051948561076e565b81845260209160248386019160051b8301019136831161029c57602401905b828210610ad6578560243586811161029c5761061391610ac4610aca9236906004016107d7565b90611bd4565b60405191829182610a22565b8380918335610ae48161028b565b815201910190610a9d565b3461029c57602036600319011261029c576040516376e7d7f360e11b815260048035908201526000816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa80156103d65761061391600091610b6e575b50604051918291602083526020830190610426565b610b81913d8091833e61062e818361076e565b505050505050505050509250505038610b59565b3461029c576000806003193601126103e457610baf611b38565b600380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b3461029c57600036600319011261029c57602060405160468152f35b3461029c57602036600319011261029c57600435610c2c81612d87565b15610c7557610c506611c37937e0800091610c4b83600b541015612dd3565b612ee2565b610c63610c5e600b5461273a565b600b55565b600080808080943382f1156103d65780f35b60405162461bcd60e51b815260206004820152601760248201527f526567656e65726174696f6e206e6f74206e65656465640000000000000000006044820152606490fd5b3461029c57602036600319011261029c57600435610cd833826130b9565b15610d6a576040516376e7d7f360e11b815260048101919091526000816024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa80156103d65761061391600091610d43575b506040519182918261044b565b610d56913d8091833e61062e818361076e565b505050505050505050505091505038610d36565b606460405162461bcd60e51b815260206004820152602060248201527f4e6f206163746976652061636365737320746f20746869732061727469636c656044820152fd5b3461029c57600036600319011261029c576003546040516001600160a01b039091168152602090f35b634e487b7160e01b600052603260045260246000fd5b8054821015610e095760005260206000209060021b0190600090565b610dd7565b3461029c57604036600319011261029c5760243560043560005260096020526040600020805482101561029c57608091610e4791610ded565b5080549060018101549060018060a01b036003816002840154169201541691604051938452602084015260408301526060820152f35b3461029c57600036600319011261029c576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b604036600319011261029c57602435600435610edd8261028b565b610f17610f0f83610ef8846000526006602052604060002090565b9060018060a01b0316600052602052604060002090565b541515612a1a565b610f2081612799565b91610f2a83612093565b92610f3784341015612a5f565b610f4a610f43826126af565b6064900490565b91610f57610f43836126c5565b94610f6b86610f66868661275e565b61275e565b6040516376e7d7f360e11b8152600481018790526000976001600160a01b039189816024817f000000000000000000000000000000000000000000000000000000000000000087165afa9081156103d6578a916111c3575b50610fdc86610ef88b6000526006602052604060002090565b610fe68154612aa2565b9055611012610fff8a6000526006602052604060002090565b3360009081526020919091526040902090565b61101c8154611bac565b9055611031611029612183565b8a3389611c64565b89808080868a169b8c8282156111ba575bf1156103d6578992839283928392839183156111b0575b1690f1156103d65786808080938181156111a7575b739402f9f20b4a27b55b1cc6cf015d98f764814fb290f1156103d65761111a869261109d610c5e600b54612093565b6110c96201518042046110ba896000526008602052604060002090565b90600052602052604060002090565b6110d38154611bac565b90556110e9876000526009602052604060002090565b6111156110f4610790565b42815260208101889052336040820152926001600160a01b03166060840152565b612aaf565b80341161117a575b5050827f3846a81a03c71d25212027d222553680c4fc1bd52b8dfb1f1fbbbcd74c8fec796040518061115a3395829190602083019252565b0390a461116681612d87565b61116e575080f35b61117790612ee2565b80f35b818061118781933461275e565b81811561119e575b3390f1156103d6578338611122565b506108fc61118f565b506108fc61106e565b6108fc9250611059565b506108fc611042565b6111d791503d808c833e61062e818361076e565b505050505050505050935050505038610fc3565b3461029c57604036600319011261029c576004356112088161028b565b602435908115159081830361029c576001600160a01b038116928315611293576112546112659233600052600160205260406000209060018060a01b0316600052602052604060002090565b9060ff801983541691151516179055565b6040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b60405162ced3e160e81b815260006004820152602490fd5b3461029c57604036600319011261029c5760406112f36024356112cd8161028b565b6004356000526007602052826000209060018060a01b0316600052602052604060002090565b60ff6001825492015416825191825215156020820152f35b9092916040820191604081528451809352606081019260208096019060005b8181106113445750505061045c93948184039101526109ee565b82516001600160a01b03168652948701949187019160010161132a565b3461029c57602036600319011261029c57604051639fb53fcb60e01b8152600480359082018190526000826024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9182156103d657600092611452575b506113d58251611b64565b9160005b81518110156114435761143e9061142d6113fd856000526006602052604060002090565b61141761140a8487611bc0565b516001600160a01b031690565b60018060a01b0316600052602052604060002090565b546114388287611bc0565b52611bac565b6113d9565b6040518061061386858361130b565b61146e91923d8091833e611466818361076e565b810190612e17565b90386113ca565b3461029c57602036600319011261029c57600435600052600a6020526020604060002054604051908152f35b3461029c57602036600319011261029c5760206114bf600435612799565b604051908152f35b3461029c57604036600319011261029c57600435600052600860205260406000206024356000526020526020604060002054604051908152f35b3461029c57600036600319011261029c57602060405160148152f35b3461029c57600036600319011261029c5760206040516611c37937e080008152f35b3461029c57608036600319011261029c5760243560043561155f8261028b565b604435917fe3726a6d4ed43d7d4677d7dffa4cf0a0d67d40db3cd11cccf053dddceaf3d7d3906001600160a01b03906115bb337f0000000000000000000000000000000000000000000000000000000000000000841614612443565b836115d0816000526005602052604060002090565b5560026115e7856000526005602052604060002090565b016115f38682546120cc565b9055600361160b856000526005602052604060002090565b016116178682546120cc565b905561162d84600052600a602052604060002090565b6116388682546120cc565b905561165281610ef8866000526006602052604060002090565b61165d8682546120cc565b905561167261166a612183565b8686846124e6565b604080519586526064356020870152911693a3005b3461029c57600036600319011261029c57602060405160328152f35b3461029c57604036600319011261029c57602060ff6116ff6004356116c78161028b565b602435906116d48261028b565b60018060a01b03166000526001845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b3461029c5760a036600319011261029c576004356117288161028b565b6024356117348161028b565b60843567ffffffffffffffff811161029c57611754903690600401610851565b906001600160a01b0383163381141590816117a7575b5061178057610944926064359160443591611ce5565b60405163711bec9160e11b81523360048201526001600160a01b0384166024820152604490fd5b6000908152600160209081526040808320338452909152902060ff91505416153861176a565b3461029c57602036600319011261029c576004356118036117fb610fff836000526006602052604060002090565b541515612b36565b61181c61181761181333846130b9565b1590565b612b77565b61183433610ef8836000526006602052604060002090565b61183e8154612aa2565b90556003611856826000526005602052604060002090565b016118618154612aa2565b905561186d8133612be6565b611876426120a7565b6118a861188161079f565b828152600160208201526118a333610ef8866000526007602052604060002090565b612bc3565b604051818152339083907f8f4d6f0c7458447e5095acea28045c0cd637aa3b49812761a7ac022e6d643bf690602090a3817fc56e8aa8e9f4284830fd4657bc77d60640af2ec679f2099faf320ee4202ff4226040518061190e3395829190602083019252565b0390a361191a81612d87565b61192057005b61094490612ee2565b3461029c57602036600319011261029c576004356119468161028b565b61194e611b38565b6001600160a01b039081169081156119a257600354826bffffffffffffffffffffffff60a01b821617600355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b3461029c57604036600319011261029c5760206109e46024356119dd8161028b565b6004356130b9565b60208082019080835283518092528060408094019401926000905b838210611a0f57505050505090565b8451805187528084015187850152808201516001600160a01b0390811688840152606091820151169087015260809095019493820193600190910190611a00565b3461029c5760208060031936011261029c576004908135600052600981526040918260002090815491611a82836107bf565b93611a8f8651958661076e565b83855260009182528082208186015b858410611ab25787518061061389826119e5565b84836001928a51611ac281610731565b855481528486015483820152848060a01b03806002880154168d8301526003870154166060820152815201920193019290611a9e565b3461029c57600036600319011261029c576020604051662386f26fc100008152f35b3461029c57600036600319011261029c576020600b54604051908152f35b6003546001600160a01b03163303611b4c57565b60405163118cdaa760e01b8152336004820152602490fd5b90611b6e826107bf565b611b7b604051918261076e565b8281528092611b8c601f19916107bf565b0190602036910137565b634e487b7160e01b600052601160045260246000fd5b6000198114611bbb5760010190565b611b96565b8051821015610e095760209160051b010190565b91909180518351808203611c42575050611bee8151611b64565b90600090815b8151811015611c3a578061142d611c359260051b85602080808489010151938c010151825252604086209060018060a01b0316600052602052604060002090565b611bf4565b509193505050565b604051635b05999160e01b815260048101919091526024810191909152604490fd5b9192916001600160a01b0382811615611ccc57811615611cb457611cac61079d9490604051916001835260208301526040820190600182526001606084015260808301604052565b929091611e95565b604051626a0d4560e21b815260006004820152602490fd5b604051632bfa23e760e11b815260006004820152602490fd5b92939290916001600160a01b0380841615611ccc57821615611cb45761079d94611cac60405192600184526020840152604083019160018352606084015260808301604052565b908051835190818103611c4257505060005b8151811015611daa57600581901b8281016020908101519186010151611d78929185906001600160a01b038216611d7d575b505050611bac565b611d3e565b611da091610ef8611d98926000526000602052604060002090565b9182546120cc565b9055388481611d70565b50805191939291600103611e4c576020818101518382015160408051928352928201526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b6001600160a01b038416611e16575b50505050565b8051600103611e3d5790602080611e349593015191015191336121c6565b38808080611e10565b611e4793336123d7565b611e34565b6040516001600160a01b0385169060009033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb9080611e8d8888836120d9565b0390a4611e01565b949190918151845190818103611c4257505060005b8251811015611f9d57600581901b83810160209081015191870101516001600160a01b03929186908a8516611f16575b611eec948216611ef157505050611bac565b611eaa565b611f0c91610ef8611d98926000526000602052604060002090565b9055388581611d70565b9192939050611f338a610ef8846000526000602052604060002090565b54838110611f665791879184611eec96959403611f5e8d610ef8856000526000602052604060002090565b559450611eda565b6040516303dee4c560e01b81526001600160a01b038c16600482015260248101919091526044810184905260648101839052608490fd5b509491939290936001855114600014612048576020858101518382015160408051928352928201526001600160a01b03838116929086169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b6001600160a01b038116612011575b5050505050565b84516001036120375760208061202d96015192015192336122c0565b388080808061200a565b6120439491923361240c565b61202d565b6040516001600160a01b03828116919085169033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb908061208b888c836120d9565b0390a4611ffb565b906611c37937e080008201809211611bbb57565b9062093a808201809211611bbb57565b90662386f26fc10000918201809211611bbb57565b91908201809211611bbb57565b90916120f061045c936040845260408401906109ee565b9160208184039101526109ee565b9081602091031261029c575161045c81610315565b909260a09261045c9594600180861b0316835260006020840152604083015260608201528160808201520190610426565b919261045c95949160a094600180871b038092168552166020840152604083015260608201528160808201520190610426565b6040513d6000823e3d90fd5b6040519061219082610752565b60008252565b3d156121c1573d906121a782610835565b916121b5604051938461076e565b82523d6000602084013e565b606090565b9293919093843b6121d8575050505050565b6020916121fb604051948593849363f23a6e6160e01b9889865260048601612113565b038160006001600160a01b0388165af160009181612290575b506122535782612222612196565b805191908261224c57604051632bfa23e760e11b81526001600160a01b0383166004820152602490fd5b9050602001fd5b6001600160e01b0319160361226d5750388080808061200a565b604051632bfa23e760e11b81526001600160a01b03919091166004820152602490fd5b6122b291925060203d81116122b9575b6122aa818361076e565b8101906120fe565b9038612214565b503d6122a0565b939290949194853b6122d5575b505050505050565b6122f8602093604051958694859463f23a6e6160e01b998a875260048701612144565b038160006001600160a01b0388165af16000918161233a575b5061231f5782612222612196565b6001600160e01b0319160361226d57503880808080806122cd565b61235391925060203d81116122b9576122aa818361076e565b9038612311565b9261238961045c95936123979360018060a01b031686526000602087015260a0604087015260a08601906109ee565b9084820360608601526109ee565b916080818403910152610426565b939061045c9593612389916123979460018060a01b03809216885216602087015260a0604087015260a08601906109ee565b9293919093843b6123e9575050505050565b6020916121fb604051948593849363bc197c8160e01b988986526004860161235a565b939290949194853b61242057505050505050565b6122f8602093604051958694859463bc197c8160e01b998a8752600487016123a5565b1561244a57565b60405162461bcd60e51b815260206004820152602860248201527f4f6e6c7920456e6372797074656441727469636c657320636f6e74726163742060448201526718d85b881b5a5b9d60c21b6064820152608490fd5b9091906001600160a01b03811615611ccc576124e061079d9390604051916001835260208301526040820190600182526001606084015260808301604052565b91611d2c565b919291906001600160a01b03821615611ccc5761079d936124e060405192600184526020840152604083019160018352606084015260808301604052565b1561252b57565b60405162461bcd60e51b815260206004820152602260248201527f4e6f206c6963656e73657320657869737420666f7220746869732061727469636044820152616c6560f01b6064820152608490fd5b81601f8201121561029c57805161259181610835565b9261259f604051948561076e565b8184526020828401011161029c5761045c9160208085019101610403565b519061079d8261028b565b519060ff8216820361029c57565b6101c08183031261029c57805192602082015167ffffffffffffffff9081811161029c578461260691850161257b565b93604084015182811161029c578161261f91860161257b565b93606081015183811161029c578261263891830161257b565b93612645608083016125bd565b9360a083015181811161029c578461265e91850161257b565b9360c084015191821161029c5761267691840161257b565b9160e081015191610100820151916101208101519161014082015191610160810151916101a06126a961018084016125c8565b92015190565b90604682029180830460461490151715611bbb57565b90601482029180830460141490151715611bbb57565b81810292918115918404141715611bbb57565b156126f557565b60405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964206c6963656e736520636f6e66696775726174696f6e0000006044820152606490fd5b6611c37937e07fff19810191908211611bbb57565b600019810191908211611bbb57565b91908203918211611bbb57565b634e487b7160e01b600052601260045260246000fd5b801561279457670dbd2fc137a300000490565b61276b565b6127ad81600052600a602052604060002090565b546127b9811515612524565b6040516376e7d7f360e11b8152600481018390526000929083816024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa80156103d657612864936128266128599261285e948890899261288b575b506126db565b6128318115156126ee565b60018111156128805761284e6128496128549261274f565b612781565b9161274f565b6126db565b6120b7565b906128b5565b670de0b6b3a764000091508181111561287b575090565b905090565b50612854869161274f565b90506128a191503d808a833e61062e818361076e565b50509a505050965050505050505038612820565b6040516376e7d7f360e11b81526004810182905260009391929084816024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156103d6576129269161291d9187916129f2575b504261275e565b62015180900490565b9380936201518042049082955b878710806129e8575b156129db57612970612958836000526008602052604060002090565b612962898661275e565b600052602052604060002090565b5461298d5761298161298791611bac565b96611bac565b95612933565b93955050509193505b601e8111156129cf57506129af610f43601e5b846126db565b9050808211156129c25761045c9161275e565b505066038d7ea4c6800090565b610f436129af916129a9565b9395505050919350612996565b50601e871061293c565b612a0691503d8089833e61062e818361076e565b505050505050965050505050505038612916565b15612a2157565b60405162461bcd60e51b815260206004820152601660248201527553656c6c657220686173206e6f206c6963656e73657360501b6044820152606490fd5b15612a6657565b60405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152606490fd5b8015611bbb576000190190565b80546801000000000000000081101561074d57612ad191600182018155610ded565b612b2057815181556020820151600182015560408201516002820180546001600160a01b039283166001600160a01b031991821617909155606090930151600390920180549093169116179055565b634e487b7160e01b600052600060045260246000fd5b15612b3d57565b60405162461bcd60e51b81526020600482015260126024820152712737903634b1b2b739b2903a3790313ab93760711b6044820152606490fd5b15612b7e57565b60405162461bcd60e51b815260206004820152601960248201527f416c7265616479206861732061637469766520616363657373000000000000006044820152606490fd5b6001602061079d93805184550151151591019060ff801983541691151516179055565b6001600160a01b038116918215611cb457612c20604051916001835260208301526040820190600182526001606084015260808301604052565b919060409460008651612c3281610752565b528151845190818103612d6657505060005b8251811015612cdf578060051b60208082860101519187010151612c7686610ef8846000526000602052604060002090565b54818110612ca95786610ef8612ca4959493612c9e9303936000526000602052604060002090565b55611bac565b612c44565b89516303dee4c560e01b81526001600160a01b038816600482015260248101919091526044810182905260648101839052608490fd5b50949060009493925060018151148514612d345760209081015192810151915192835282015233907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629080604081015b0390a4565b905133927f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb928291612d2f91836120d9565b8751635b05999160e01b815260048101919091526024810191909152604490fd5b6000526005602052604060002060036002820154910154908015612dcc5781810391818311611bbb57606483029283046064149082141715611bbb5760329104101590565b5050600090565b15612dda57565b60405162461bcd60e51b8152602060048201526015602482015274125b9cdd59999a58da595b9d0819d85cc81c1bdbdb605a1b6044820152606490fd5b602090818184031261029c5780519067ffffffffffffffff821161029c57019180601f8401121561029c578251612e4d816107bf565b93612e5b604051958661076e565b818552838086019260051b82010192831161029c578301905b828210612e82575050505090565b8380918351612e908161028b565b815201910190612e74565b15612ea257565b60405162461bcd60e51b815260206004820152600e60248201526d4e6f204e465420686f6c6465727360901b6044820152606490fd5b8115612794570690565b90612f1c6002612efc846000526005602052604060002090565b01546003612f14856000526005602052604060002090565b01549061275e565b9182156130b457604051639fb53fcb60e01b815260048101829052926000846024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9384156103d657600094613099575b50612f8684511515612e9b565b60005b81811061303e5750819293506003612fcb7eb4ea54fb8c538cd9c23515e23d54351acc66c4539507193ceae7d70e65d30d936000526005602052604060002090565b01612fd78282546120cc565b9055426004612ff0856000526005602052604060002090565b015561300683600052600a602052604060002090565b6130118282546120cc565b90556003613029846000526005602052604060002090565b015460408051928352602083019190915290a2565b6130949061308f61305c61140a613056895185612ed8565b89611bc0565b61307481610ef8886000526006602052604060002090565b61307e8154611bac565b905585613089612183565b916124a0565b611bac565b612f89565b6130ad91943d8091833e611466818361076e565b9238612f79565b509050565b60009081526007602090815260408083206001600160a01b0390941683529290522060405190604082019180831067ffffffffffffffff84111761074d5760209260405260ff6001835493848452015416151592839101528161311a575090565b9050421090565b9061313460209282815194859201610403565b019056fea2646970667358221220b1909d321a4c0b53c78dfefd6f2029d54ebfec0974cc8909a4ea00f62112975864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x1C11D96 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x813D3F6 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x9886C9C EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x1453A424 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x1E084558 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x2D2C5565 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x43C7580E EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x607EA36D EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x72009528 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x75315716 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x8D40E0CD EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x95F58AB8 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x98E9D0E0 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x996CB745 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xAB0B8B04 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0xB3C655C0 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xBCA59003 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0xC55D0F56 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xC98D6E99 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xCA9F19EF EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xCB8B2522 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xDF81A823 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0xE3685397 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xF24C4EAC EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xF499924B EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xF4BF28A0 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xF86325ED EQ PUSH2 0x1CD JUMPI PUSH4 0xFA08B038 EQ PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x1AF8 JUMP JUMPDEST PUSH2 0x1A50 JUMP JUMPDEST PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x1929 JUMP JUMPDEST PUSH2 0x17CD JUMP JUMPDEST PUSH2 0x170B JUMP JUMPDEST PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x1687 JUMP JUMPDEST PUSH2 0x153F JUMP JUMPDEST PUSH2 0x151D JUMP JUMPDEST PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x14C7 JUMP JUMPDEST PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x1475 JUMP JUMPDEST PUSH2 0x1361 JUMP JUMPDEST PUSH2 0x12AB JUMP JUMPDEST PUSH2 0x11EB JUMP JUMPDEST PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0xE7D JUMP JUMPDEST PUSH2 0xE0E JUMP JUMPDEST PUSH2 0xDAE JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST PUSH2 0xC0F JUMP JUMPDEST PUSH2 0xBF3 JUMP JUMPDEST PUSH2 0xB95 JUMP JUMPDEST PUSH2 0xAEF JUMP JUMPDEST PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x9C6 JUMP JUMPDEST PUSH2 0x898 JUMP JUMPDEST PUSH2 0x6EC JUMP JUMPDEST PUSH2 0x694 JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST PUSH2 0x45F JUMP JUMPDEST PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0x395 JUMP JUMPDEST PUSH2 0x327 JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x29C JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH2 0x2E9 PUSH1 0x4 CALLDATALOAD PUSH2 0x2C3 DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0x29C JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x346 DUP2 PUSH2 0x315 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x384 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x373 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x368 JUMP JUMPDEST PUSH4 0x3A24D07 PUSH1 0xE2 SHL DUP2 EQ SWAP2 POP PUSH2 0x361 JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3E4 JUMPI PUSH2 0x3AF PUSH2 0x1B38 JUMP JUMPDEST DUP1 DUP1 DUP1 DUP1 PUSH1 0xB SLOAD DUP2 PUSH1 0xB SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND DUP3 DUP3 ISZERO PUSH2 0x3DB JUMPI JUMPDEST CALL ISZERO PUSH2 0x3D6 JUMPI DUP1 RETURN JUMPDEST PUSH2 0x2177 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x3CD JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x416 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x406 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x43F DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x403 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x45C SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x426 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x40 MLOAD PUSH4 0x76E7D7F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x0 DUP2 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 SWAP1 DUP2 SWAP3 DUP3 SWAP2 PUSH2 0x617 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x7B226E616D65223A2022526561646572204C6963656E7365202D200000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x3B DUP5 ADD PUSH2 0x503 SWAP2 PUSH2 0x3121 JUMP JUMPDEST PUSH2 0x88B PUSH1 0xF2 SHL DUP2 MSTORE PUSH1 0x2 ADD PUSH16 0x113232B9B1B934B83A34B7B7111D1011 PUSH1 0x81 SHL DUP2 MSTORE PUSH1 0x10 ADD PUSH2 0x530 SWAP2 PUSH2 0x3121 JUMP JUMPDEST PUSH2 0x88B PUSH1 0xF2 SHL DUP2 MSTORE PUSH1 0x2 ADD PUSH15 0x2261747472696275746573223A205B PUSH1 0x88 SHL DUP2 MSTORE PUSH1 0xF ADD PUSH32 0x7B2274726169745F74797065223A20224C6F636174696F6E222C202276616C75 DUP2 MSTORE PUSH5 0x32911D1011 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x25 ADD PUSH2 0x590 SWAP2 PUSH2 0x3121 JUMP JUMPDEST PUSH3 0x89F4B PUSH1 0xEA SHL DUP2 MSTORE PUSH1 0x3 ADD PUSH32 0x7B2274726169745F74797065223A20224C6963656E73652054797065222C2022 DUP2 MSTORE PUSH32 0x76616C7565223A202252656164657220416363657373227D0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x38 ADD PUSH2 0x5D7D PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SUB PUSH1 0x1F NOT DUP2 ADD DUP3 MSTORE PUSH2 0x605 SWAP1 DUP3 PUSH2 0x76E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x613 DUP2 SWAP3 DUP3 PUSH2 0x44B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP1 POP PUSH2 0x636 SWAP3 POP RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x62E DUP2 DUP4 PUSH2 0x76E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x25D6 JUMP JUMPDEST POP POP POP POP POP POP POP POP SWAP5 POP POP SWAP2 SWAP1 POP SWAP1 SWAP2 CODESIZE PUSH2 0x4C9 JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH2 0x2E9 PUSH1 0x24 CALLDATALOAD PUSH2 0x66E DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x4 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0x9402F9F20B4A27B55B1CC6CF015D98F764814FB2 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x74D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x71B JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x74D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x74D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x79D DUP3 PUSH2 0x731 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x74D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x74D JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x29C JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x7EE DUP4 PUSH2 0x7BF JUMP JUMPDEST SWAP3 PUSH2 0x7FC PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x76E JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x29C JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x826 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x818 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x74D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x29C JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x868 DUP3 PUSH2 0x835 JUMP JUMPDEST SWAP3 PUSH2 0x876 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x76E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x29C JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 DUP1 CALLDATALOAD PUSH2 0x8B6 DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x8C2 DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x29C JUMPI PUSH2 0x8E3 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x7D7 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x29C JUMPI PUSH2 0x8FB SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x7D7 JUMP JUMPDEST SWAP3 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x29C JUMPI PUSH2 0x913 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x851 JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 CALLER DUP3 EQ ISZERO DUP1 PUSH2 0x9A2 JUMPI JUMPDEST PUSH2 0x975 JUMPI DUP4 AND ISZERO PUSH2 0x95D JUMPI ISZERO PUSH2 0x946 JUMPI PUSH2 0x944 SWAP6 POP PUSH2 0x1E95 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP9 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP10 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP2 DUP12 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP2 DUP3 SWAP2 ADD SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x92A JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH2 0x9E4 PUSH1 0x4 CALLDATALOAD PUSH2 0x2D87 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xA0E JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xA00 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x45C SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x9EE JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x29C JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x29C JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0xA70 DUP2 PUSH2 0x7BF JUMP JUMPDEST SWAP3 PUSH2 0xA7E PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x76E JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x24 DUP4 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x29C JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xAD6 JUMPI DUP6 PUSH1 0x24 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x29C JUMPI PUSH2 0x613 SWAP2 PUSH2 0xAC4 PUSH2 0xACA SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x7D7 JUMP JUMPDEST SWAP1 PUSH2 0x1BD4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xA22 JUMP JUMPDEST DUP4 DUP1 SWAP2 DUP4 CALLDATALOAD PUSH2 0xAE4 DUP2 PUSH2 0x28B JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xA9D JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x40 MLOAD PUSH4 0x76E7D7F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x0 DUP2 PUSH1 0x24 DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH2 0x613 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xB6E JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x426 JUMP JUMPDEST PUSH2 0xB81 SWAP2 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x62E DUP2 DUP4 PUSH2 0x76E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP SWAP3 POP POP POP CODESIZE PUSH2 0xB59 JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3E4 JUMPI PUSH2 0xBAF PUSH2 0x1B38 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x46 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xC2C DUP2 PUSH2 0x2D87 JUMP JUMPDEST ISZERO PUSH2 0xC75 JUMPI PUSH2 0xC50 PUSH7 0x11C37937E08000 SWAP2 PUSH2 0xC4B DUP4 PUSH1 0xB SLOAD LT ISZERO PUSH2 0x2DD3 JUMP JUMPDEST PUSH2 0x2EE2 JUMP JUMPDEST PUSH2 0xC63 PUSH2 0xC5E PUSH1 0xB SLOAD PUSH2 0x273A JUMP JUMPDEST PUSH1 0xB SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 SWAP5 CALLER DUP3 CALL ISZERO PUSH2 0x3D6 JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567656E65726174696F6E206E6F74206E6565646564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xCD8 CALLER DUP3 PUSH2 0x30B9 JUMP JUMPDEST ISZERO PUSH2 0xD6A JUMPI PUSH1 0x40 MLOAD PUSH4 0x76E7D7F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH2 0x613 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xD43 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x44B JUMP JUMPDEST PUSH2 0xD56 SWAP2 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x62E DUP2 DUP4 PUSH2 0x76E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP SWAP2 POP POP CODESIZE PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206163746976652061636365737320746F20746869732061727469636C65 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xE09 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xDD7 JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x29C JUMPI PUSH1 0x80 SWAP2 PUSH2 0xE47 SWAP2 PUSH2 0xDED JUMP JUMPDEST POP DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 DUP2 PUSH1 0x2 DUP5 ADD SLOAD AND SWAP3 ADD SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0xEDD DUP3 PUSH2 0x28B JUMP JUMPDEST PUSH2 0xF17 PUSH2 0xF0F DUP4 PUSH2 0xEF8 DUP5 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO ISZERO PUSH2 0x2A1A JUMP JUMPDEST PUSH2 0xF20 DUP2 PUSH2 0x2799 JUMP JUMPDEST SWAP2 PUSH2 0xF2A DUP4 PUSH2 0x2093 JUMP JUMPDEST SWAP3 PUSH2 0xF37 DUP5 CALLVALUE LT ISZERO PUSH2 0x2A5F JUMP JUMPDEST PUSH2 0xF4A PUSH2 0xF43 DUP3 PUSH2 0x26AF JUMP JUMPDEST PUSH1 0x64 SWAP1 DIV SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0xF57 PUSH2 0xF43 DUP4 PUSH2 0x26C5 JUMP JUMPDEST SWAP5 PUSH2 0xF6B DUP7 PUSH2 0xF66 DUP7 DUP7 PUSH2 0x275E JUMP JUMPDEST PUSH2 0x275E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x76E7D7F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP10 DUP2 PUSH1 0x24 DUP2 PUSH32 0x0 DUP8 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3D6 JUMPI DUP11 SWAP2 PUSH2 0x11C3 JUMPI JUMPDEST POP PUSH2 0xFDC DUP7 PUSH2 0xEF8 DUP12 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xFE6 DUP2 SLOAD PUSH2 0x2AA2 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1012 PUSH2 0xFFF DUP11 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x101C DUP2 SLOAD PUSH2 0x1BAC JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1031 PUSH2 0x1029 PUSH2 0x2183 JUMP JUMPDEST DUP11 CALLER DUP10 PUSH2 0x1C64 JUMP JUMPDEST DUP10 DUP1 DUP1 DUP1 DUP7 DUP11 AND SWAP12 DUP13 DUP3 DUP3 ISZERO PUSH2 0x11BA JUMPI JUMPDEST CALL ISZERO PUSH2 0x3D6 JUMPI DUP10 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP2 DUP4 ISZERO PUSH2 0x11B0 JUMPI JUMPDEST AND SWAP1 CALL ISZERO PUSH2 0x3D6 JUMPI DUP7 DUP1 DUP1 DUP1 SWAP4 DUP2 DUP2 ISZERO PUSH2 0x11A7 JUMPI JUMPDEST PUSH20 0x9402F9F20B4A27B55B1CC6CF015D98F764814FB2 SWAP1 CALL ISZERO PUSH2 0x3D6 JUMPI PUSH2 0x111A DUP7 SWAP3 PUSH2 0x109D PUSH2 0xC5E PUSH1 0xB SLOAD PUSH2 0x2093 JUMP JUMPDEST PUSH2 0x10C9 PUSH3 0x15180 TIMESTAMP DIV PUSH2 0x10BA DUP10 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x10D3 DUP2 SLOAD PUSH2 0x1BAC JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x10E9 DUP8 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1115 PUSH2 0x10F4 PUSH2 0x790 JUMP JUMPDEST TIMESTAMP DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE CALLER PUSH1 0x40 DUP3 ADD MSTORE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x2AAF JUMP JUMPDEST DUP1 CALLVALUE GT PUSH2 0x117A JUMPI JUMPDEST POP POP DUP3 PUSH32 0x3846A81A03C71D25212027D222553680C4FC1BD52B8DFB1F1FBBBCD74C8FEC79 PUSH1 0x40 MLOAD DUP1 PUSH2 0x115A CALLER SWAP6 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP3 MSTORE JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1166 DUP2 PUSH2 0x2D87 JUMP JUMPDEST PUSH2 0x116E JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x1177 SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP2 DUP1 PUSH2 0x1187 DUP2 SWAP4 CALLVALUE PUSH2 0x275E JUMP JUMPDEST DUP2 DUP2 ISZERO PUSH2 0x119E JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x3D6 JUMPI DUP4 CODESIZE PUSH2 0x1122 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x118F JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x106E JUMP JUMPDEST PUSH2 0x8FC SWAP3 POP PUSH2 0x1059 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x1042 JUMP JUMPDEST PUSH2 0x11D7 SWAP2 POP RETURNDATASIZE DUP1 DUP13 DUP4 RETURNDATACOPY PUSH2 0x62E DUP2 DUP4 PUSH2 0x76E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP SWAP4 POP POP POP POP CODESIZE PUSH2 0xFC3 JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1208 DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 DUP4 SUB PUSH2 0x29C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 DUP4 ISZERO PUSH2 0x1293 JUMPI PUSH2 0x1254 PUSH2 0x1265 SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x40 PUSH2 0x12F3 PUSH1 0x24 CALLDATALOAD PUSH2 0x12CD DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 DUP3 SLOAD SWAP3 ADD SLOAD AND DUP3 MLOAD SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x40 DUP3 ADD SWAP2 PUSH1 0x40 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP4 MSTORE PUSH1 0x60 DUP2 ADD SWAP3 PUSH1 0x20 DUP1 SWAP7 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1344 JUMPI POP POP POP PUSH2 0x45C SWAP4 SWAP5 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x9EE JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE SWAP5 DUP8 ADD SWAP5 SWAP2 DUP8 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x132A JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x40 MLOAD PUSH4 0x9FB53FCB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 DUP3 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1452 JUMPI JUMPDEST POP PUSH2 0x13D5 DUP3 MLOAD PUSH2 0x1B64 JUMP JUMPDEST SWAP2 PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1443 JUMPI PUSH2 0x143E SWAP1 PUSH2 0x142D PUSH2 0x13FD DUP6 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1417 PUSH2 0x140A DUP5 DUP8 PUSH2 0x1BC0 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH2 0x1438 DUP3 DUP8 PUSH2 0x1BC0 JUMP JUMPDEST MSTORE PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x13D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x613 DUP7 DUP6 DUP4 PUSH2 0x130B JUMP JUMPDEST PUSH2 0x146E SWAP2 SWAP3 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x1466 DUP2 DUP4 PUSH2 0x76E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2E17 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x13CA JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH2 0x14BF PUSH1 0x4 CALLDATALOAD PUSH2 0x2799 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x14 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH7 0x11C37937E08000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x155F DUP3 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH32 0xE3726A6D4ED43D7D4677D7DFFA4CF0A0D67D40DB3CD11CCCF053DDDCEAF3D7D3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x15BB CALLER PUSH32 0x0 DUP5 AND EQ PUSH2 0x2443 JUMP JUMPDEST DUP4 PUSH2 0x15D0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x2 PUSH2 0x15E7 DUP6 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0x15F3 DUP7 DUP3 SLOAD PUSH2 0x20CC JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x3 PUSH2 0x160B DUP6 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0x1617 DUP7 DUP3 SLOAD PUSH2 0x20CC JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x162D DUP5 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1638 DUP7 DUP3 SLOAD PUSH2 0x20CC JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1652 DUP2 PUSH2 0xEF8 DUP7 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x165D DUP7 DUP3 SLOAD PUSH2 0x20CC JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1672 PUSH2 0x166A PUSH2 0x2183 JUMP JUMPDEST DUP7 DUP7 DUP5 PUSH2 0x24E6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x20 DUP8 ADD MSTORE SWAP2 AND SWAP4 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x32 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x16FF PUSH1 0x4 CALLDATALOAD PUSH2 0x16C7 DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x16D4 DUP3 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1728 DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x1734 DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x29C JUMPI PUSH2 0x1754 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x851 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP2 EQ ISZERO SWAP1 DUP2 PUSH2 0x17A7 JUMPI JUMPDEST POP PUSH2 0x1780 JUMPI PUSH2 0x944 SWAP3 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0xFF SWAP2 POP SLOAD AND ISZERO CODESIZE PUSH2 0x176A JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1803 PUSH2 0x17FB PUSH2 0xFFF DUP4 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO ISZERO PUSH2 0x2B36 JUMP JUMPDEST PUSH2 0x181C PUSH2 0x1817 PUSH2 0x1813 CALLER DUP5 PUSH2 0x30B9 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2B77 JUMP JUMPDEST PUSH2 0x1834 CALLER PUSH2 0xEF8 DUP4 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x183E DUP2 SLOAD PUSH2 0x2AA2 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x3 PUSH2 0x1856 DUP3 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0x1861 DUP2 SLOAD PUSH2 0x2AA2 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x186D DUP2 CALLER PUSH2 0x2BE6 JUMP JUMPDEST PUSH2 0x1876 TIMESTAMP PUSH2 0x20A7 JUMP JUMPDEST PUSH2 0x18A8 PUSH2 0x1881 PUSH2 0x79F JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x18A3 CALLER PUSH2 0xEF8 DUP7 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 DUP4 SWAP1 PUSH32 0x8F4D6F0C7458447E5095ACEA28045C0CD637AA3B49812761A7AC022E6D643BF6 SWAP1 PUSH1 0x20 SWAP1 LOG3 DUP2 PUSH32 0xC56E8AA8E9F4284830FD4657BC77D60640AF2EC679F2099FAF320EE4202FF422 PUSH1 0x40 MLOAD DUP1 PUSH2 0x190E CALLER SWAP6 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP3 MSTORE JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x191A DUP2 PUSH2 0x2D87 JUMP JUMPDEST PUSH2 0x1920 JUMPI STOP JUMPDEST PUSH2 0x944 SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1946 DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH2 0x194E PUSH2 0x1B38 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x19A2 JUMPI PUSH1 0x3 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x3 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH2 0x9E4 PUSH1 0x24 CALLDATALOAD PUSH2 0x19DD DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x30B9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE DUP1 PUSH1 0x40 DUP1 SWAP5 ADD SWAP5 ADD SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x1A0F JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 MLOAD DUP1 MLOAD DUP8 MSTORE DUP1 DUP5 ADD MLOAD DUP8 DUP6 ADD MSTORE DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP9 DUP5 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD AND SWAP1 DUP8 ADD MSTORE PUSH1 0x80 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP3 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1A00 JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29C JUMPI PUSH1 0x4 SWAP1 DUP2 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH2 0x1A82 DUP4 PUSH2 0x7BF JUMP JUMPDEST SWAP4 PUSH2 0x1A8F DUP7 MLOAD SWAP6 DUP7 PUSH2 0x76E JUMP JUMPDEST DUP4 DUP6 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE DUP1 DUP3 KECCAK256 DUP2 DUP7 ADD JUMPDEST DUP6 DUP5 LT PUSH2 0x1AB2 JUMPI DUP8 MLOAD DUP1 PUSH2 0x613 DUP10 DUP3 PUSH2 0x19E5 JUMP JUMPDEST DUP5 DUP4 PUSH1 0x1 SWAP3 DUP11 MLOAD PUSH2 0x1AC2 DUP2 PUSH2 0x731 JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE DUP5 DUP7 ADD SLOAD DUP4 DUP3 ADD MSTORE DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0x2 DUP9 ADD SLOAD AND DUP14 DUP4 ADD MSTORE PUSH1 0x3 DUP8 ADD SLOAD AND PUSH1 0x60 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP4 ADD SWAP3 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH7 0x2386F26FC10000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29C JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1B4C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1B6E DUP3 PUSH2 0x7BF JUMP JUMPDEST PUSH2 0x1B7B PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x76E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1B8C PUSH1 0x1F NOT SWAP2 PUSH2 0x7BF JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1BBB JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1B96 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xE09 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 MLOAD DUP4 MLOAD DUP1 DUP3 SUB PUSH2 0x1C42 JUMPI POP POP PUSH2 0x1BEE DUP2 MLOAD PUSH2 0x1B64 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1C3A JUMPI DUP1 PUSH2 0x142D PUSH2 0x1C35 SWAP3 PUSH1 0x5 SHL DUP6 PUSH1 0x20 DUP1 DUP1 DUP5 DUP10 ADD ADD MLOAD SWAP4 DUP13 ADD ADD MLOAD DUP3 MSTORE MSTORE PUSH1 0x40 DUP7 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1BF4 JUMP JUMPDEST POP SWAP2 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND ISZERO PUSH2 0x1CCC JUMPI DUP2 AND ISZERO PUSH2 0x1CB4 JUMPI PUSH2 0x1CAC PUSH2 0x79D SWAP5 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 PUSH1 0x1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0x1E95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP3 SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND ISZERO PUSH2 0x1CCC JUMPI DUP3 AND ISZERO PUSH2 0x1CB4 JUMPI PUSH2 0x79D SWAP5 PUSH2 0x1CAC PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP1 MLOAD DUP4 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1C42 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1DAA JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP3 DUP2 ADD PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 DUP7 ADD ADD MLOAD PUSH2 0x1D78 SWAP3 SWAP2 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1D7D JUMPI JUMPDEST POP POP POP PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x1DA0 SWAP2 PUSH2 0xEF8 PUSH2 0x1D98 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD PUSH2 0x20CC JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP5 DUP2 PUSH2 0x1D70 JUMP JUMPDEST POP DUP1 MLOAD SWAP2 SWAP4 SWAP3 SWAP2 PUSH1 0x1 SUB PUSH2 0x1E4C JUMPI PUSH1 0x20 DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH1 0x0 SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 LOG4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1E16 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 SUB PUSH2 0x1E3D JUMPI SWAP1 PUSH1 0x20 DUP1 PUSH2 0x1E34 SWAP6 SWAP4 ADD MLOAD SWAP2 ADD MLOAD SWAP2 CALLER PUSH2 0x21C6 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1E10 JUMP JUMPDEST PUSH2 0x1E47 SWAP4 CALLER PUSH2 0x23D7 JUMP JUMPDEST PUSH2 0x1E34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP1 DUP1 PUSH2 0x1E8D DUP9 DUP9 DUP4 PUSH2 0x20D9 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1E01 JUMP JUMPDEST SWAP5 SWAP2 SWAP1 SWAP2 DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1C42 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1F9D JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP4 DUP2 ADD PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 DUP8 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP2 DUP7 SWAP1 DUP11 DUP6 AND PUSH2 0x1F16 JUMPI JUMPDEST PUSH2 0x1EEC SWAP5 DUP3 AND PUSH2 0x1EF1 JUMPI POP POP POP PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x1EAA JUMP JUMPDEST PUSH2 0x1F0C SWAP2 PUSH2 0xEF8 PUSH2 0x1D98 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP6 DUP2 PUSH2 0x1D70 JUMP JUMPDEST SWAP2 SWAP3 SWAP4 SWAP1 POP PUSH2 0x1F33 DUP11 PUSH2 0xEF8 DUP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP4 DUP2 LT PUSH2 0x1F66 JUMPI SWAP2 DUP8 SWAP2 DUP5 PUSH2 0x1EEC SWAP7 SWAP6 SWAP5 SUB PUSH2 0x1F5E DUP14 PUSH2 0xEF8 DUP6 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE SWAP5 POP PUSH2 0x1EDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP5 SWAP2 SWAP4 SWAP3 SWAP1 SWAP4 PUSH1 0x1 DUP6 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x2048 JUMPI PUSH1 0x20 DUP6 DUP2 ADD MLOAD DUP4 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP3 SWAP1 DUP7 AND SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 LOG4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2011 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP5 MLOAD PUSH1 0x1 SUB PUSH2 0x2037 JUMPI PUSH1 0x20 DUP1 PUSH2 0x202D SWAP7 ADD MLOAD SWAP3 ADD MLOAD SWAP3 CALLER PUSH2 0x22C0 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x200A JUMP JUMPDEST PUSH2 0x2043 SWAP5 SWAP2 SWAP3 CALLER PUSH2 0x240C JUMP JUMPDEST PUSH2 0x202D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 SWAP1 DUP6 AND SWAP1 CALLER SWAP1 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP1 DUP1 PUSH2 0x208B DUP9 DUP13 DUP4 PUSH2 0x20D9 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1FFB JUMP JUMPDEST SWAP1 PUSH7 0x11C37937E08000 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1BBB JUMPI JUMP JUMPDEST SWAP1 PUSH3 0x93A80 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1BBB JUMPI JUMP JUMPDEST SWAP1 PUSH7 0x2386F26FC10000 SWAP2 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1BBB JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1BBB JUMPI JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x20F0 PUSH2 0x45C SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x9EE JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x9EE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x29C JUMPI MLOAD PUSH2 0x45C DUP2 PUSH2 0x315 JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0xA0 SWAP3 PUSH2 0x45C SWAP6 SWAP5 PUSH1 0x1 DUP1 DUP7 SHL SUB AND DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x426 JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0x45C SWAP6 SWAP5 SWAP2 PUSH1 0xA0 SWAP5 PUSH1 0x1 DUP1 DUP8 SHL SUB DUP1 SWAP3 AND DUP6 MSTORE AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2190 DUP3 PUSH2 0x752 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x21C1 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x21A7 DUP3 PUSH2 0x835 JUMP JUMPDEST SWAP2 PUSH2 0x21B5 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x76E JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP3 SWAP4 SWAP2 SWAP1 SWAP4 DUP5 EXTCODESIZE PUSH2 0x21D8 JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH2 0x21FB PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x2113 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x2290 JUMPI JUMPDEST POP PUSH2 0x2253 JUMPI DUP3 PUSH2 0x2222 PUSH2 0x2196 JUMP JUMPDEST DUP1 MLOAD SWAP2 SWAP1 DUP3 PUSH2 0x224C JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x226D JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x200A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x22B2 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x22B9 JUMPI JUMPDEST PUSH2 0x22AA DUP2 DUP4 PUSH2 0x76E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x20FE JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x2214 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x22A0 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP5 SWAP2 SWAP5 DUP6 EXTCODESIZE PUSH2 0x22D5 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x22F8 PUSH1 0x20 SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP10 DUP11 DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x2144 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x233A JUMPI JUMPDEST POP PUSH2 0x231F JUMPI DUP3 PUSH2 0x2222 PUSH2 0x2196 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x226D JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x22CD JUMP JUMPDEST PUSH2 0x2353 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x22B9 JUMPI PUSH2 0x22AA DUP2 DUP4 PUSH2 0x76E JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x2311 JUMP JUMPDEST SWAP3 PUSH2 0x2389 PUSH2 0x45C SWAP6 SWAP4 PUSH2 0x2397 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x0 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x9EE JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x9EE JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x426 JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x45C SWAP6 SWAP4 PUSH2 0x2389 SWAP2 PUSH2 0x2397 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP9 MSTORE AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x9EE JUMP JUMPDEST SWAP3 SWAP4 SWAP2 SWAP1 SWAP4 DUP5 EXTCODESIZE PUSH2 0x23E9 JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH2 0x21FB PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x235A JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP5 SWAP2 SWAP5 DUP6 EXTCODESIZE PUSH2 0x2420 JUMPI POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x22F8 PUSH1 0x20 SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP10 DUP11 DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x23A5 JUMP JUMPDEST ISZERO PUSH2 0x244A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920456E6372797074656441727469636C657320636F6E747261637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x18D85B881B5A5B9D PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1CCC JUMPI PUSH2 0x24E0 PUSH2 0x79D SWAP4 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 PUSH1 0x1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 PUSH2 0x1D2C JUMP JUMPDEST SWAP2 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1CCC JUMPI PUSH2 0x79D SWAP4 PUSH2 0x24E0 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x252B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C6963656E73657320657869737420666F722074686973206172746963 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6C65 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x29C JUMPI DUP1 MLOAD PUSH2 0x2591 DUP2 PUSH2 0x835 JUMP JUMPDEST SWAP3 PUSH2 0x259F PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x76E JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x29C JUMPI PUSH2 0x45C SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x403 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x79D DUP3 PUSH2 0x28B JUMP JUMPDEST MLOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x29C JUMPI JUMP JUMPDEST PUSH2 0x1C0 DUP2 DUP4 SUB SLT PUSH2 0x29C JUMPI DUP1 MLOAD SWAP3 PUSH1 0x20 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0x29C JUMPI DUP5 PUSH2 0x2606 SWAP2 DUP6 ADD PUSH2 0x257B JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP5 ADD MLOAD DUP3 DUP2 GT PUSH2 0x29C JUMPI DUP2 PUSH2 0x261F SWAP2 DUP7 ADD PUSH2 0x257B JUMP JUMPDEST SWAP4 PUSH1 0x60 DUP2 ADD MLOAD DUP4 DUP2 GT PUSH2 0x29C JUMPI DUP3 PUSH2 0x2638 SWAP2 DUP4 ADD PUSH2 0x257B JUMP JUMPDEST SWAP4 PUSH2 0x2645 PUSH1 0x80 DUP4 ADD PUSH2 0x25BD JUMP JUMPDEST SWAP4 PUSH1 0xA0 DUP4 ADD MLOAD DUP2 DUP2 GT PUSH2 0x29C JUMPI DUP5 PUSH2 0x265E SWAP2 DUP6 ADD PUSH2 0x257B JUMP JUMPDEST SWAP4 PUSH1 0xC0 DUP5 ADD MLOAD SWAP2 DUP3 GT PUSH2 0x29C JUMPI PUSH2 0x2676 SWAP2 DUP5 ADD PUSH2 0x257B JUMP JUMPDEST SWAP2 PUSH1 0xE0 DUP2 ADD MLOAD SWAP2 PUSH2 0x100 DUP3 ADD MLOAD SWAP2 PUSH2 0x120 DUP2 ADD MLOAD SWAP2 PUSH2 0x140 DUP3 ADD MLOAD SWAP2 PUSH2 0x160 DUP2 ADD MLOAD SWAP2 PUSH2 0x1A0 PUSH2 0x26A9 PUSH2 0x180 DUP5 ADD PUSH2 0x25C8 JUMP JUMPDEST SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x46 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x46 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1BBB JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x14 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x14 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1BBB JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1BBB JUMPI JUMP JUMPDEST ISZERO PUSH2 0x26F5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206C6963656E736520636F6E66696775726174696F6E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH7 0x11C37937E07FFF NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x1BBB JUMPI JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x1BBB JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1BBB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2794 JUMPI PUSH8 0xDBD2FC137A30000 DIV SWAP1 JUMP JUMPDEST PUSH2 0x276B JUMP JUMPDEST PUSH2 0x27AD DUP2 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH2 0x27B9 DUP2 ISZERO ISZERO PUSH2 0x2524 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x76E7D7F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP3 SWAP1 DUP4 DUP2 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH2 0x2864 SWAP4 PUSH2 0x2826 PUSH2 0x2859 SWAP3 PUSH2 0x285E SWAP5 DUP9 SWAP1 DUP10 SWAP3 PUSH2 0x288B JUMPI JUMPDEST POP PUSH2 0x26DB JUMP JUMPDEST PUSH2 0x2831 DUP2 ISZERO ISZERO PUSH2 0x26EE JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2880 JUMPI PUSH2 0x284E PUSH2 0x2849 PUSH2 0x2854 SWAP3 PUSH2 0x274F JUMP JUMPDEST PUSH2 0x2781 JUMP JUMPDEST SWAP2 PUSH2 0x274F JUMP JUMPDEST PUSH2 0x26DB JUMP JUMPDEST PUSH2 0x20B7 JUMP JUMPDEST SWAP1 PUSH2 0x28B5 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP2 POP DUP2 DUP2 GT ISZERO PUSH2 0x287B JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH2 0x2854 DUP7 SWAP2 PUSH2 0x274F JUMP JUMPDEST SWAP1 POP PUSH2 0x28A1 SWAP2 POP RETURNDATASIZE DUP1 DUP11 DUP4 RETURNDATACOPY PUSH2 0x62E DUP2 DUP4 PUSH2 0x76E JUMP JUMPDEST POP POP SWAP11 POP POP POP SWAP7 POP POP POP POP POP POP POP CODESIZE PUSH2 0x2820 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x76E7D7F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP4 SWAP2 SWAP3 SWAP1 DUP5 DUP2 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3D6 JUMPI PUSH2 0x2926 SWAP2 PUSH2 0x291D SWAP2 DUP8 SWAP2 PUSH2 0x29F2 JUMPI JUMPDEST POP TIMESTAMP PUSH2 0x275E JUMP JUMPDEST PUSH3 0x15180 SWAP1 DIV SWAP1 JUMP JUMPDEST SWAP4 DUP1 SWAP4 PUSH3 0x15180 TIMESTAMP DIV SWAP1 DUP3 SWAP6 JUMPDEST DUP8 DUP8 LT DUP1 PUSH2 0x29E8 JUMPI JUMPDEST ISZERO PUSH2 0x29DB JUMPI PUSH2 0x2970 PUSH2 0x2958 DUP4 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x2962 DUP10 DUP7 PUSH2 0x275E JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH2 0x298D JUMPI PUSH2 0x2981 PUSH2 0x2987 SWAP2 PUSH2 0x1BAC JUMP JUMPDEST SWAP7 PUSH2 0x1BAC JUMP JUMPDEST SWAP6 PUSH2 0x2933 JUMP JUMPDEST SWAP4 SWAP6 POP POP POP SWAP2 SWAP4 POP JUMPDEST PUSH1 0x1E DUP2 GT ISZERO PUSH2 0x29CF JUMPI POP PUSH2 0x29AF PUSH2 0xF43 PUSH1 0x1E JUMPDEST DUP5 PUSH2 0x26DB JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x29C2 JUMPI PUSH2 0x45C SWAP2 PUSH2 0x275E JUMP JUMPDEST POP POP PUSH7 0x38D7EA4C68000 SWAP1 JUMP JUMPDEST PUSH2 0xF43 PUSH2 0x29AF SWAP2 PUSH2 0x29A9 JUMP JUMPDEST SWAP4 SWAP6 POP POP POP SWAP2 SWAP4 POP PUSH2 0x2996 JUMP JUMPDEST POP PUSH1 0x1E DUP8 LT PUSH2 0x293C JUMP JUMPDEST PUSH2 0x2A06 SWAP2 POP RETURNDATASIZE DUP1 DUP10 DUP4 RETURNDATACOPY PUSH2 0x62E DUP2 DUP4 PUSH2 0x76E JUMP JUMPDEST POP POP POP POP POP POP SWAP7 POP POP POP POP POP POP POP CODESIZE PUSH2 0x2916 JUMP JUMPDEST ISZERO PUSH2 0x2A21 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x53656C6C657220686173206E6F206C6963656E736573 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2A66 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9CDD59999A58DA595B9D081C185E5B595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x1BBB JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x74D JUMPI PUSH2 0x2AD1 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0xDED JUMP JUMPDEST PUSH2 0x2B20 JUMPI DUP2 MLOAD DUP2 SSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD PUSH1 0x3 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x2B3D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2737903634B1B2B739B2903A3790313AB937 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2B7E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920686173206163746976652061636365737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x20 PUSH2 0x79D SWAP4 DUP1 MLOAD DUP5 SSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x1CB4 JUMPI PUSH2 0x2C20 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 PUSH1 0x1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 SWAP5 PUSH1 0x0 DUP7 MLOAD PUSH2 0x2C32 DUP2 PUSH2 0x752 JUMP JUMPDEST MSTORE DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x2D66 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2CDF JUMPI DUP1 PUSH1 0x5 SHL PUSH1 0x20 DUP1 DUP3 DUP7 ADD ADD MLOAD SWAP2 DUP8 ADD ADD MLOAD PUSH2 0x2C76 DUP7 PUSH2 0xEF8 DUP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP2 DUP2 LT PUSH2 0x2CA9 JUMPI DUP7 PUSH2 0xEF8 PUSH2 0x2CA4 SWAP6 SWAP5 SWAP4 PUSH2 0x2C9E SWAP4 SUB SWAP4 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x2C44 JUMP JUMPDEST DUP10 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP5 SWAP1 PUSH1 0x0 SWAP5 SWAP4 SWAP3 POP PUSH1 0x1 DUP2 MLOAD EQ DUP6 EQ PUSH2 0x2D34 JUMPI PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP3 DUP2 ADD MLOAD SWAP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP1 DUP1 PUSH1 0x40 DUP2 ADD JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST SWAP1 MLOAD CALLER SWAP3 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP3 DUP3 SWAP2 PUSH2 0x2D2F SWAP2 DUP4 PUSH2 0x20D9 JUMP JUMPDEST DUP8 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x3 PUSH1 0x2 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 DUP1 ISZERO PUSH2 0x2DCC JUMPI DUP2 DUP2 SUB SWAP2 DUP2 DUP4 GT PUSH2 0x1BBB JUMPI PUSH1 0x64 DUP4 MUL SWAP3 DUP4 DIV PUSH1 0x64 EQ SWAP1 DUP3 EQ OR ISZERO PUSH2 0x1BBB JUMPI PUSH1 0x32 SWAP2 DIV LT ISZERO SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2DDA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9CDD59999A58DA595B9D0819D85CC81C1BDBDB PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x29C JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x29C JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x29C JUMPI DUP3 MLOAD PUSH2 0x2E4D DUP2 PUSH2 0x7BF JUMP JUMPDEST SWAP4 PUSH2 0x2E5B PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x76E JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x29C JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2E82 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 DUP1 SWAP2 DUP4 MLOAD PUSH2 0x2E90 DUP2 PUSH2 0x28B JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x2E74 JUMP JUMPDEST ISZERO PUSH2 0x2EA2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E6F204E465420686F6C64657273 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2794 JUMPI MOD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2F1C PUSH1 0x2 PUSH2 0x2EFC DUP5 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0x3 PUSH2 0x2F14 DUP6 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP1 PUSH2 0x275E JUMP JUMPDEST SWAP2 DUP3 ISZERO PUSH2 0x30B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9FB53FCB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE SWAP3 PUSH1 0x0 DUP5 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 SWAP5 PUSH2 0x3099 JUMPI JUMPDEST POP PUSH2 0x2F86 DUP5 MLOAD ISZERO ISZERO PUSH2 0x2E9B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x303E JUMPI POP DUP2 SWAP3 SWAP4 POP PUSH1 0x3 PUSH2 0x2FCB PUSH31 0xB4EA54FB8C538CD9C23515E23D54351ACC66C4539507193CEAE7D70E65D30D SWAP4 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0x2FD7 DUP3 DUP3 SLOAD PUSH2 0x20CC JUMP JUMPDEST SWAP1 SSTORE TIMESTAMP PUSH1 0x4 PUSH2 0x2FF0 DUP6 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x3006 DUP4 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x3011 DUP3 DUP3 SLOAD PUSH2 0x20CC JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x3 PUSH2 0x3029 DUP5 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x3094 SWAP1 PUSH2 0x308F PUSH2 0x305C PUSH2 0x140A PUSH2 0x3056 DUP10 MLOAD DUP6 PUSH2 0x2ED8 JUMP JUMPDEST DUP10 PUSH2 0x1BC0 JUMP JUMPDEST PUSH2 0x3074 DUP2 PUSH2 0xEF8 DUP9 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x307E DUP2 SLOAD PUSH2 0x1BAC JUMP JUMPDEST SWAP1 SSTORE DUP6 PUSH2 0x3089 PUSH2 0x2183 JUMP JUMPDEST SWAP2 PUSH2 0x24A0 JUMP JUMPDEST PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x2F89 JUMP JUMPDEST PUSH2 0x30AD SWAP2 SWAP5 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x1466 DUP2 DUP4 PUSH2 0x76E JUMP JUMPDEST SWAP3 CODESIZE PUSH2 0x2F79 JUMP JUMPDEST POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD SWAP2 DUP1 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x74D JUMPI PUSH1 0x20 SWAP3 PUSH1 0x40 MSTORE PUSH1 0xFF PUSH1 0x1 DUP4 SLOAD SWAP4 DUP5 DUP5 MSTORE ADD SLOAD AND ISZERO ISZERO SWAP3 DUP4 SWAP2 ADD MSTORE DUP2 PUSH2 0x311A JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP TIMESTAMP LT SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3134 PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x403 JUMP JUMPDEST ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 SWAP1 SWAP14 ORIGIN BYTE 0x4C SIGNEXTEND MSTORE8 0xC7 DUP14 INVALID REVERT PUSH16 0x2029D54EBFEC0974CC8909A4EA00F621 SLT SWAP8 PC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1108:14504:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;-1:-1:-1;;;;;1108:14504:17;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;2348:22:2;1108:14504:17;;;;;:::i;:::-;;;-1:-1:-1;1108:14504:17;-1:-1:-1;1108:14504:17;;;-1:-1:-1;1108:14504:17;;;;;;;;;;;;;;;;;2348:22:2;1108:14504:17;;;;;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;1457:7;1108:14504;;;;-1:-1:-1;;;;;;1108:14504:17;;;;;:::o;:::-;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;;;;:::i;:::-;;;;;1530:26:2;;;1515:41;;:109;;;;;1108:14504:17;1515:161:2;;;;1108:14504:17;;;;;;;;;;1515:161:2;-1:-1:-1;;;862:40:13;;-1:-1:-1;1515:161:2;;;:109;-1:-1:-1;;;1572:52:2;;;-1:-1:-1;1515:109:2;;1108:14504:17;;;;;;;;;;;;;1500:62:0;;:::i;:::-;1108:14504:17;;;;14707:7;1108:14504;;14707:7;1108:14504;;;;;;;;;14745:33;;;;;1108:14504;14745:33;;;;1108:14504;;14745:33;;:::i;:::-;;;;;1108:14504;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;1765:2;1108:14504;;;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;1108:14504:17;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;1108:14504:17;;;;;;-1:-1:-1;;;15101:36:17;;1108:14504;;;15101:36;;;1108:14504;-1:-1:-1;1108:14504:17;;;-1:-1:-1;;;;;15101:18:17;1108:14504;15101:36;;;;;;-1:-1:-1;;;;;15101:36:17;;;1108:14504;-1:-1:-1;1108:14504:17;;;;15274:328;;1108:14504;;;;;;;;;;:::i;:::-;-1:-1:-1;;;1108:14504:17;;;;-1:-1:-1;;;1108:14504:17;;;;;;;:::i;:::-;-1:-1:-1;;;1108:14504:17;;;;-1:-1:-1;;;1108:14504:17;;;;;;;-1:-1:-1;;;1108:14504:17;;;;;;;;;:::i;:::-;-1:-1:-1;;;1108:14504:17;;;;;;;;;;;;;;-1:-1:-1;;;1108:14504:17;;;;15274:328;1108:14504;;15274:328;;;;;;;;:::i;:::-;1108:14504;;;;;;;:::i;:::-;;;;15101:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1108:14504;;;;;;-1:-1:-1;;1108:14504:17;;;;;2495:70;1108:14504;;;;;:::i;:::-;;;-1:-1:-1;1108:14504:17;2495:70;1108:14504;;;-1:-1:-1;1108:14504:17;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;-1:-1:-1;1108:14504:17;2387:50;1108:14504;;;;-1:-1:-1;1108:14504:17;;;2387:50;;;;1108:14504;2387:50;;;;1108:14504;;;2387:50;;1108:14504;2387:50;;1108:14504;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;1212:42;1108:14504;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1108:14504:17;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;1108:14504:17;;;;735:10:9;4249:14:2;;;;:49;;1108:14504:17;4245:129:2;;1108:14504:17;;9216:16:2;9212:88;;9313:18;9309:88;;9456:4;;;;:::i;:::-;1108:14504:17;9309:88:2;1108:14504:17;;-1:-1:-1;;;9354:32:2;;9230:1;9354:32;;;1108:14504:17;;;9354:32:2;9212:88;1108:14504:17;;-1:-1:-1;;;9255:34:2;;9230:1;9255:34;;;1108:14504:17;;;9255:34:2;4245:129;1108:14504:17;;;-1:-1:-1;;;4321:42:2;;735:10:9;4321:42:2;;;1108:14504:17;;;-1:-1:-1;;;;;1108:14504:17;;;;;;;;;;;4321:42:2;;;4249:49;-1:-1:-1;;1108:14504:17;;;;;;;;;;;;735:10:9;1108:14504:17;;;;;;;;;;4267:31:2;4249:49;;1108:14504:17;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1108:14504:17;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;-1:-1:-1;;;13746:39:17;;1108:14504;;;13746:39;;;1108:14504;-1:-1:-1;1108:14504:17;;;13746:18;-1:-1:-1;;;;;1108:14504:17;13746:39;;;;;;1108:14504;13746:39;-1:-1:-1;13746:39:17;;;1108:14504;;;;;;;;;;;;;;;:::i;13746:39::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1108:14504;;;;;;;;;;;;;1500:62:0;;:::i;:::-;1108:14504:17;;;-1:-1:-1;;;;;;1108:14504:17;;;;;;;-1:-1:-1;;;;;1108:14504:17;3052:40:0;1108:14504:17;;3052:40:0;1108:14504:17;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;1658:2;1108:14504;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;11054:28;;;:::i;:::-;1108:14504;;;11221:10;1527:11;1108:14504;11120:62;1108:14504;11128:7;1108:14504;11128:28;;11120:62;:::i;:::-;11221:10;:::i;:::-;11287:28;;11128:7;1108:14504;11287:28;:::i;:::-;11128:7;1108:14504;;11287:28;-1:-1:-1;11333:10:17;;;;;;11325:47;;;;;1108:14504;;;;;-1:-1:-1;;;1108:14504:17;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;13085:39;13113:10;13085:39;;:::i;:::-;1108:14504;;;;;-1:-1:-1;;;13324:39:17;;1108:14504;13324:39;;1108:14504;;;;-1:-1:-1;1108:14504:17;;;-1:-1:-1;;;;;13324:18:17;1108:14504;13324:39;;;;;;1108:14504;13324:39;-1:-1:-1;13324:39:17;;;1108:14504;;;;;;;;;:::i;13324:39::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1108:14504;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;;-1:-1:-1;;;;;1108:14504:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1108:14504:17;;-1:-1:-1;1108:14504:17;;;;;;-1:-1:-1;1108:14504:17;:::o;:::-;;:::i;:::-;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;;-1:-1:-1;1108:14504:17;2856:59;1108:14504;;;-1:-1:-1;1108:14504:17;;;2856:59;;;;;1108:14504;2856:59;;;;:::i;:::-;1108:14504;;;2856:59;;;;1108:14504;;;;;;;;2856:59;;;;1108:14504;;2856:59;;1108:14504;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;1801:54;-1:-1:-1;;;;;1108:14504:17;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;;;;;:::i;:::-;7359:75;7367:36;:27;;;1108:14504;;7367:15;1108:14504;;;;;;;7367:27;1108:14504;;;;;;;;;;;;;;;;7367:36;1108:14504;7367:40;;7359:75;:::i;:::-;7476:27;;;:::i;:::-;7583;;;;:::i;:::-;7637:9;7629:55;7637:9;;:22;;7629:55;:::i;:::-;7786:40;7787:32;;;:::i;:::-;7823:3;1108:14504;;;;7786:40;7861:33;7860:41;7861:33;;;:::i;7860:41::-;7936:27;:43;:27;;;;;:::i;:::-;:43;:::i;:::-;1108:14504;;-1:-1:-1;;;8116:39:17;;1108:14504;8116:39;;1108:14504;;;-1:-1:-1;;;;;;;1108:14504:17;-1:-1:-1;1108:14504:17;;;8116:18;1108:14504;;8116:39;;;;;;;;;;;1108:14504;8265:27;:36;:27;;;1108:14504;;7367:15;1108:14504;;;;;;;8265:36;:38;1108:14504;;8265:38;:::i;:::-;1108:14504;;8313:39;:27;;1108:14504;;7367:15;1108:14504;;;;;;;8313:27;8341:10;1108:14504;;;;;;;;;;;;;;8313:39;:41;1108:14504;;8313:41;:::i;:::-;1108:14504;;8364:57;1108:14504;;:::i;:::-;8341:10;;8364:57;;:::i;:::-;1108:14504;;;;;;;8468:39;;;;;;;1108:14504;8468:39;;;;8517;;;;;;;;;;;;;;1108:14504;;8517:39;;;;;8566:42;;;;;;;;;;1108:14504;1212:42;8566;;;;;8839:193;1108:14504;;8667:23;;;1108:14504;8667:23;:::i;:::-;8794:33;8779:5;8761:15;1108:14504;8794:26;;1108:14504;;8794:14;1108:14504;;;;;;;8794:26;1108:14504;;;;;;;;;;8794:33;:35;1108:14504;;8794:35;:::i;:::-;1108:14504;;8839:27;;1108:14504;;8839:15;1108:14504;;;;;;;8839:27;8872:159;1108:14504;;:::i;:::-;8761:15;1108:14504;;;8872:159;;1108:14504;;;8341:10;1108:14504;8872:159;;1108:14504;8761:15;-1:-1:-1;;;;;1108:14504:17;8872:159;;;1108:14504;;8872:159;8839:193;:::i;:::-;7637:9;;9080:21;9076:103;;1108:14504;;;;9202:63;1108:14504;;8341:10;9202:63;8341:10;9202:63;;1108:14504;;;;;;;;9202:63;;;;9328:28;;;:::i;:::-;9324:90;;1108:14504;;;9324:90;9392:10;;;:::i;:::-;1108:14504;;9076:103;7637:9;;9146:21;7637:9;;;9146:21;:::i;:::-;9117:51;;;;;9076:103;8341:10;9117:51;;;;;9076:103;;;;9117:51;;;;;8566:42;-1:-1:-1;8566:42:17;;;8517:39;;;-1:-1:-1;8517:39:17;;8468;;;;;8116;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1108:14504;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1108:14504:17;;;13383:22:2;;13379:94;;13482:35;:46;735:10:9;;-1:-1:-1;1108:14504:17;;;;;-1:-1:-1;1108:14504:17;;;;;;;;;;;;;;;;;13482:35:2;1108:14504:17;;;;;;;;;;;;;;;13482:46:2;1108:14504:17;;;;;13543:41:2;1108:14504:17;735:10:9;13543:41:2;;1108:14504:17;13379:94:2;1108:14504:17;;-1:-1:-1;;;13428:34:2;;-1:-1:-1;1108:14504:17;13428:34:2;;1108:14504:17;;;13428:34:2;1108:14504:17;;;;;;-1:-1:-1;;1108:14504:17;;;;;2618:68;1108:14504;;;;;:::i;:::-;;;-1:-1:-1;1108:14504:17;2618:68;1108:14504;;;-1:-1:-1;1108:14504:17;;;;;;;;;;;;;;;;;2618:68;1108:14504;2618:68;1108:14504;;2618:68;;1108:14504;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1108:14504:17;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;-1:-1:-1;;;14080:44:17;;1108:14504;;;14080:44;;;1108:14504;;;-1:-1:-1;1108:14504:17;;;-1:-1:-1;;;;;14080:18:17;1108:14504;14080:44;;;;;;;-1:-1:-1;14080:44:17;;;1108:14504;;14162:32;1108:14504;;14162:32;:::i;:::-;14218:13;-1:-1:-1;14256:3:17;1108:14504;;14233:21;;;;;14256:3;14289:27;:42;:27;;1108:14504;;7367:15;1108:14504;;;;;;;14289:27;14317:13;;;;;:::i;:::-;1108:14504;-1:-1:-1;;;;;1108:14504:17;;;14317:13;1108:14504;;;;;;;;;;;;;;;14289:42;1108:14504;14275:56;;;;:::i;:::-;1108:14504;14256:3;:::i;:::-;14218:13;;14233:21;1108:14504;;;;14233:21;;1108:14504;;:::i;14080:44::-;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;1108:14504;;;;;;-1:-1:-1;;1108:14504:17;;;;;;-1:-1:-1;1108:14504:17;2974:61;1108:14504;;;;-1:-1:-1;1108:14504:17;;;;;;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;-1:-1:-1;1108:14504:17;2739:69;1108:14504;;;-1:-1:-1;1108:14504:17;;;-1:-1:-1;1108:14504:17;;;;;-1:-1:-1;1108:14504:17;;;;;;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;1711:2;1108:14504;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;1527:11;1108:14504;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;;;;;:::i;:::-;;;;4628:58;;-1:-1:-1;;;;;1108:14504:17;4044:94;4052:10;4074:18;1108:14504;;4052:41;4044:94;:::i;:::-;4188:23;;;1108:14504;;4188:11;1108:14504;;;;;;;4188:23;1108:14504;4244:38;:23;;1108:14504;;4188:11;1108:14504;;;;;;;4244:23;:38;:48;1108:14504;;;4244:48;:::i;:::-;1108:14504;;;4302:23;;1108:14504;;4188:11;1108:14504;;;;;;;4302:23;:38;:48;1108:14504;;;4302:48;:::i;:::-;1108:14504;;4408:38;;1108:14504;;4408:26;1108:14504;;;;;;;4408:38;:48;1108:14504;;;4408:48;:::i;:::-;1108:14504;;4510:36;:27;;;1108:14504;;7367:15;1108:14504;;;;;;;4510:36;:46;1108:14504;;;4510:46;:::i;:::-;1108:14504;;4566:38;1108:14504;;:::i;:::-;4566:38;;;;:::i;:::-;1108:14504;;;;;;;;;;;;;;;4628:58;1108:14504;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;1309:2;1108:14504;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;3478:37:2;1108:14504:17;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;1108:14504:17;;;;;-1:-1:-1;1108:14504:17;;;;;;;;;;;;;;;;;3478:37:2;1108:14504:17;;;;;;;;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;1108:14504:17;;735:10:9;3755:14:2;;;;;:49;;1108:14504:17;3751:129:2;;;3928:4;1108:14504:17;;;;;;3928:4:2;;:::i;3751:129::-;1108:14504:17;;-1:-1:-1;;;3827:42:2;;735:10:9;1108:14504:17;3827:42:2;;1108:14504:17;-1:-1:-1;;;;;1108:14504:17;;;;;;;;4321:42:2;3755:49;-1:-1:-1;1108:14504:17;;;;;;;;;;;;735:10:9;1108:14504:17;;;;;;;;;-1:-1:-1;1108:14504:17;;3773:31:2;3755:49;;;1108:14504:17;;;;;;-1:-1:-1;;1108:14504:17;;;;;;9540:74;9548:39;:27;;1108:14504;;7367:15;1108:14504;;;;;;;9548:39;1108:14504;9548:43;;9540:74;:::i;:::-;9624:78;9632:40;9633:39;9576:10;9633:39;;:::i;:::-;9632:40;;1108:14504;9632:40;9624:78;:::i;:::-;9749:39;9576:10;9749:27;;1108:14504;;7367:15;1108:14504;;;;;;;9749:39;:41;1108:14504;;9749:41;:::i;:::-;1108:14504;;;9800:23;;1108:14504;;4188:11;1108:14504;;;;;;;9800:23;:38;:40;1108:14504;;9800:40;:::i;:::-;1108:14504;;9850:32;9576:10;;9850:32;:::i;:::-;9952:24;:15;:24;:::i;:::-;1108:14504;;;:::i;:::-;;;;9880:1;1108:14504;10023:87;;1108:14504;9986:34;9576:10;9986:22;;1108:14504;;9986:10;1108:14504;;;;;;;9986:34;1108:14504;:::i;:::-;;;;;;9576:10;;;;10134:49;;1108:14504;;10134:49;1108:14504;10198:49;1108:14504;;9576:10;10198:49;9576:10;10198:49;;1108:14504;;;;;;;;10198:49;;;;10310:28;;;:::i;:::-;10306:90;;1108:14504;10306:90;10374:10;;;:::i;1108:14504::-;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;1108:14504:17;;;;2627:22:0;;2623:91;;1108:14504:17;;;;;;;;;;;;3052:40:0;-1:-1:-1;3052:40:0;;1108:14504:17;2623:91:0;1108:14504:17;;-1:-1:-1;;;2672:31:0;;-1:-1:-1;1108:14504:17;2672:31:0;;1108:14504:17;;;2672:31:0;1108:14504:17;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1108:14504:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1108:14504:17;14558:15;1108:14504;;;;;-1:-1:-1;1108:14504:17;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;1108:14504:17;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;1392:10;1108:14504;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;3085:22;1108:14504;;;;;;;1796:162:0;1710:6;1108:14504:17;-1:-1:-1;;;;;1108:14504:17;735:10:9;1855:23:0;1851:101;;1796:162::o;1851:101::-;1108:14504:17;;-1:-1:-1;;;1901:40:0;;735:10:9;1901:40:0;;;1108:14504:17;;;1901:40:0;1108:14504:17;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;2534:552:2:-;;;;1108:14504:17;;;;2690:29:2;;;2686:121;;1108:14504:17;;2850:30:2;1108:14504:17;;2850:30:2;:::i;:::-;2896:13;-1:-1:-1;2896:13:2;;2932:3;1108:14504:17;;2911:19:2;;;;;16237:82:7;2348:22:2;2932:3;16237:82:7;;;;;;;;;;;;17035;;;;;1108:14504:17;;;;;;;;;;;;;;;;;;;;;;2932:3:2;2896:13;;2911:19;-1:-1:-1;2911:19:2;;-1:-1:-1;;;2534:552:2:o;2686:121::-;1108:14504:17;;-1:-1:-1;;;2742:54:2;;;;;1108:14504:17;;;;;;;;;;;;;4321:42:2;8159:463;;;;-1:-1:-1;;;;;1108:14504:17;;;8281:16:2;8277:88;;1108:14504:17;;8378:18:2;8374:88;;8521:29;8610:4;8521:29;13707:822;13875:648;;;8415:1:17;13875:648:2;;;;;;;;;;8415:1:17;13875:648:2;;8415:1:17;13875:648:2;;;;;;;;;13707:822;8521:29;8610:4;;;;:::i;8374:88::-;1108:14504:17;;-1:-1:-1;;;8419:32:2;;8295:1;8419:32;;;1108:14504:17;;;8419:32:2;8277:88;1108:14504:17;;-1:-1:-1;;;8320:34:2;;8295:1;8320:34;;;1108:14504:17;;;8320:34:2;8159:463;;;;;;-1:-1:-1;;;;;1108:14504:17;;;8281:16:2;8277:88;;1108:14504:17;;8378:18:2;8374:88;;8610:4;8521:29;;13875:648;;;;;;;;;;;;;;;;;;;;;;;;;;13707:822;7002:700;;1108:14504:17;;;;5263:27:2;;;;5259:117;;5433:13;;1108:14504:17;5464:3:2;1108:14504:17;;5448:14:2;;;;;17035:82:7;;;;;;;;;;;;;;;;;5464:3:2;;17035:82:7;;;-1:-1:-1;;;;;1108:14504:17;;6028:81:2;;5464:3;;;;;:::i;:::-;5433:13;;6028:81;6068:26;:13;;:17;:13;5445:1;1108:14504:17;5445:1:2;1108:14504:17;;;5445:1:2;1108:14504:17;;;6068:17:2;1108:14504:17;;;6068:26:2;:::i;:::-;1108:14504:17;;6028:81:2;;;;;5448:14;-1:-1:-1;1108:14504:17;;5448:14:2;;;;1108:14504:17;6133:15:2;5598:18;;17035:82:7;;;;;;;;;1108:14504:17;;;;;;;;;;-1:-1:-1;;;;;1108:14504:17;;;-1:-1:-1;;735:10:9;;6279:45:2;;;6129:288;-1:-1:-1;;;;;1108:14504:17;;7243:453:2;;6129:288;7002:700;;;;:::o;7243:453::-;1108:14504:17;;;7328:15:2;5598:18;;17035:82:7;;;7548:4:2;17035:82:7;;;;;;;735:10:9;;7548:4:2;:::i;:::-;7243:453;;;;;;7324:362;7666:4;735:10:9;;7666:4:2;:::i;:::-;7324:362;;6129:288;1108:14504:17;;-1:-1:-1;;;;;1108:14504:17;;;;;735:10:9;;6360:46:2;;1108:14504:17;6360:46:2;;;1108:14504:17;6360:46:2;:::i;:::-;;;;6129:288;;7002:700;;;;;1108:14504:17;;;;5263:27:2;;;;5259:117;;5433:13;;-1:-1:-1;5464:3:2;1108:14504:17;;5448:14:2;;;;;17035:82:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1108:14504:17;17035:82:7;1108:14504:17;;;;;5594:420:2;;5464:3;;1108:14504:17;;;6028:81:2;;5464:3;;;;:::i;:::-;5433:13;;6028:81;6068:26;:13;;:17;:13;5445:1;1108:14504:17;5445:1:2;1108:14504:17;;;5445:1:2;1108:14504:17;;;6068:26:2;1108:14504:17;;6028:81:2;;;;;5594:420;5658:13;;;;;:19;:13;;;5445:1;1108:14504:17;5445:1:2;1108:14504:17;;;5445:1:2;1108:14504:17;;;5658:19:2;1108:14504:17;5699:19:2;;;5695:129;;1108:14504:17;;;;5464:3:2;1108:14504:17;;;;5940:19:2;:13;;;5445:1;1108:14504:17;5445:1:2;1108:14504:17;;;5445:1:2;1108:14504:17;;;5940:19:2;1108:14504:17;5594:420:2;;;;5695:129;1108:14504:17;;-1:-1:-1;;;5749:56:2;;-1:-1:-1;;;;;1108:14504:17;;5749:56:2;;;1108:14504:17;;;;;;;;;;;;;;;;;;;;;;4321:42:2;5448:14;;;;;;;;1108:14504:17;;;6133:15:2;6129:288;6147:1;;;17035:82:7;;;;;;;;;1108:14504:17;;;;;;;;;;-1:-1:-1;;;;;1108:14504:17;;;;;;;;735:10:9;;6279:45:2;;;6129:288;-1:-1:-1;;;;;1108:14504:17;;7243:453:2;;6129:288;7002:700;;;;;:::o;7243:453::-;1108:14504:17;;;7328:15:2;6147:1;;17035:82:7;;7548:4:2;17035:82:7;;;;;;735:10:9;;7548:4:2;:::i;:::-;7243:453;;;;;;;7324:362;7666:4;735:10:9;;;;7666:4:2;:::i;:::-;7324:362;;6129:288;1108:14504:17;;-1:-1:-1;;;;;1108:14504:17;;;;;;;;735:10:9;;6360:46:2;;1108:14504:17;6360:46:2;;;1108:14504:17;6360:46:2;:::i;:::-;;;;6129:288;;1108:14504:17;;1527:11;1108:14504;;;;;;;:::o;:::-;;9970:6;1108:14504;;;;;;;:::o;:::-;;1392:10;1108:14504;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;7406:1;1108:14504;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;1108:14504:17;;;;:::o;:::-;;;:::o;1006:959:6:-;;;;;;1205:14;;1201:758;;1006:959;;;;;:::o;1201:758::-;1243:71;1108:14504:17;1243:71:6;1108:14504:17;;;;;;;;;;1243:71:6;;;;;;;;:::i;:::-;;1108:14504:17;;-1:-1:-1;;;;;1108:14504:17;;1243:71:6;;1108:14504:17;;1243:71:6;;;1201:758;-1:-1:-1;1239:710:6;;1563:386;;;:::i;:::-;1108:14504:17;;;;1613:18:6;;;1108:14504:17;;-1:-1:-1;;;1718:41:6;;-1:-1:-1;;;;;1108:14504:17;;1243:71:6;1718:41;;1108:14504:17;;;4321:42:2;1609:326:6;1806:111;;1243:71;1806:111;;1239:710;-1:-1:-1;;;;;;1108:14504:17;1363:55:6;1359:189;;1239:710;1201:758;;;;;;;1359:189;1108:14504:17;;-1:-1:-1;;;1488:41:6;;-1:-1:-1;;;;;1108:14504:17;;;;1243:71:6;1488:41;;1108:14504:17;;;4321:42:2;1243:71:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1006:959;;;;;;;1205:14;;1201:758;;1006:959;;;;;;;:::o;1201:758::-;1243:71;;1108:14504:17;;;;;;;;;;;1243:71:6;;;;;;;;:::i;:::-;;1108:14504:17;1222:1:6;-1:-1:-1;;;;;1108:14504:17;;1243:71:6;;1222:1;;1243:71;;;1201:758;-1:-1:-1;1239:710:6;;1563:386;;;:::i;1239:710::-;-1:-1:-1;;;;;;1108:14504:17;1363:55:6;1359:189;;1239:710;1201:758;;;;;;;;1243:71;;;;;;;;;;;;;;;:::i;:::-;;;;;1108:14504:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2521:1026:6:-;;;;;;2745:14;;2741:800;;2521:1026;;;;;:::o;2741:800::-;2783:78;1108:14504:17;2783:78:6;1108:14504:17;;;;;;;;;;2783:78:6;;;;;;;;:::i;2521:1026::-;;;;;;;2745:14;;2741:800;;2521:1026;;;;;;:::o;2741:800::-;2783:78;;1108:14504:17;;;;;;;;;;;2783:78:6;;;;;;;;:::i;1108:14504:17:-;;;;:::o;:::-;;;-1:-1:-1;;;1108:14504:17;;;;;;;;;;;;;;;;;-1:-1:-1;;;1108:14504:17;;;;;;;10754:346:2;;;;-1:-1:-1;;;;;1108:14504:17;;10850:16:2;10846:88;;10993:29;11088:4;10993:29;13707:822;13875:648;;;8415:1:17;13875:648:2;;;;;;;;;;8415:1:17;13875:648:2;;8415:1:17;13875:648:2;;;;;;;;;13707:822;10993:29;11088:4;;:::i;10754:346::-;;;;;-1:-1:-1;;;;;1108:14504:17;;10850:16:2;10846:88;;11088:4;10993:29;;13875:648;;;;;;;;;;;;;;;;;;;;;;;;;;13707:822;1108:14504:17;;;;:::o;:::-;;;-1:-1:-1;;;1108:14504:17;;;;;;;;;;;;;;;;;-1:-1:-1;;;1108:14504:17;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;1658:2;1108:14504;;;;;;1658:2;1108:14504;;;;;;;:::o;:::-;;1711:2;1108:14504;;;;;;1711:2;1108:14504;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1108:14504:17;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1108:14504:17;;;;;;;;:::o;:::-;-1:-1:-1;;1108:14504:17;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;4794:1167::-;4901:38;;1108:14504;;4408:26;1108:14504;;;;;;;4901:38;1108:14504;4949:62;4957:15;;;4949:62;:::i;:::-;1108:14504;;-1:-1:-1;;;5177:39:17;;;;;1108:14504;;;-1:-1:-1;;1108:14504:17;-1:-1:-1;1108:14504:17;;;-1:-1:-1;;;;;5177:18:17;1108:14504;5177:39;;;;;;5837:40;5177:39;5346:29;5732:34;5177:39;5718:49;5177:39;;-1:-1:-1;;5177:39:17;;;4794:1167;5346:29;;:::i;:::-;5385:62;5393:20;;;5385:62;:::i;:::-;1108:14504;5623:20;;5642:1;;;5646:35;5660:20;5733:15;5660:20;;:::i;:::-;5646:35;:::i;:::-;5623:62;5733:15;:::i;:::-;5732:34;:::i;:::-;5718:49;:::i;:::-;5837:40;;:::i;:::-;1457:7;;-1:-1:-1;5903:24:17;;;1457:7;;;5903:51;4794:1167;:::o;5903:51::-;;;4794:1167;:::o;5623:62::-;;5733:15;5623:62;;5733:15;:::i;5177:39::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6026:1199;1108:14504;;-1:-1:-1;;;6263:39:17;;;;;1108:14504;;;-1:-1:-1;;1108:14504:17;;6026:1199;-1:-1:-1;1108:14504:17;;;-1:-1:-1;;;;;6263:18:17;1108:14504;6263:39;;;;;;;6418;6263;6419:29;6263:39;;;;;6026:1199;6419:15;;:29;:::i;:::-;6452:5;1108:14504;;;;6418:39;6467:24;;6419:15;6452:5;6419:15;1108:14504;6647:13;;6642:257;6694:3;6662:20;;;:30;;;6694:3;6662:30;;;6717:42;:26;;1108:14504;;8794:14;1108:14504;;;;;;;6717:26;6744:14;;;;:::i;:::-;1108:14504;;;;;;;;;6717:42;1108:14504;6744:14;;6784;6694:3;6784:14;;:::i;:::-;6713:176;6694:3;:::i;:::-;6647:13;;;6713:176;6837:5;;;;;;;;6642:257;7008:2;6993:17;;7008:2;;;6993:37;7062:36;7063:28;7008:2;6993:37;7063:28;;:::i;7062:36::-;7124:71;-1:-1:-1;7124:27:17;;;;;;7154;;;:::i;7124:71::-;;;7184:11;6026:1199;:::o;6993:37::-;7063:28;7062:36;6993:37;;;6662:30;;;;;;;;;;;;6686:6;6690:2;6686:6;;6662:30;;6263:39;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1108:14504;;;;:::o;:::-;;;-1:-1:-1;;;1108:14504:17;;;;;;;;;;;;-1:-1:-1;;;1108:14504:17;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1108:14504:17;;;;;;;;;;;;-1:-1:-1;;;1108:14504:17;;;;;;;;;;;;-1:-1:-1;;1108:14504:17;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1108:14504:17;;;-1:-1:-1;;;;;;1108:14504:17;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1108:14504:17;;;;;;;;;;;;-1:-1:-1;;;1108:14504:17;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1108:14504:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12107:329:2;-1:-1:-1;;;;;1108:14504:17;;;12186:18:2;;12182:88;;12329:29;13875:648;;;8415:1:17;13875:648:2;;;;;;;;;;8415:1:17;13875:648:2;;8415:1:17;13875:648:2;;;;;;;;;13707:822;12329:29;1108:14504:17;;;;12202:1:2;1108:14504:17;;;;;:::i;:::-;;;;;;5263:27:2;;;;5259:117;;5433:13;;12202:1;5464:3;1108:14504:17;;5448:14:2;;;;;17035:82:7;;;1108:14504:17;17035:82:7;;;;;;;;;;;5658:19:2;:13;;;5445:1;1108:14504:17;5445:1:2;1108:14504:17;;;5445:1:2;1108:14504:17;;;5658:19:2;1108:14504:17;5699:19:2;;;5695:129;;1108:14504:17;5940:13:2;5464:3;1108:14504:17;;;5940:19:2;1108:14504:17;;5940:13:2;5445:1;1108:14504:17;5445:1:2;1108:14504:17;;;5445:1:2;1108:14504:17;;;5940:19:2;1108:14504:17;5464:3:2;:::i;:::-;5433:13;;5695:129;1108:14504:17;;-1:-1:-1;;;5749:56:2;;-1:-1:-1;;;;;1108:14504:17;;5749:56:2;;;1108:14504:17;;;;;;;;;;;;;;;;;;;;;;4321:42:2;5448:14;;;;12202:1;5448:14;;;;1108:14504:17;;;6133:15:2;5598:18;;;;1108:14504:17;17035:82:7;;;;;;;;1108:14504:17;;;;;;;;735:10:9;;6279:45:2;;1108:14504:17;;;;6279:45:2;;;;12107:329::o;6129:288::-;1108:14504:17;;735:10:9;;6360:46:2;;1108:14504:17;;6360:46:2;;1108:14504:17;6360:46:2;:::i;5259:117::-;1108:14504:17;;-1:-1:-1;;;5313:52:2;;;;;1108:14504:17;;;;;;;;;;;;;4321:42:2;10463:449:17;-1:-1:-1;1108:14504:17;10571:11;1108:14504;;;-1:-1:-1;1108:14504:17;10644:38;10571;;;1108:14504;10644:38;;1108:14504;10705:19;;;10701:37;;1108:14504;;;;;;;;;10823:3;1108:14504;;;;;10823:3;1108:14504;;;;;;;;1309:2;1108:14504;;10861:44;;10463:449;:::o;10701:37::-;10726:12;;-1:-1:-1;10726:12:17;:::o;1108:14504::-;;;;:::o;:::-;;;-1:-1:-1;;;1108:14504:17;;;;;;;;;;;;-1:-1:-1;;;1108:14504:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1108:14504:17;;;;;;;;;;;;-1:-1:-1;;;1108:14504:17;;;;;;;;;;;;;;:::o;11420:1193::-;;11662:31;11513:38;:23;;1108:14504;;4188:11;1108:14504;;;;;;;11513:23;:38;1108:14504;11586:38;:23;;1108:14504;;4188:11;1108:14504;;;;;;;11586:23;:38;1108:14504;11662:31;;:::i;:::-;11716:22;;;11712:35;;1108:14504;;-1:-1:-1;;;11851:44:17;;;;;1108:14504;;;;-1:-1:-1;1108:14504:17;;;-1:-1:-1;;;;;11851:18:17;1108:14504;11851:44;;;;;;;-1:-1:-1;11851:44:17;;;11420:1193;1108:14504;11905:48;1108:14504;;11913:21;;11905:48;:::i;:::-;-1:-1:-1;12035:21:17;;;;;;12293:23;;;;;11586:38;12293:23;12517:89;12293:23;1108:14504;;4188:11;1108:14504;;;;;;;12293:23;:38;:59;1108:14504;;;12293:59;:::i;:::-;1108:14504;;12409:15;11851:44;12362:23;;1108:14504;;4188:11;1108:14504;;;;;;;12362:23;:44;1108:14504;12434:38;;1108:14504;;4408:26;1108:14504;;;;;;;12434:38;:59;1108:14504;;;12434:59;:::i;:::-;1108:14504;;11586:38;12567:23;;1108:14504;;4188:11;1108:14504;;;;;;;12567:23;:38;1108:14504;;;;;;;;;;;;;;;12517:89;11420:1193::o;12058:3::-;;1108:14504;12198:35;12097:33;;12108:21;1108:14504;;12108:21;;:::i;:::-;12097:33;;:::i;:::-;12144:38;:27;;;1108:14504;;7367:15;1108:14504;;;;;;;12144:38;:40;1108:14504;;12144:40;:::i;:::-;1108:14504;;;;;:::i;:::-;12198:35;;:::i;:::-;12058:3;:::i;:::-;12020:13;;11851:44;;;;;;;;;;;;;:::i;:::-;;;;;11712:35;11740:7;;;:::o;12669:232::-;-1:-1:-1;1108:14504:17;;;12793:10;1108:14504;;;;;;;;-1:-1:-1;;;;;1108:14504:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12839:55;;;12832:62;12669:232;:::o;12839:55::-;12859:15;;;:35;12669:232;:::o;1108:14504::-;;;;;;;;;;;;;:::i;:::-;;;:::o"},"methodIdentifiers":{"BASE_PRICE()":"f86325ed","CREATOR_PERCENTAGE()":"ca9f19ef","ENCRYPTED_ARTICLES()":"98e9d0e0","GAS_REIMBURSEMENT()":"cb8b2522","MAX_PRICE()":"01c11d96","PLATFORM_PERCENTAGE()":"09886c9c","REGENERATION_THRESHOLD()":"e3685397","SELLER_PERCENTAGE()":"72009528","TREASURY()":"2d2c5565","accessInfo(uint256,address)":"ab0b8b04","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","burnLicenseForAccess(uint256)":"f24c4eac","buyLicense(uint256,address)":"996cb745","dailyPurchases(uint256,uint256)":"c98d6e99","emergencyWithdrawGasPool()":"0813d3f6","gasPool()":"fa08b038","getArticleSummary(uint256)":"607ea36d","getCurrentPrice(uint256)":"c55d0f56","getEncryptedContent(uint256)":"8d40e0cd","getLicenseHolders(uint256)":"b3c655c0","getPurchaseHistory(uint256)":"f4bf28a0","hasActiveAccess(uint256,address)":"f499924b","isApprovedForAll(address,address)":"e985e9c5","licenseBalances(uint256,address)":"1453a424","licenseInfo(uint256)":"1e084558","mintLicensesToHolder(uint256,address,uint256,uint256)":"df81a823","owner()":"8da5cb5b","purchaseHistory(uint256,uint256)":"95f58ab8","regenerateLicenses(uint256)":"75315716","renounceOwnership()":"715018a6","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","shouldRegenerate(uint256)":"43c7580e","supportsInterface(bytes4)":"01ffc9a7","totalLicensesEverGenerated(uint256)":"bca59003","transferOwnership(address)":"f2fde38b","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_encryptedArticles\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"articleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"}],\"name\":\"AccessGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"articleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"}],\"name\":\"LicenseBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"articleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"editionNumber\",\"type\":\"uint256\"}],\"name\":\"LicenseMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"articleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"LicensePurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"articleId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalActive\",\"type\":\"uint256\"}],\"name\":\"LicenseRegenerated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CREATOR_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ENCRYPTED_ARTICLES\",\"outputs\":[{\"internalType\":\"contract IEncryptedArticles\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GAS_REIMBURSEMENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PLATFORM_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REGENERATION_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SELLER_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TREASURY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"accessInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasAccess\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_articleId\",\"type\":\"uint256\"}],\"name\":\"burnLicenseForAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_articleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"}],\"name\":\"buyLicense\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dailyPurchases\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdrawGasPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_articleId\",\"type\":\"uint256\"}],\"name\":\"getArticleSummary\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_articleId\",\"type\":\"uint256\"}],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_articleId\",\"type\":\"uint256\"}],\"name\":\"getEncryptedContent\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_articleId\",\"type\":\"uint256\"}],\"name\":\"getLicenseHolders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_articleId\",\"type\":\"uint256\"}],\"name\":\"getPurchaseHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct ReaderLicenseAMM.PurchaseRecord[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_articleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"hasActiveAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"licenseBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"licenseInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"articleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"editionNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalGenerated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeLicenses\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRegenerationTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_articleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_editionNumber\",\"type\":\"uint256\"}],\"name\":\"mintLicensesToHolder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"purchaseHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_articleId\",\"type\":\"uint256\"}],\"name\":\"regenerateLicenses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_articleId\",\"type\":\"uint256\"}],\"name\":\"shouldRegenerate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalLicensesEverGenerated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/content/ReaderLicenseAMM.sol\":\"ReaderLicenseAMM\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x22f099c02c252dd1f6ddc464916ce683294a63b23b3c6ee3d290b77398e2474b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d2ba4b77ecc4f70211e0de1a920e3ea29eb86c3e16ef8f2a7d746c72a97f1e\",\"dweb:/ipfs/QmYBqATARQEnxd33jW6iYCuEPaL6KdYyYSoQrjFXZka3of\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/content/ReaderLicenseAMM.sol\":{\"keccak256\":\"0xbaa523c1e4466d51dd16d533efbae413ab432ce1c2f7dc23c62977f5145eeea6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c38b8d54acef5bf0b55408f6a1f7fb997b2b7d795f514195df43c58b3655f9b5\",\"dweb:/ipfs/QmRWAQh5ckYnTMNEq9DRWiPvsA8RoB5T4CMYLKX9GRBpaH\"]}},\"version\":1}"}}}}}
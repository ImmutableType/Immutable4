// app/(client)/news-proposals/[id]/page.tsx
'use client'

import React, { useState, useEffect } from 'react';
import Link from 'next/link';
import { useRouter } from 'next/navigation';
import { ethers } from 'ethers';
import ProposalStatusBadge from '../../../../components/proposals/cards/ProposalStatusBadge';

// Contract ABI - minimal interface for getProposal
const PROPOSAL_MANAGER_ABI = [
  {
    "inputs": [{"internalType": "uint256", "name": "proposalId", "type": "uint256"}],
    "name": "getProposal",
    "outputs": [
      {"internalType": "uint256", "name": "id", "type": "uint256"},
      {"internalType": "address", "name": "proposer", "type": "address"},
      {"internalType": "string", "name": "title", "type": "string"},
      {"internalType": "string", "name": "tldr", "type": "string"},
      {"internalType": "string", "name": "description", "type": "string"},
      {"internalType": "string", "name": "category", "type": "string"},
      {"internalType": "string", "name": "location", "type": "string"},
      {"internalType": "string[]", "name": "tags", "type": "string[]"},
      {"internalType": "string", "name": "requirements", "type": "string"},
      {"internalType": "string", "name": "timeline", "type": "string"},
      {"internalType": "string[]", "name": "referenceUrls", "type": "string[]"},
      {"internalType": "uint256", "name": "fundingGoal", "type": "uint256"},
      {"internalType": "uint256", "name": "nftPrice", "type": "uint256"},
      {"internalType": "uint256", "name": "nftCount", "type": "uint256"},
      {"internalType": "uint256", "name": "createdAt", "type": "uint256"},
      {"internalType": "enum ProposalManager.ProposalStatus", "name": "status", "type": "uint8"}
    ],
    "stateMutability": "view",
    "type": "function"
  }
];

const PROPOSAL_MANAGER_ADDRESS = '0xF50909f4dfF653ff52D7562B3Dc0b889d040C112';

// Proposal interface matching contract
interface BlockchainProposal {
  id: bigint;
  proposer: string;
  title: string;
  tldr: string;
  description: string;
  category: string;
  location: string;
  tags: string[];
  requirements: string;
  timeline: string;
  referenceUrls: string[];
  fundingGoal: bigint;
  nftPrice: bigint;
  nftCount: bigint;
  createdAt: bigint;
  status: number;
}

// UI Proposal interface
interface Proposal {
  id: string;
  title: string;
  summary: string;
  proposer: string;
  proposerName?: string;
  createdAt: string;
  location: string;
  category: string;
  status: 'active' | 'funded' | 'cancelled' | 'completed';
  fundingAmount: number;
  fundingGoal: number;
  nftPrice: number;
  nftCount: number;
  nftsSold: number;
  description?: string;
  tags?: string[];
  timeline?: string;
  requirements?: string;
  referenceUrls?: string[];
}

export default function ProposalDetailPage({ params }: { params: Promise<{ id: string }> }) {
  const router = useRouter();
  const [proposal, setProposal] = useState<Proposal | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [id, setId] = useState<string>('');

  // Unwrap params
  useEffect(() => {
    params.then(p => setId(p.id));
  }, [params]);

  // Convert status from contract enum to string
  const getStatusString = (status: number): 'active' | 'funded' | 'cancelled' | 'completed' => {
    switch (status) {
      case 0: return 'active';
      case 1: return 'funded';
      case 2: return 'cancelled';
      case 3: return 'completed';
      default: return 'active';
    }
  };

  useEffect(() => {
    const fetchProposalFromBlockchain = async () => {
      if (!id) return;

      try {
        setLoading(true);
        setError(null);

        // Connect to Flow EVM
        const provider = new ethers.JsonRpcProvider('https://testnet.evm.nodes.onflow.org');
        const contract = new ethers.Contract(PROPOSAL_MANAGER_ADDRESS, PROPOSAL_MANAGER_ABI, provider);

        // Fetch proposal from blockchain
        const proposalData = await contract.getProposal(id);
        
        // Transform blockchain data to UI format
        const transformedProposal: Proposal = {
          id: proposalData.id.toString(),
          title: proposalData.title,
          summary: proposalData.tldr,
          proposer: proposalData.proposer,
          createdAt: new Date(Number(proposalData.createdAt) * 1000).toISOString(),
          location: proposalData.location,
          category: proposalData.category,
          status: getStatusString(proposalData.status),
          fundingAmount: 0, // Will be updated when ProposalEscrow is implemented
          fundingGoal: Number(ethers.formatEther(proposalData.fundingGoal)),
          nftPrice: Number(ethers.formatEther(proposalData.nftPrice)),
          nftCount: Number(proposalData.nftCount),
          nftsSold: 0, // Will be updated when ProposalEscrow is implemented
          description: proposalData.description,
          tags: proposalData.tags.filter(tag => tag !== ''), // Filter empty tags
          timeline: proposalData.timeline,
          requirements: proposalData.requirements,
          referenceUrls: proposalData.referenceUrls.filter(url => url !== ''), // Filter empty URLs
        };

        setProposal(transformedProposal);
        
      } catch (err) {
        console.error('Error fetching proposal from blockchain:', err);
        setError('Failed to load proposal. The proposal may not exist or there was a network error.');
      } finally {
        setLoading(false);
      }
    };

    fetchProposalFromBlockchain();
  }, [id]);

  // Format date to readable format
  const formatDate = (dateString: string) => {
    if (!dateString) return '';
    const date = new Date(dateString);
    return date.toLocaleDateString('en-US', { 
      year: 'numeric', 
      month: 'long', 
      day: 'numeric' 
    });
  };

  // Calculate funding progress percentage
  const calculateFundingProgress = () => {
    if (!proposal) return 0;
    return Math.min(
      Math.round((proposal.fundingAmount / proposal.fundingGoal) * 100),
      100
    );
  };

  // Truncate ethereum address
  const truncateAddress = (address: string) => {
    return `${address.slice(0, 6)}...${address.slice(-4)}`;
  };

  // Render markdown content (simple version)
  const renderMarkdown = (content: string) => {
    return content.split('\n').map((line, i) => {
      if (line.startsWith('## ')) {
        return <h3 key={i} style={{ fontSize: '18px', fontWeight: 'bold', marginTop: '16px', marginBottom: '8px' }}>{line.replace('## ', '')}</h3>;
      } else if (line.startsWith('- ')) {
        return <li key={i} style={{ marginLeft: '20px' }}>{line.replace('- ', '')}</li>;
      } else if (line === '') {
        return <br key={i} />;
      } else {
        return <p key={i} style={{ marginBottom: '12px' }}>{line}</p>;
      }
    });
  };

  if (loading) {
    return (
      <div style={{ textAlign: 'center', padding: '64px 0' }}>
        <p>Loading proposal from blockchain...</p>
      </div>
    );
  }

  if (error || !proposal) {
    return (
      <div style={{ textAlign: 'center', padding: '64px 0' }}>
        <h2 style={{ 
          fontSize: '24px', 
          fontWeight: 'bold', 
          marginBottom: '16px',
          fontFamily: "'Special Elite', monospace"
        }}>
          Proposal Not Found
        </h2>
        <p style={{ marginBottom: '24px' }}>{error || 'The requested proposal could not be found.'}</p>
        <Link
          href="/news-proposals"
          style={{
            padding: '10px 20px',
            backgroundColor: '#000000',
            color: 'white',
            borderRadius: '4px',
            textDecoration: 'none',
            fontSize: '16px'
          }}
        >
          Back to Proposals
        </Link>
      </div>
    );
  }

  const fundingProgress = calculateFundingProgress();

  return (
    <div className="proposal-detail-page">
      {/* Breadcrumb Navigation */}
      <div style={{ 
        display: 'flex', 
        alignItems: 'center', 
        marginBottom: '24px',
        fontSize: '14px'
      }}>
        <Link 
          href="/news-proposals" 
          style={{ color: '#6c757d', textDecoration: 'none' }}
        >
          News Proposals
        </Link>
        <span style={{ margin: '0 8px' }}>/</span>
        <span style={{ color: '#000000', fontWeight: '500' }}>Proposal #{proposal.id}</span>
      </div>

      {/* Proposal Header Section */}
      <div style={{
        backgroundColor: 'white',
        padding: '24px',
        borderRadius: '8px',
        border: '1px solid #D9D9D9',
        marginBottom: '24px'
      }}>
        <div style={{ 
          display: 'flex', 
          justifyContent: 'space-between', 
          alignItems: 'flex-start',
          marginBottom: '16px'
        }}>
          <h1 style={{ 
            fontSize: '28px', 
            fontWeight: 'bold', 
            marginBottom: '8px',
            fontFamily: "'Special Elite', monospace"
          }}>
            {proposal.title}
          </h1>
          <ProposalStatusBadge status={proposal.status} />
        </div>

        <p style={{ fontSize: '16px', color: '#6c757d', marginBottom: '16px' }}>
          Proposed by: {truncateAddress(proposal.proposer)} â€¢ {formatDate(proposal.createdAt)}
        </p>

        <div style={{ marginBottom: '24px' }}>
          <div style={{ display: 'flex', gap: '8px', marginBottom: '16px' }}>
            <span style={{ 
              backgroundColor: 'rgba(0,0,0,0.05)', 
              padding: '4px 12px', 
              borderRadius: '4px',
              fontSize: '14px'
            }}>
              {proposal.category}
            </span>
            <span style={{ 
              backgroundColor: 'rgba(0,0,0,0.05)', 
              padding: '4px 12px', 
              borderRadius: '4px',
              fontSize: '14px'
            }}>
              {proposal.location}
            </span>
          </div>

          <p style={{ 
            fontSize: '18px', 
            lineHeight: '1.6',
            fontStyle: 'italic',
            marginBottom: '16px',
            padding: '16px',
            borderLeft: '3px solid #B3211E',
            backgroundColor: 'rgba(0,0,0,0.02)'
          }}>
            {proposal.summary}
          </p>
        </div>

        {/* NFT Funding Info */}
        <div style={{
          display: 'flex',
          justifyContent: 'space-between',
          alignItems: 'center',
          padding: '16px',
          backgroundColor: 'rgba(0,0,0,0.02)',
          borderRadius: '8px',
          marginBottom: '24px'
        }}>
          <div style={{ textAlign: 'center' }}>
            <div style={{ fontSize: '24px', fontWeight: 'bold' }}>{proposal.nftsSold}</div>
            <div style={{ fontSize: '14px', color: '#6c757d' }}>NFTs Sold</div>
          </div>
          
          <div style={{ textAlign: 'center' }}>
            <div style={{ fontSize: '24px', fontWeight: 'bold' }}>{proposal.nftCount}</div>
            <div style={{ fontSize: '14px', color: '#6c757d' }}>Total NFTs</div>
          </div>
          
          <div style={{ textAlign: 'center' }}>
            <div style={{ fontSize: '24px', fontWeight: 'bold' }}>{proposal.nftPrice} FLOW</div>
            <div style={{ fontSize: '14px', color: '#6c757d' }}>Per NFT</div>
          </div>
          
          <div style={{ textAlign: 'center' }}>
            <div style={{ fontSize: '24px', fontWeight: 'bold' }}>{proposal.fundingGoal} FLOW</div>
            <div style={{ fontSize: '14px', color: '#6c757d' }}>Goal</div>
          </div>
        </div>
        
        {/* Funding Progress */}
        <div style={{ marginBottom: '24px' }}>
          <div style={{ 
            display: 'flex', 
            justifyContent: 'space-between', 
            alignItems: 'center',
            marginBottom: '8px'
          }}>
            <span style={{ fontWeight: 'bold' }}>Funding Progress</span>
            <span>{proposal.nftsSold} of {proposal.nftCount} NFTs funded</span>
          </div>
          <div style={{
            height: '10px',
            backgroundColor: '#E9ECEF',
            borderRadius: '5px',
            overflow: 'hidden'
          }}>
            <div style={{
              height: '100%',
              width: `${fundingProgress}%`,
              backgroundColor: '#B3211E',
              borderRadius: '5px'
            }}></div>
          </div>
        </div>
      </div>

      {/* Proposal Content Section */}
      <div style={{
        backgroundColor: 'white',
        padding: '24px',
        borderRadius: '8px',
        border: '1px solid #D9D9D9',
        marginBottom: '24px'
      }}>
        <h2 style={{ 
          fontSize: '22px', 
          fontWeight: 'bold', 
          marginBottom: '16px',
          fontFamily: "'Special Elite', monospace"
        }}>
          Proposal Details
        </h2>

        <div style={{ fontSize: '16px', lineHeight: '1.6' }}>
          {proposal.description ? (
            renderMarkdown(proposal.description)
          ) : (
            <p>No detailed description provided for this proposal.</p>
          )}
        </div>

        {/* Requirements if available */}
        {proposal.requirements && (
          <div style={{ marginTop: '24px' }}>
            <h3 style={{ 
              fontSize: '18px', 
              fontWeight: 'bold', 
              marginBottom: '12px',
              fontFamily: "'Special Elite', monospace"
            }}>
              Requirements
            </h3>
            <p>{proposal.requirements}</p>
          </div>
        )}

        {/* Timeline if available */}
        {proposal.timeline && (
          <div style={{ marginTop: '24px' }}>
            <h3 style={{ 
              fontSize: '18px', 
              fontWeight: 'bold', 
              marginBottom: '12px',
              fontFamily: "'Special Elite', monospace"
            }}>
              Timeline
            </h3>
            <p>{proposal.timeline}</p>
          </div>
        )}

        {/* Reference URLs if available */}
        {proposal.referenceUrls && proposal.referenceUrls.length > 0 && (
          <div style={{ marginTop: '24px' }}>
            <h3 style={{ 
              fontSize: '18px', 
              fontWeight: 'bold', 
              marginBottom: '12px',
              fontFamily: "'Special Elite', monospace"
            }}>
              Reference Links
            </h3>
            <ul style={{ marginLeft: '20px' }}>
              {proposal.referenceUrls.map((url, index) => (
                <li key={index}>
                  <a href={url} target="_blank" rel="noopener noreferrer" style={{ color: '#B3211E' }}>
                    {url}
                  </a>
                </li>
              ))}
            </ul>
          </div>
        )}

        {/* Tags if available */}
        {proposal.tags && proposal.tags.length > 0 && (
          <div style={{ marginTop: '24px' }}>
            <h3 style={{ 
              fontSize: '18px', 
              fontWeight: 'bold', 
              marginBottom: '12px',
              fontFamily: "'Special Elite', monospace"
            }}>
              Tags
            </h3>
            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>
              {proposal.tags.map((tag, index) => (
                <span 
                  key={index}
                  style={{ 
                    backgroundColor: 'rgba(0,0,0,0.05)', 
                    padding: '4px 12px', 
                    borderRadius: '4px',
                    fontSize: '14px'
                  }}
                >
                  #{tag}
                </span>
              ))}
            </div>
          </div>
        )}
      </div>

      {/* Action Section */}
      <div style={{
        backgroundColor: 'white',
        padding: '24px',
        borderRadius: '8px',
        border: '1px solid #D9D9D9',
        marginBottom: '24px'
      }}>
        <h2 style={{ 
          fontSize: '22px', 
          fontWeight: 'bold', 
          marginBottom: '16px',
          fontFamily: "'Special Elite', monospace"
        }}>
          Fund this Proposal
        </h2>

        <div style={{ 
          padding: '16px', 
          borderRadius: '8px', 
          border: '1px solid #D9D9D9',
          backgroundColor: 'rgba(0,0,0,0.02)'
        }}>
          <p style={{ marginBottom: '16px' }}>
            Support this research by purchasing NFTs. Each NFT costs <strong>{proposal.nftPrice} FLOW</strong> and 
            represents your contribution to making this story happen.
          </p>
          <button 
            style={{
              padding: '10px 0',
              backgroundColor: '#B3211E',
              color: 'white',
              border: 'none',
              borderRadius: '4px',
              fontSize: '14px',
              cursor: 'not-allowed',
              width: '100%',
              opacity: 0.5
            }}
            disabled
          >
            Fund this Proposal (Coming Soon)
          </button>
          <p style={{ fontSize: '12px', color: '#6c757d', marginTop: '8px', textAlign: 'center' }}>
            ProposalEscrow contract deployment pending
          </p>
        </div>
      </div>

      {/* Navigation */}
      <div style={{
        display: 'flex',
        justifyContent: 'space-between',
        marginTop: '32px',
        marginBottom: '32px'
      }}>
        <Link
          href="/news-proposals"
          style={{
            padding: '10px 20px',
            backgroundColor: '#000000',
            color: 'white',
            borderRadius: '4px',
            textDecoration: 'none',
            fontSize: '16px'
          }}
        >
          Back to Proposals
        </Link>
      </div>
    </div>
  );
}